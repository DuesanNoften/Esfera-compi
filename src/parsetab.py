
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'Bodyleft+-left*/rightUMINUSrightCASEWHENNAME INTEGER BOOL COMMENT ALTER DEF PROC PRINT PRINTLINE SEMICOLON COMMA LPAREN RPAREN BREAK REPEAT UNTIL WHILE MOVER ALEATORIO MOVIMIENTO HORN GT LT GTE LTE NE EQUAL ISTRUE CASE WHEN THEN ELSEsymbol : Bodystatement : PROC NAME "(" expression ")"statement : COMMENT statement : PRINTLINE\n    statement : expression\n              | expression statement\n              |\n    \n    statement : PRINT PRINTLINE\n    statement : CASE WHEN expression statementt statementt : THEN statement  statement : CASE expression statement : statement WHEN expression statementstatement : ELSE statement\n    statement : ALEATORIO LPAREN RPAREN\n    \n    statement : HORN LPAREN RPAREN\n    \n    statement : MOVER LPAREN MOVIMIENTO RPAREN\n    expression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expression relation : GT  relation : LT  relation : GTE  relation : LTE  relation : NE  relation : EQUAL expression : expression relation expressionexpression : ISTRUE \'(\' expression \')\' expression : \'-\' expression %prec UMINUSexpression : \'(\' expression \')\'expression : INTEGERexpression : BOOLexpression : NAMEexpression : DEF LPAREN NAME COMMA expression RPAREN SEMICOLONexpression : NAME "(" expression ")"expression : ALTER LPAREN NAME COMMA expression RPAREN SEMICOLON\n    expression : REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON\n    \n    expression : REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON\n    \n    expression : UNTIL LPAREN expression RPAREN statement SEMICOLON\n    \n    expression :  UNTIL LPAREN expression RPAREN\n          |  UNTIL LPAREN expression RPAREN SEMICOLON\n    \n    statement : WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON\n    \n    Body : expression statement expression\n         | expression statement\n         | statement expression\n         | statement\n         | statement statement\n         | statement expression statement\n         | expression expression\n    '
    
_lr_action_items = {'ISTRUE':([0,2,3,4,6,7,8,9,15,16,18,19,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,43,46,47,49,50,51,52,53,57,58,60,61,62,63,64,66,67,69,75,77,78,81,82,83,84,85,86,88,90,91,92,99,100,101,102,106,107,109,110,113,114,],[5,5,5,5,5,-31,-32,-33,-3,-4,5,5,5,5,5,5,5,5,5,-21,-22,-23,-24,-25,-26,5,5,-29,5,5,5,5,-8,5,-11,-13,5,5,-6,-17,-18,-19,-20,-27,5,5,-30,5,-14,-15,-12,-18,-28,-35,5,5,5,-9,5,-16,-41,-2,-10,5,-38,-39,-34,-36,-37,-42,]),'-':([0,2,3,4,6,7,8,9,15,16,18,19,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,46,47,49,50,51,52,53,57,58,59,60,61,62,63,64,66,67,68,69,70,73,74,75,76,77,78,80,81,82,83,84,85,86,88,89,90,91,92,94,95,99,100,101,102,106,107,109,110,113,114,],[4,27,4,4,4,-31,-32,-33,-3,-4,4,4,27,4,4,4,4,4,4,-21,-22,-23,-24,-25,-26,27,4,-29,4,67,4,4,4,-8,4,-11,-13,27,4,-6,67,-17,-18,-19,-20,67,27,4,67,-30,67,67,67,4,67,-14,-15,67,-12,-18,-28,-35,4,4,4,67,-9,4,-16,67,67,-41,-2,-10,4,-38,-39,-34,-36,-37,-42,]),'(':([0,2,3,4,5,6,7,8,9,15,16,18,19,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,43,46,47,48,49,50,51,52,53,57,58,60,61,62,63,64,66,67,69,75,77,78,81,82,83,84,85,86,88,90,91,92,99,100,101,102,106,107,109,110,113,114,],[6,6,6,6,41,6,-31,-32,43,-3,-4,6,6,6,6,6,6,6,6,6,-21,-22,-23,-24,-25,-26,6,6,-29,6,6,6,6,75,-8,6,-11,-13,6,6,-6,-17,-18,-19,-20,-27,6,6,-30,6,-14,-15,-12,-18,-28,-35,6,6,6,-9,6,-16,-41,-2,-10,6,-38,-39,-34,-36,-37,-42,]),'INTEGER':([0,2,3,4,6,7,8,9,15,16,18,19,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,43,46,47,49,50,51,52,53,57,58,60,61,62,63,64,66,67,69,75,77,78,81,82,83,84,85,86,88,90,91,92,99,100,101,102,106,107,109,110,113,114,],[7,7,7,7,7,-31,-32,-33,-3,-4,7,7,7,7,7,7,7,7,7,-21,-22,-23,-24,-25,-26,7,7,-29,7,7,7,7,-8,7,-11,-13,7,7,-6,-17,-18,-19,-20,-27,7,7,-30,7,-14,-15,-12,-18,-28,-35,7,7,7,-9,7,-16,-41,-2,-10,7,-38,-39,-34,-36,-37,-42,]),'BOOL':([0,2,3,4,6,7,8,9,15,16,18,19,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,43,46,47,49,50,51,52,53,57,58,60,61,62,63,64,66,67,69,75,77,78,81,82,83,84,85,86,88,90,91,92,99,100,101,102,106,107,109,110,113,114,],[8,8,8,8,8,-31,-32,-33,-3,-4,8,8,8,8,8,8,8,8,8,-21,-22,-23,-24,-25,-26,8,8,-29,8,8,8,8,-8,8,-11,-13,8,8,-6,-17,-18,-19,-20,-27,8,8,-30,8,-14,-15,-12,-18,-28,-35,8,8,8,-9,8,-16,-41,-2,-10,8,-38,-39,-34,-36,-37,-42,]),'NAME':([0,2,3,4,6,7,8,9,14,15,16,18,19,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,43,44,45,46,47,49,50,51,52,53,57,58,60,61,62,63,64,66,67,69,75,77,78,81,82,83,84,85,86,88,90,91,92,99,100,101,102,106,107,109,110,113,114,],[9,9,9,9,9,-31,-32,-33,48,-3,-4,9,9,9,9,9,9,9,9,9,-21,-22,-23,-24,-25,-26,9,9,-29,9,9,71,72,9,9,-8,9,-11,-13,9,9,-6,-17,-18,-19,-20,-27,9,9,-30,9,-14,-15,-12,-18,-28,-35,9,9,9,-9,9,-16,-41,-2,-10,9,-38,-39,-34,-36,-37,-42,]),'DEF':([0,2,3,4,6,7,8,9,15,16,18,19,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,43,46,47,49,50,51,52,53,57,58,60,61,62,63,64,66,67,69,75,77,78,81,82,83,84,85,86,88,90,91,92,99,100,101,102,106,107,109,110,113,114,],[10,10,10,10,10,-31,-32,-33,-3,-4,10,10,10,10,10,10,10,10,10,-21,-22,-23,-24,-25,-26,10,10,-29,10,10,10,10,-8,10,-11,-13,10,10,-6,-17,-18,-19,-20,-27,10,10,-30,10,-14,-15,-12,-18,-28,-35,10,10,10,-9,10,-16,-41,-2,-10,10,-38,-39,-34,-36,-37,-42,]),'ALTER':([0,2,3,4,6,7,8,9,15,16,18,19,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,43,46,47,49,50,51,52,53,57,58,60,61,62,63,64,66,67,69,75,77,78,81,82,83,84,85,86,88,90,91,92,99,100,101,102,106,107,109,110,113,114,],[11,11,11,11,11,-31,-32,-33,-3,-4,11,11,11,11,11,11,11,11,11,-21,-22,-23,-24,-25,-26,11,11,-29,11,11,11,11,-8,11,-11,-13,11,11,-6,-17,-18,-19,-20,-27,11,11,-30,11,-14,-15,-12,-18,-28,-35,11,11,11,-9,11,-16,-41,-2,-10,11,-38,-39,-34,-36,-37,-42,]),'REPEAT':([0,2,3,4,6,7,8,9,15,16,18,19,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,43,46,47,49,50,51,52,53,57,58,60,61,62,63,64,66,67,69,75,77,78,81,82,83,84,85,86,88,90,91,92,99,100,101,102,106,107,109,110,113,114,],[12,12,12,12,12,-31,-32,-33,-3,-4,12,12,12,12,12,12,12,12,12,-21,-22,-23,-24,-25,-26,12,12,-29,12,12,12,12,-8,12,-11,-13,12,12,-6,-17,-18,-19,-20,-27,12,12,-30,12,-14,-15,-12,-18,-28,-35,12,12,12,-9,12,-16,-41,-2,-10,12,-38,-39,-34,-36,-37,-42,]),'UNTIL':([0,2,3,4,6,7,8,9,15,16,18,19,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,43,46,47,49,50,51,52,53,57,58,60,61,62,63,64,66,67,69,75,77,78,81,82,83,84,85,86,88,90,91,92,99,100,101,102,106,107,109,110,113,114,],[13,13,13,13,13,-31,-32,-33,-3,-4,13,13,13,13,13,13,13,13,13,-21,-22,-23,-24,-25,-26,13,13,-29,13,13,13,13,-8,13,-11,-13,13,13,-6,-17,-18,-19,-20,-27,13,13,-30,13,-14,-15,-12,-18,-28,-35,13,13,13,-9,13,-16,-41,-2,-10,13,-38,-39,-34,-36,-37,-42,]),'PROC':([0,2,3,7,8,9,15,16,19,24,25,38,40,49,51,52,53,58,60,61,62,63,64,66,69,77,78,81,82,83,84,88,90,91,92,99,100,101,102,106,107,109,110,113,114,],[14,14,14,-31,-32,-33,-3,-4,14,14,-6,14,-29,-8,-11,-13,14,-6,-17,-18,-19,-20,-27,14,-30,-14,-15,-12,-18,-28,-35,14,-9,14,-16,-41,-2,-10,14,-38,-39,-34,-36,-37,-42,]),'COMMENT':([0,2,3,7,8,9,15,16,19,24,25,38,40,49,51,52,53,58,60,61,62,63,64,66,69,77,78,81,82,83,84,88,90,91,92,99,100,101,102,106,107,109,110,113,114,],[15,15,15,-31,-32,-33,-3,-4,15,15,-6,15,-29,-8,-11,-13,15,-6,-17,-18,-19,-20,-27,15,-30,-14,-15,-12,-18,-28,-35,15,-9,15,-16,-41,-2,-10,15,-38,-39,-34,-36,-37,-42,]),'PRINTLINE':([0,2,3,7,8,9,15,16,17,19,24,25,38,40,49,51,52,53,58,60,61,62,63,64,66,69,77,78,81,82,83,84,88,90,91,92,99,100,101,102,106,107,109,110,113,114,],[16,16,16,-31,-32,-33,-3,-4,49,16,16,-6,16,-29,-8,-11,-13,16,-6,-17,-18,-19,-20,-27,16,-30,-14,-15,-12,-18,-28,-35,16,-9,16,-16,-41,-2,-10,16,-38,-39,-34,-36,-37,-42,]),'WHEN':([0,2,3,7,8,9,15,16,18,19,24,25,37,38,40,49,51,52,53,58,60,61,62,63,64,65,66,69,77,78,81,82,83,84,88,90,91,92,98,99,100,101,102,106,107,108,109,110,113,114,],[-7,-5,39,-31,-32,-33,-3,-4,50,-7,-5,39,39,-5,-29,-8,-11,39,-5,39,-17,-18,-19,-20,-27,39,-7,-30,-14,-15,39,-18,-28,-35,-7,-9,-7,-16,39,-41,-2,39,-7,-38,-39,39,-34,-36,-37,-42,]),'PRINT':([0,2,3,7,8,9,15,16,19,24,25,38,40,49,51,52,53,58,60,61,62,63,64,66,69,77,78,81,82,83,84,88,90,91,92,99,100,101,102,106,107,109,110,113,114,],[17,17,17,-31,-32,-33,-3,-4,17,17,-6,17,-29,-8,-11,-13,17,-6,-17,-18,-19,-20,-27,17,-30,-14,-15,-12,-18,-28,-35,17,-9,17,-16,-41,-2,-10,17,-38,-39,-34,-36,-37,-42,]),'CASE':([0,2,3,7,8,9,15,16,19,24,25,38,40,49,51,52,53,58,60,61,62,63,64,66,69,77,78,81,82,83,84,88,90,91,92,99,100,101,102,106,107,109,110,113,114,],[18,18,18,-31,-32,-33,-3,-4,18,18,-6,18,-29,-8,-11,-13,18,-6,-17,-18,-19,-20,-27,18,-30,-14,-15,-12,-18,-28,-35,18,-9,18,-16,-41,-2,-10,18,-38,-39,-34,-36,-37,-42,]),'ELSE':([0,2,3,7,8,9,15,16,19,24,25,38,40,49,51,52,53,58,60,61,62,63,64,66,69,77,78,81,82,83,84,88,90,91,92,99,100,101,102,106,107,109,110,113,114,],[19,19,19,-31,-32,-33,-3,-4,19,19,-6,19,-29,-8,-11,-13,19,-6,-17,-18,-19,-20,-27,19,-30,-14,-15,-12,-18,-28,-35,19,-9,19,-16,-41,-2,-10,19,-38,-39,-34,-36,-37,-42,]),'ALEATORIO':([0,2,3,7,8,9,15,16,19,24,25,38,40,49,51,52,53,58,60,61,62,63,64,66,69,77,78,81,82,83,84,88,90,91,92,99,100,101,102,106,107,109,110,113,114,],[20,20,20,-31,-32,-33,-3,-4,20,20,-6,20,-29,-8,-11,-13,20,-6,-17,-18,-19,-20,-27,20,-30,-14,-15,-12,-18,-28,-35,20,-9,20,-16,-41,-2,-10,20,-38,-39,-34,-36,-37,-42,]),'HORN':([0,2,3,7,8,9,15,16,19,24,25,38,40,49,51,52,53,58,60,61,62,63,64,66,69,77,78,81,82,83,84,88,90,91,92,99,100,101,102,106,107,109,110,113,114,],[21,21,21,-31,-32,-33,-3,-4,21,21,-6,21,-29,-8,-11,-13,21,-6,-17,-18,-19,-20,-27,21,-30,-14,-15,-12,-18,-28,-35,21,-9,21,-16,-41,-2,-10,21,-38,-39,-34,-36,-37,-42,]),'MOVER':([0,2,3,7,8,9,15,16,19,24,25,38,40,49,51,52,53,58,60,61,62,63,64,66,69,77,78,81,82,83,84,88,90,91,92,99,100,101,102,106,107,109,110,113,114,],[22,22,22,-31,-32,-33,-3,-4,22,22,-6,22,-29,-8,-11,-13,22,-6,-17,-18,-19,-20,-27,22,-30,-14,-15,-12,-18,-28,-35,22,-9,22,-16,-41,-2,-10,22,-38,-39,-34,-36,-37,-42,]),'WHILE':([0,2,3,7,8,9,15,16,19,24,25,38,40,49,51,52,53,58,60,61,62,63,64,66,69,77,78,81,82,83,84,88,90,91,92,99,100,101,102,106,107,109,110,113,114,],[23,23,23,-31,-32,-33,-3,-4,23,23,-6,23,-29,-8,-11,-13,23,-6,-17,-18,-19,-20,-27,23,-30,-14,-15,-12,-18,-28,-35,23,-9,23,-16,-41,-2,-10,23,-38,-39,-34,-36,-37,-42,]),'$end':([0,1,2,3,7,8,9,15,16,19,24,25,37,38,40,49,51,52,53,58,59,60,61,62,63,64,65,66,69,77,78,81,82,83,84,88,90,91,92,99,100,101,106,107,109,110,113,114,],[-7,0,-5,-7,-31,-32,-33,-3,-4,-7,-5,-6,-47,-5,-29,-8,-11,-13,-5,-6,-43,-17,-18,-19,-20,-27,-6,-7,-30,-14,-15,-12,-18,-28,-35,-40,-9,-7,-16,-41,-2,-10,-38,-39,-34,-36,-37,-42,]),'+':([2,7,8,9,24,38,40,42,51,53,59,60,61,62,63,64,66,68,69,70,73,74,76,80,82,83,84,88,89,94,95,99,106,107,109,110,113,],[26,-31,-32,-33,26,26,-29,26,26,26,26,-17,-18,-19,-20,26,26,26,-30,26,26,26,26,26,-18,-28,-35,-40,26,26,26,-41,-38,-39,-34,-36,-37,]),'*':([2,7,8,9,24,38,40,42,51,53,59,60,61,62,63,64,66,68,69,70,73,74,76,80,82,83,84,88,89,94,95,99,106,107,109,110,113,],[28,-31,-32,-33,28,28,-29,28,28,28,28,28,28,-19,-20,28,28,28,-30,28,28,28,28,28,28,-28,-35,-40,28,28,28,-41,-38,-39,-34,-36,-37,]),'/':([2,7,8,9,24,38,40,42,51,53,59,60,61,62,63,64,66,68,69,70,73,74,76,80,82,83,84,88,89,94,95,99,106,107,109,110,113,],[29,-31,-32,-33,29,29,-29,29,29,29,29,29,29,-19,-20,29,29,29,-30,29,29,29,29,29,29,-28,-35,-40,29,29,29,-41,-38,-39,-34,-36,-37,]),'GT':([2,7,8,9,24,38,40,42,51,53,59,60,61,62,63,64,66,68,69,70,73,74,76,80,82,83,84,88,89,94,95,99,106,107,109,110,113,],[31,-31,-32,-33,31,31,-29,31,31,31,31,-17,-18,-19,-20,31,31,31,-30,31,31,31,31,31,-18,-28,-35,-40,31,31,31,-41,-38,-39,-34,-36,-37,]),'LT':([2,7,8,9,24,38,40,42,51,53,59,60,61,62,63,64,66,68,69,70,73,74,76,80,82,83,84,88,89,94,95,99,106,107,109,110,113,],[32,-31,-32,-33,32,32,-29,32,32,32,32,-17,-18,-19,-20,32,32,32,-30,32,32,32,32,32,-18,-28,-35,-40,32,32,32,-41,-38,-39,-34,-36,-37,]),'GTE':([2,7,8,9,24,38,40,42,51,53,59,60,61,62,63,64,66,68,69,70,73,74,76,80,82,83,84,88,89,94,95,99,106,107,109,110,113,],[33,-31,-32,-33,33,33,-29,33,33,33,33,-17,-18,-19,-20,33,33,33,-30,33,33,33,33,33,-18,-28,-35,-40,33,33,33,-41,-38,-39,-34,-36,-37,]),'LTE':([2,7,8,9,24,38,40,42,51,53,59,60,61,62,63,64,66,68,69,70,73,74,76,80,82,83,84,88,89,94,95,99,106,107,109,110,113,],[34,-31,-32,-33,34,34,-29,34,34,34,34,-17,-18,-19,-20,34,34,34,-30,34,34,34,34,34,-18,-28,-35,-40,34,34,34,-41,-38,-39,-34,-36,-37,]),'NE':([2,7,8,9,24,38,40,42,51,53,59,60,61,62,63,64,66,68,69,70,73,74,76,80,82,83,84,88,89,94,95,99,106,107,109,110,113,],[35,-31,-32,-33,35,35,-29,35,35,35,35,-17,-18,-19,-20,35,35,35,-30,35,35,35,35,35,-18,-28,-35,-40,35,35,35,-41,-38,-39,-34,-36,-37,]),'EQUAL':([2,7,8,9,24,38,40,42,51,53,59,60,61,62,63,64,66,68,69,70,73,74,76,80,82,83,84,88,89,94,95,99,106,107,109,110,113,],[36,-31,-32,-33,36,36,-29,36,36,36,36,-17,-18,-19,-20,36,36,36,-30,36,36,36,36,36,-18,-28,-35,-40,36,36,36,-41,-38,-39,-34,-36,-37,]),')':([7,8,9,40,42,60,62,63,64,68,69,70,82,83,84,88,89,99,106,107,109,110,113,],[-31,-32,-33,-29,69,-17,-19,-20,-27,83,-30,84,-18,-28,-35,-40,100,-41,-38,-39,-34,-36,-37,]),'SEMICOLON':([7,8,9,15,16,19,40,49,51,52,53,58,60,61,62,63,64,66,69,73,77,78,81,82,83,84,88,90,91,92,96,97,98,99,100,101,103,104,106,107,109,110,111,112,113,114,],[-31,-32,-33,-3,-4,-7,-29,-8,-11,-13,-5,-6,-17,-18,-19,-20,-27,-7,-30,87,-14,-15,-12,-18,-28,-35,99,-9,-7,-16,105,106,107,-41,-2,-10,109,110,-38,-39,-34,-36,113,114,-37,-42,]),'RPAREN':([7,8,9,15,16,19,40,49,51,52,53,54,55,58,60,61,62,63,64,66,69,74,77,78,79,80,81,82,83,84,87,88,90,91,92,94,95,99,100,101,102,105,106,107,108,109,110,113,114,],[-31,-32,-33,-3,-4,-7,-29,-8,-11,-13,-5,77,78,-6,-17,-18,-19,-20,-27,-7,-30,88,-14,-15,92,93,-12,-18,-28,-35,97,-40,-9,-7,-16,103,104,-41,-2,-10,-7,111,-38,-39,112,-34,-36,-37,-42,]),'THEN':([7,8,9,40,60,62,63,64,69,76,82,83,84,88,99,106,107,109,110,113,],[-31,-32,-33,-29,-17,-19,-20,-27,-30,91,-18,-28,-35,-40,-41,-38,-39,-34,-36,-37,]),'LPAREN':([10,11,12,13,20,21,22,23,93,],[44,45,46,47,54,55,56,57,102,]),'MOVIMIENTO':([56,],[79,]),'COMMA':([71,72,],[85,86,]),'BREAK':([87,],[96,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Body':([0,],[1,]),'expression':([0,2,3,4,6,18,19,24,25,26,27,28,29,30,38,39,41,43,46,47,50,53,57,66,67,75,85,86,88,91,102,],[2,24,38,40,42,51,53,53,59,60,61,62,63,64,53,66,68,70,73,74,76,53,80,53,82,89,94,95,53,53,53,]),'statement':([0,2,3,19,24,38,53,66,88,91,102,],[3,25,37,52,58,65,58,81,98,101,108,]),'relation':([2,24,38,40,42,51,53,59,60,61,62,63,64,66,68,70,73,74,76,80,82,89,94,95,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'statementt':([76,],[90,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Body","S'",1,None,None,None),
  ('symbol -> Body','symbol',1,'p_symbols','Parser.py',39),
  ('statement -> PROC NAME ( expression )','statement',5,'p_statement_proc','Parser.py',50),
  ('statement -> COMMENT','statement',1,'p_statement_comment','Parser.py',57),
  ('statement -> PRINTLINE','statement',1,'p_statement_printline','Parser.py',60),
  ('statement -> expression','statement',1,'p_statement_expr','Parser.py',64),
  ('statement -> expression statement','statement',2,'p_statement_expr','Parser.py',65),
  ('statement -> <empty>','statement',0,'p_statement_expr','Parser.py',66),
  ('statement -> PRINT PRINTLINE','statement',2,'p_statement_print','Parser.py',75),
  ('statement -> CASE WHEN expression statementt','statement',4,'p_statement_case','Parser.py',80),
  ('statementt -> THEN statement','statementt',2,'p_statement_then','Parser.py',88),
  ('statement -> CASE expression','statement',2,'p_statement_cases','Parser.py',106),
  ('statement -> statement WHEN expression statement','statement',4,'p_statement_when','Parser.py',111),
  ('statement -> ELSE statement','statement',2,'p_statement_else','Parser.py',122),
  ('statement -> ALEATORIO LPAREN RPAREN','statement',3,'p_statement_aleatorio','Parser.py',128),
  ('statement -> HORN LPAREN RPAREN','statement',3,'p_statement_horn','Parser.py',186),
  ('statement -> MOVER LPAREN MOVIMIENTO RPAREN','statement',4,'p_statement_mover','Parser.py',193),
  ('expression -> expression + expression','expression',3,'p_expression_binop','Parser.py',271),
  ('expression -> expression - expression','expression',3,'p_expression_binop','Parser.py',272),
  ('expression -> expression * expression','expression',3,'p_expression_binop','Parser.py',273),
  ('expression -> expression / expression','expression',3,'p_expression_binop','Parser.py',274),
  ('relation -> GT','relation',1,'p_relation_GT','Parser.py',285),
  ('relation -> LT','relation',1,'p_relation_LT','Parser.py',289),
  ('relation -> GTE','relation',1,'p_relation_GTE','Parser.py',293),
  ('relation -> LTE','relation',1,'p_relation_LTE','Parser.py',297),
  ('relation -> NE','relation',1,'p_relation_NE','Parser.py',301),
  ('relation -> EQUAL','relation',1,'p_relation_EQUAL','Parser.py',305),
  ('expression -> expression relation expression','expression',3,'p_expression_compr','Parser.py',309),
  ('expression -> ISTRUE ( expression )','expression',4,'p_expression_istrue','Parser.py',336),
  ('expression -> - expression','expression',2,'p_expression_uminus','Parser.py',348),
  ('expression -> ( expression )','expression',3,'p_expression_group','Parser.py',352),
  ('expression -> INTEGER','expression',1,'p_expression_integer','Parser.py',356),
  ('expression -> BOOL','expression',1,'p_expression_bool','Parser.py',360),
  ('expression -> NAME','expression',1,'p_expression_name','Parser.py',364),
  ('expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON','expression',7,'p_expression_def','Parser.py',372),
  ('expression -> NAME ( expression )','expression',4,'p_expression_change','Parser.py',378),
  ('expression -> ALTER LPAREN NAME COMMA expression RPAREN SEMICOLON','expression',7,'p_expression_math','Parser.py',386),
  ('expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON','expression',8,'p_expression_repeat','Parser.py',399),
  ('expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON','expression',6,'p_expression_repeat_error','Parser.py',405),
  ('expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON','expression',6,'p_expression_until','Parser.py',411),
  ('expression -> UNTIL LPAREN expression RPAREN','expression',4,'p_expression_until_error','Parser.py',417),
  ('expression -> UNTIL LPAREN expression RPAREN SEMICOLON','expression',5,'p_expression_until_error','Parser.py',418),
  ('statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON','statement',8,'p_statement_while','Parser.py',424),
  ('Body -> expression statement expression','Body',3,'p_expression_Body','Parser.py',432),
  ('Body -> expression statement','Body',2,'p_expression_Body','Parser.py',433),
  ('Body -> statement expression','Body',2,'p_expression_Body','Parser.py',434),
  ('Body -> statement','Body',1,'p_expression_Body','Parser.py',435),
  ('Body -> statement statement','Body',2,'p_expression_Body','Parser.py',436),
  ('Body -> statement expression statement','Body',3,'p_expression_Body','Parser.py',437),
  ('Body -> expression expression','Body',2,'p_expression_Body','Parser.py',438),
]
