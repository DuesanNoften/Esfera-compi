
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left+-left*/rightUMINUSrightCASEWHENNAME INTEGER BOOL COMMENT ALTER DEF PROC PRINT PRINTLINE SEMICOLON LPAREN RPAREN BREAK REPEAT UNTIL WHILE MOVER ALEATORIO MOVIMIENTO HORN GT LT GTE LTE NE EQUAL ISTRUE CASE WHEN THEN ELSEstatement : PROC NAME "(" expression ")"statement : COMMENT statement : PRINTLINEstatement : expression\n    statement : PRINT PRINTLINE\n    statement : CASE WHEN expression THEN statement statement : CASE expression statement : statement WHEN expression THEN statementstatement : ELSE statement\n    statement : ALEATORIO LPAREN RPAREN\n    \n    statement : HORN LPAREN RPAREN\n    \n    statement : MOVER LPAREN MOVIMIENTO RPAREN\n    expression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expression relation : GT  relation : LT  relation : GTE  relation : LTE  relation : NE  relation : EQUAL expression : expression relation expressionexpression : ISTRUE \'(\' expression \')\' expression : \'-\' expression %prec UMINUSexpression : \'(\' expression \')\'expression : INTEGERexpression : BOOLexpression : NAMEexpression : DEF "(" NAME "," expression ")"expression : NAME "(" expression ")"expression : ALTER "(" NAME "," expression ")"\n    expression : REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON\n    \n    expression : REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON\n    \n    expression : UNTIL LPAREN expression RPAREN BOOL SEMICOLON\n    \n    expression :  UNTIL LPAREN expression RPAREN\n          |  UNTIL LPAREN expression RPAREN SEMICOLON\n    \n    expression : WHILE BOOL LPAREN expression RPAREN SEMICOLON\n    '
    
_lr_action_items = {'PROC':([0,10,71,74,],[2,2,2,2,]),'COMMENT':([0,10,71,74,],[6,6,6,6,]),'PRINTLINE':([0,8,10,71,74,],[7,38,7,7,7,]),'PRINT':([0,10,71,74,],[8,8,8,8,]),'CASE':([0,10,71,74,],[9,9,9,9,]),'ELSE':([0,10,71,74,],[10,10,10,10,]),'ALEATORIO':([0,10,71,74,],[11,11,11,11,]),'HORN':([0,10,71,74,],[12,12,12,12,]),'MOVER':([0,10,71,74,],[13,13,13,13,]),'ISTRUE':([0,4,9,10,14,23,25,27,28,29,30,31,32,33,34,35,36,37,39,46,49,50,53,70,71,74,77,78,],[15,15,15,15,15,15,15,15,15,15,15,15,-17,-18,-19,-20,-21,-22,15,15,15,15,15,15,15,15,15,15,]),'-':([0,3,4,5,9,10,14,16,17,23,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,45,46,49,50,52,53,54,55,56,57,58,59,60,61,65,68,69,70,71,72,73,74,76,77,78,80,81,85,86,90,92,93,95,96,97,99,],[14,-29,14,28,14,14,14,-27,-28,14,14,28,14,14,14,14,14,-17,-18,-19,-20,-21,-22,14,28,-25,14,14,14,28,14,28,-26,-13,-14,-15,-16,28,28,28,28,28,14,14,28,-31,14,-24,14,14,-36,28,28,28,-37,-30,-32,-34,-35,-38,-33,]),'(':([0,3,4,9,10,14,15,18,19,23,24,25,27,28,29,30,31,32,33,34,35,36,37,39,46,49,50,53,70,71,74,77,78,],[4,25,4,4,4,4,46,47,48,4,53,4,4,4,4,4,4,-17,-18,-19,-20,-21,-22,4,4,4,4,4,4,4,4,4,4,]),'INTEGER':([0,4,9,10,14,23,25,27,28,29,30,31,32,33,34,35,36,37,39,46,49,50,53,70,71,74,77,78,],[16,16,16,16,16,16,16,16,16,16,16,16,-17,-18,-19,-20,-21,-22,16,16,16,16,16,16,16,16,16,16,]),'BOOL':([0,4,9,10,14,22,23,25,27,28,29,30,31,32,33,34,35,36,37,39,46,49,50,53,70,71,74,77,78,80,],[17,17,17,17,17,51,17,17,17,17,17,17,17,-17,-18,-19,-20,-21,-22,17,17,17,17,17,17,17,17,17,17,89,]),'NAME':([0,2,4,9,10,14,23,25,27,28,29,30,31,32,33,34,35,36,37,39,46,47,48,49,50,53,70,71,74,77,78,],[3,24,3,3,3,3,3,3,3,3,3,3,3,-17,-18,-19,-20,-21,-22,3,3,66,67,3,3,3,3,3,3,3,3,]),'DEF':([0,4,9,10,14,23,25,27,28,29,30,31,32,33,34,35,36,37,39,46,49,50,53,70,71,74,77,78,],[18,18,18,18,18,18,18,18,18,18,18,18,-17,-18,-19,-20,-21,-22,18,18,18,18,18,18,18,18,18,18,]),'ALTER':([0,4,9,10,14,23,25,27,28,29,30,31,32,33,34,35,36,37,39,46,49,50,53,70,71,74,77,78,],[19,19,19,19,19,19,19,19,19,19,19,19,-17,-18,-19,-20,-21,-22,19,19,19,19,19,19,19,19,19,19,]),'REPEAT':([0,4,9,10,14,23,25,27,28,29,30,31,32,33,34,35,36,37,39,46,49,50,53,70,71,74,77,78,],[20,20,20,20,20,20,20,20,20,20,20,20,-17,-18,-19,-20,-21,-22,20,20,20,20,20,20,20,20,20,20,]),'UNTIL':([0,4,9,10,14,23,25,27,28,29,30,31,32,33,34,35,36,37,39,46,49,50,53,70,71,74,77,78,],[21,21,21,21,21,21,21,21,21,21,21,21,-17,-18,-19,-20,-21,-22,21,21,21,21,21,21,21,21,21,21,]),'WHILE':([0,4,9,10,14,23,25,27,28,29,30,31,32,33,34,35,36,37,39,46,49,50,53,70,71,74,77,78,],[22,22,22,22,22,22,22,22,22,22,22,22,-17,-18,-19,-20,-21,-22,22,22,22,22,22,22,22,22,22,22,]),'$end':([1,3,5,6,7,16,17,38,40,41,45,55,56,57,58,59,60,62,63,73,75,76,80,82,83,84,90,92,93,95,96,97,99,],[0,-29,-4,-2,-3,-27,-28,-5,-7,-9,-25,-26,-13,-14,-15,-16,-23,-10,-11,-31,-12,-24,-36,-8,-1,-6,-37,-30,-32,-34,-35,-38,-33,]),'WHEN':([1,3,5,6,7,9,16,17,38,40,41,45,55,56,57,58,59,60,62,63,73,75,76,80,82,83,84,90,92,93,95,96,97,99,],[23,-29,-4,-2,-3,39,-27,-28,-5,-7,23,-25,-26,-13,-14,-15,-16,-23,-10,-11,-31,-12,-24,-36,23,-1,23,-37,-30,-32,-34,-35,-38,-33,]),'+':([3,5,16,17,26,40,45,52,54,55,56,57,58,59,60,61,65,68,69,72,73,76,80,81,85,86,90,92,93,95,96,97,99,],[-29,27,-27,-28,27,27,-25,27,27,-26,-13,-14,-15,-16,27,27,27,27,27,27,-31,-24,-36,27,27,27,-37,-30,-32,-34,-35,-38,-33,]),'*':([3,5,16,17,26,40,45,52,54,55,56,57,58,59,60,61,65,68,69,72,73,76,80,81,85,86,90,92,93,95,96,97,99,],[-29,29,-27,-28,29,29,-25,29,29,-26,29,29,-15,-16,29,29,29,29,29,29,-31,-24,-36,29,29,29,-37,-30,-32,-34,-35,-38,-33,]),'/':([3,5,16,17,26,40,45,52,54,55,56,57,58,59,60,61,65,68,69,72,73,76,80,81,85,86,90,92,93,95,96,97,99,],[-29,30,-27,-28,30,30,-25,30,30,-26,30,30,-15,-16,30,30,30,30,30,30,-31,-24,-36,30,30,30,-37,-30,-32,-34,-35,-38,-33,]),'GT':([3,5,16,17,26,40,45,52,54,55,56,57,58,59,60,61,65,68,69,72,73,76,80,81,85,86,90,92,93,95,96,97,99,],[-29,32,-27,-28,32,32,-25,32,32,-26,-13,-14,-15,-16,32,32,32,32,32,32,-31,-24,-36,32,32,32,-37,-30,-32,-34,-35,-38,-33,]),'LT':([3,5,16,17,26,40,45,52,54,55,56,57,58,59,60,61,65,68,69,72,73,76,80,81,85,86,90,92,93,95,96,97,99,],[-29,33,-27,-28,33,33,-25,33,33,-26,-13,-14,-15,-16,33,33,33,33,33,33,-31,-24,-36,33,33,33,-37,-30,-32,-34,-35,-38,-33,]),'GTE':([3,5,16,17,26,40,45,52,54,55,56,57,58,59,60,61,65,68,69,72,73,76,80,81,85,86,90,92,93,95,96,97,99,],[-29,34,-27,-28,34,34,-25,34,34,-26,-13,-14,-15,-16,34,34,34,34,34,34,-31,-24,-36,34,34,34,-37,-30,-32,-34,-35,-38,-33,]),'LTE':([3,5,16,17,26,40,45,52,54,55,56,57,58,59,60,61,65,68,69,72,73,76,80,81,85,86,90,92,93,95,96,97,99,],[-29,35,-27,-28,35,35,-25,35,35,-26,-13,-14,-15,-16,35,35,35,35,35,35,-31,-24,-36,35,35,35,-37,-30,-32,-34,-35,-38,-33,]),'NE':([3,5,16,17,26,40,45,52,54,55,56,57,58,59,60,61,65,68,69,72,73,76,80,81,85,86,90,92,93,95,96,97,99,],[-29,36,-27,-28,36,36,-25,36,36,-26,-13,-14,-15,-16,36,36,36,36,36,36,-31,-24,-36,36,36,36,-37,-30,-32,-34,-35,-38,-33,]),'EQUAL':([3,5,16,17,26,40,45,52,54,55,56,57,58,59,60,61,65,68,69,72,73,76,80,81,85,86,90,92,93,95,96,97,99,],[-29,37,-27,-28,37,37,-25,37,37,-26,-13,-14,-15,-16,37,37,37,37,37,37,-31,-24,-36,37,37,37,-37,-30,-32,-34,-35,-38,-33,]),')':([3,16,17,26,45,54,55,56,57,58,59,60,65,72,73,76,80,85,86,90,92,93,95,96,97,99,],[-29,-27,-28,55,-25,73,-26,-13,-14,-15,-16,-23,76,83,-31,-24,-36,92,93,-37,-30,-32,-34,-35,-38,-33,]),'THEN':([3,16,17,45,52,55,56,57,58,59,60,61,73,76,80,90,92,93,95,96,97,99,],[-29,-27,-28,-25,71,-26,-13,-14,-15,-16,-23,74,-31,-24,-36,-37,-30,-32,-34,-35,-38,-33,]),'SEMICOLON':([3,16,17,45,55,56,57,58,59,60,68,73,76,80,87,88,89,90,91,92,93,95,96,97,98,99,],[-29,-27,-28,-25,-26,-13,-14,-15,-16,-23,79,-31,-24,90,94,95,96,-37,97,-30,-32,-34,-35,-38,99,-33,]),'RPAREN':([3,16,17,42,43,45,55,56,57,58,59,60,64,69,73,76,79,80,81,90,92,93,94,95,96,97,99,],[-29,-27,-28,62,63,-25,-26,-13,-14,-15,-16,-23,75,80,-31,-24,88,-36,91,-37,-30,-32,98,-34,-35,-38,-33,]),'LPAREN':([11,12,13,20,21,51,],[42,43,44,49,50,70,]),'MOVIMIENTO':([44,],[64,]),',':([66,67,],[77,78,]),'BREAK':([79,],[87,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,10,71,74,],[1,41,82,84,]),'expression':([0,4,9,10,14,23,25,27,28,29,30,31,39,46,49,50,53,70,71,74,77,78,],[5,26,40,5,45,52,54,56,57,58,59,60,61,65,68,69,72,81,5,5,85,86,]),'relation':([5,26,40,45,52,54,56,57,58,59,60,61,65,68,69,72,81,85,86,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> PROC NAME ( expression )','statement',5,'p_statement_proc','Parser.py',43),
  ('statement -> COMMENT','statement',1,'p_statement_comment','Parser.py',50),
  ('statement -> PRINTLINE','statement',1,'p_statement_printline','Parser.py',53),
  ('statement -> expression','statement',1,'p_statement_expr','Parser.py',56),
  ('statement -> PRINT PRINTLINE','statement',2,'p_statement_print','Parser.py',61),
  ('statement -> CASE WHEN expression THEN statement','statement',5,'p_statement_case','Parser.py',66),
  ('statement -> CASE expression','statement',2,'p_statement_cases','Parser.py',74),
  ('statement -> statement WHEN expression THEN statement','statement',5,'p_statement_when','Parser.py',79),
  ('statement -> ELSE statement','statement',2,'p_statement_else','Parser.py',90),
  ('statement -> ALEATORIO LPAREN RPAREN','statement',3,'p_statement_aleatorio','Parser.py',96),
  ('statement -> HORN LPAREN RPAREN','statement',3,'p_statement_horn','Parser.py',154),
  ('statement -> MOVER LPAREN MOVIMIENTO RPAREN','statement',4,'p_statement_mover','Parser.py',161),
  ('expression -> expression + expression','expression',3,'p_expression_binop','Parser.py',239),
  ('expression -> expression - expression','expression',3,'p_expression_binop','Parser.py',240),
  ('expression -> expression * expression','expression',3,'p_expression_binop','Parser.py',241),
  ('expression -> expression / expression','expression',3,'p_expression_binop','Parser.py',242),
  ('relation -> GT','relation',1,'p_relation_GT','Parser.py',253),
  ('relation -> LT','relation',1,'p_relation_LT','Parser.py',257),
  ('relation -> GTE','relation',1,'p_relation_GTE','Parser.py',261),
  ('relation -> LTE','relation',1,'p_relation_LTE','Parser.py',265),
  ('relation -> NE','relation',1,'p_relation_NE','Parser.py',269),
  ('relation -> EQUAL','relation',1,'p_relation_EQUAL','Parser.py',273),
  ('expression -> expression relation expression','expression',3,'p_expression_compr','Parser.py',277),
  ('expression -> ISTRUE ( expression )','expression',4,'p_expression_istrue','Parser.py',304),
  ('expression -> - expression','expression',2,'p_expression_uminus','Parser.py',316),
  ('expression -> ( expression )','expression',3,'p_expression_group','Parser.py',320),
  ('expression -> INTEGER','expression',1,'p_expression_integer','Parser.py',324),
  ('expression -> BOOL','expression',1,'p_expression_bool','Parser.py',328),
  ('expression -> NAME','expression',1,'p_expression_name','Parser.py',332),
  ('expression -> DEF ( NAME , expression )','expression',6,'p_expression_def','Parser.py',339),
  ('expression -> NAME ( expression )','expression',4,'p_expression_change','Parser.py',344),
  ('expression -> ALTER ( NAME , expression )','expression',6,'p_expression_math','Parser.py',352),
  ('expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON','expression',8,'p_expression_repeat','Parser.py',363),
  ('expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON','expression',6,'p_expression_repeat_error','Parser.py',369),
  ('expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON','expression',6,'p_expression_until','Parser.py',375),
  ('expression -> UNTIL LPAREN expression RPAREN','expression',4,'p_expression_until_erro','Parser.py',381),
  ('expression -> UNTIL LPAREN expression RPAREN SEMICOLON','expression',5,'p_expression_until_erro','Parser.py',382),
  ('expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON','expression',6,'p_expression_while','Parser.py',388),
]
