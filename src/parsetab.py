
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left+-left*/rightUMINUSrightCASEWHENNAME INTEGER BOOL COMMENT ALTER DEF PROC PRINT PRINTLINE SEMICOLON LPAREN RPAREN BREAK REPEAT UNTIL WHILE MOVER ALEATORIO MOVIMIENTO GT LT GTE LTE NE EQUAL ISTRUE CASE WHEN THEN ELSEstatement : PROC NAME "(" expression ")"statement : COMMENT statement : PRINTLINEstatement : expression\n    statement : PRINT PRINTLINE\n    statement : CASE WHEN expression THEN statement statement : CASE expression statement : statement WHEN expression THEN statement\n    statement : ALEATORIO LPAREN RPAREN\n    \n    statement : MOVER LPAREN MOVIMIENTO RPAREN\n    expression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expression relation : GT  relation : LT  relation : GTE  relation : LTE  relation : NE  relation : EQUAL expression : expression relation expressionexpression : ISTRUE \'(\' expression \')\' expression : \'-\' expression %prec UMINUSexpression : \'(\' expression \')\'expression : INTEGERexpression : BOOLexpression : NAMEexpression : DEF "(" NAME "," expression ")"expression : NAME "(" expression ")"expression : ALTER "(" NAME "," expression ")"\n    expression : REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON\n    \n    expression : REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON\n    \n    expression : UNTIL LPAREN expression RPAREN BOOL SEMICOLON\n    \n    expression :  UNTIL LPAREN expression RPAREN\n          |  UNTIL LPAREN expression RPAREN SEMICOLON\n    \n    expression : WHILE BOOL LPAREN expression RPAREN SEMICOLON\n    '
    
_lr_action_items = {'PROC':([0,66,69,],[2,2,2,]),'COMMENT':([0,66,69,],[6,6,6,]),'PRINTLINE':([0,8,66,69,],[7,36,7,7,]),'PRINT':([0,66,69,],[8,8,8,]),'CASE':([0,66,69,],[9,9,9,]),'ALEATORIO':([0,66,69,],[10,10,10,]),'MOVER':([0,66,69,],[11,11,11,]),'ISTRUE':([0,4,9,12,21,23,25,26,27,28,29,30,31,32,33,34,35,37,42,45,46,49,65,66,69,72,73,],[13,13,13,13,13,13,13,13,13,13,13,-15,-16,-17,-18,-19,-20,13,13,13,13,13,13,13,13,13,13,]),'-':([0,3,4,5,9,12,14,15,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,42,45,46,48,49,50,51,52,53,54,55,56,57,60,63,64,65,66,67,68,69,71,72,73,75,76,80,81,85,87,88,90,91,92,94,],[12,-27,12,26,12,12,-25,-26,12,12,26,12,12,12,12,12,-15,-16,-17,-18,-19,-20,12,26,-23,12,12,12,26,12,26,-24,-11,-12,-13,-14,26,26,26,26,26,12,12,26,-29,12,-22,12,12,-34,26,26,26,-35,-28,-30,-32,-33,-36,-31,]),'(':([0,3,4,9,12,13,16,17,21,22,23,25,26,27,28,29,30,31,32,33,34,35,37,42,45,46,49,65,66,69,72,73,],[4,23,4,4,4,42,43,44,4,49,4,4,4,4,4,4,-15,-16,-17,-18,-19,-20,4,4,4,4,4,4,4,4,4,4,]),'INTEGER':([0,4,9,12,21,23,25,26,27,28,29,30,31,32,33,34,35,37,42,45,46,49,65,66,69,72,73,],[14,14,14,14,14,14,14,14,14,14,14,-15,-16,-17,-18,-19,-20,14,14,14,14,14,14,14,14,14,14,]),'BOOL':([0,4,9,12,20,21,23,25,26,27,28,29,30,31,32,33,34,35,37,42,45,46,49,65,66,69,72,73,75,],[15,15,15,15,47,15,15,15,15,15,15,15,-15,-16,-17,-18,-19,-20,15,15,15,15,15,15,15,15,15,15,84,]),'NAME':([0,2,4,9,12,21,23,25,26,27,28,29,30,31,32,33,34,35,37,42,43,44,45,46,49,65,66,69,72,73,],[3,22,3,3,3,3,3,3,3,3,3,3,-15,-16,-17,-18,-19,-20,3,3,61,62,3,3,3,3,3,3,3,3,]),'DEF':([0,4,9,12,21,23,25,26,27,28,29,30,31,32,33,34,35,37,42,45,46,49,65,66,69,72,73,],[16,16,16,16,16,16,16,16,16,16,16,-15,-16,-17,-18,-19,-20,16,16,16,16,16,16,16,16,16,16,]),'ALTER':([0,4,9,12,21,23,25,26,27,28,29,30,31,32,33,34,35,37,42,45,46,49,65,66,69,72,73,],[17,17,17,17,17,17,17,17,17,17,17,-15,-16,-17,-18,-19,-20,17,17,17,17,17,17,17,17,17,17,]),'REPEAT':([0,4,9,12,21,23,25,26,27,28,29,30,31,32,33,34,35,37,42,45,46,49,65,66,69,72,73,],[18,18,18,18,18,18,18,18,18,18,18,-15,-16,-17,-18,-19,-20,18,18,18,18,18,18,18,18,18,18,]),'UNTIL':([0,4,9,12,21,23,25,26,27,28,29,30,31,32,33,34,35,37,42,45,46,49,65,66,69,72,73,],[19,19,19,19,19,19,19,19,19,19,19,-15,-16,-17,-18,-19,-20,19,19,19,19,19,19,19,19,19,19,]),'WHILE':([0,4,9,12,21,23,25,26,27,28,29,30,31,32,33,34,35,37,42,45,46,49,65,66,69,72,73,],[20,20,20,20,20,20,20,20,20,20,20,-15,-16,-17,-18,-19,-20,20,20,20,20,20,20,20,20,20,20,]),'$end':([1,3,5,6,7,14,15,36,38,41,51,52,53,54,55,56,58,68,70,71,75,77,78,79,85,87,88,90,91,92,94,],[0,-27,-4,-2,-3,-25,-26,-5,-7,-23,-24,-11,-12,-13,-14,-21,-9,-29,-10,-22,-34,-8,-1,-6,-35,-28,-30,-32,-33,-36,-31,]),'WHEN':([1,3,5,6,7,9,14,15,36,38,41,51,52,53,54,55,56,58,68,70,71,75,77,78,79,85,87,88,90,91,92,94,],[21,-27,-4,-2,-3,37,-25,-26,-5,-7,-23,-24,-11,-12,-13,-14,-21,-9,-29,-10,-22,-34,21,-1,21,-35,-28,-30,-32,-33,-36,-31,]),'+':([3,5,14,15,24,38,41,48,50,51,52,53,54,55,56,57,60,63,64,67,68,71,75,76,80,81,85,87,88,90,91,92,94,],[-27,25,-25,-26,25,25,-23,25,25,-24,-11,-12,-13,-14,25,25,25,25,25,25,-29,-22,-34,25,25,25,-35,-28,-30,-32,-33,-36,-31,]),'*':([3,5,14,15,24,38,41,48,50,51,52,53,54,55,56,57,60,63,64,67,68,71,75,76,80,81,85,87,88,90,91,92,94,],[-27,27,-25,-26,27,27,-23,27,27,-24,27,27,-13,-14,27,27,27,27,27,27,-29,-22,-34,27,27,27,-35,-28,-30,-32,-33,-36,-31,]),'/':([3,5,14,15,24,38,41,48,50,51,52,53,54,55,56,57,60,63,64,67,68,71,75,76,80,81,85,87,88,90,91,92,94,],[-27,28,-25,-26,28,28,-23,28,28,-24,28,28,-13,-14,28,28,28,28,28,28,-29,-22,-34,28,28,28,-35,-28,-30,-32,-33,-36,-31,]),'GT':([3,5,14,15,24,38,41,48,50,51,52,53,54,55,56,57,60,63,64,67,68,71,75,76,80,81,85,87,88,90,91,92,94,],[-27,30,-25,-26,30,30,-23,30,30,-24,-11,-12,-13,-14,30,30,30,30,30,30,-29,-22,-34,30,30,30,-35,-28,-30,-32,-33,-36,-31,]),'LT':([3,5,14,15,24,38,41,48,50,51,52,53,54,55,56,57,60,63,64,67,68,71,75,76,80,81,85,87,88,90,91,92,94,],[-27,31,-25,-26,31,31,-23,31,31,-24,-11,-12,-13,-14,31,31,31,31,31,31,-29,-22,-34,31,31,31,-35,-28,-30,-32,-33,-36,-31,]),'GTE':([3,5,14,15,24,38,41,48,50,51,52,53,54,55,56,57,60,63,64,67,68,71,75,76,80,81,85,87,88,90,91,92,94,],[-27,32,-25,-26,32,32,-23,32,32,-24,-11,-12,-13,-14,32,32,32,32,32,32,-29,-22,-34,32,32,32,-35,-28,-30,-32,-33,-36,-31,]),'LTE':([3,5,14,15,24,38,41,48,50,51,52,53,54,55,56,57,60,63,64,67,68,71,75,76,80,81,85,87,88,90,91,92,94,],[-27,33,-25,-26,33,33,-23,33,33,-24,-11,-12,-13,-14,33,33,33,33,33,33,-29,-22,-34,33,33,33,-35,-28,-30,-32,-33,-36,-31,]),'NE':([3,5,14,15,24,38,41,48,50,51,52,53,54,55,56,57,60,63,64,67,68,71,75,76,80,81,85,87,88,90,91,92,94,],[-27,34,-25,-26,34,34,-23,34,34,-24,-11,-12,-13,-14,34,34,34,34,34,34,-29,-22,-34,34,34,34,-35,-28,-30,-32,-33,-36,-31,]),'EQUAL':([3,5,14,15,24,38,41,48,50,51,52,53,54,55,56,57,60,63,64,67,68,71,75,76,80,81,85,87,88,90,91,92,94,],[-27,35,-25,-26,35,35,-23,35,35,-24,-11,-12,-13,-14,35,35,35,35,35,35,-29,-22,-34,35,35,35,-35,-28,-30,-32,-33,-36,-31,]),')':([3,14,15,24,41,50,51,52,53,54,55,56,60,67,68,71,75,80,81,85,87,88,90,91,92,94,],[-27,-25,-26,51,-23,68,-24,-11,-12,-13,-14,-21,71,78,-29,-22,-34,87,88,-35,-28,-30,-32,-33,-36,-31,]),'THEN':([3,14,15,41,48,51,52,53,54,55,56,57,68,71,75,85,87,88,90,91,92,94,],[-27,-25,-26,-23,66,-24,-11,-12,-13,-14,-21,69,-29,-22,-34,-35,-28,-30,-32,-33,-36,-31,]),'SEMICOLON':([3,14,15,41,51,52,53,54,55,56,63,68,71,75,82,83,84,85,86,87,88,90,91,92,93,94,],[-27,-25,-26,-23,-24,-11,-12,-13,-14,-21,74,-29,-22,85,89,90,91,-35,92,-28,-30,-32,-33,-36,94,-31,]),'RPAREN':([3,14,15,39,41,51,52,53,54,55,56,59,64,68,71,74,75,76,85,87,88,89,90,91,92,94,],[-27,-25,-26,58,-23,-24,-11,-12,-13,-14,-21,70,75,-29,-22,83,-34,86,-35,-28,-30,93,-32,-33,-36,-31,]),'LPAREN':([10,11,18,19,47,],[39,40,45,46,65,]),'MOVIMIENTO':([40,],[59,]),',':([61,62,],[72,73,]),'BREAK':([74,],[82,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,66,69,],[1,77,79,]),'expression':([0,4,9,12,21,23,25,26,27,28,29,37,42,45,46,49,65,66,69,72,73,],[5,24,38,41,48,50,52,53,54,55,56,57,60,63,64,67,76,5,5,80,81,]),'relation':([5,24,38,41,48,50,52,53,54,55,56,57,60,63,64,67,76,80,81,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> PROC NAME ( expression )','statement',5,'p_statement_proc','Parser.py',21),
  ('statement -> COMMENT','statement',1,'p_statement_comment','Parser.py',28),
  ('statement -> PRINTLINE','statement',1,'p_statement_printline','Parser.py',31),
  ('statement -> expression','statement',1,'p_statement_expr','Parser.py',34),
  ('statement -> PRINT PRINTLINE','statement',2,'p_statement_print','Parser.py',39),
  ('statement -> CASE WHEN expression THEN statement','statement',5,'p_statement_case','Parser.py',44),
  ('statement -> CASE expression','statement',2,'p_statement_cases','Parser.py',52),
  ('statement -> statement WHEN expression THEN statement','statement',5,'p_statement_when','Parser.py',57),
  ('statement -> ALEATORIO LPAREN RPAREN','statement',3,'p_statement_aleatorio','Parser.py',75),
  ('statement -> MOVER LPAREN MOVIMIENTO RPAREN','statement',4,'p_statement_mover','Parser.py',79),
  ('expression -> expression + expression','expression',3,'p_expression_binop','Parser.py',106),
  ('expression -> expression - expression','expression',3,'p_expression_binop','Parser.py',107),
  ('expression -> expression * expression','expression',3,'p_expression_binop','Parser.py',108),
  ('expression -> expression / expression','expression',3,'p_expression_binop','Parser.py',109),
  ('relation -> GT','relation',1,'p_relation_GT','Parser.py',120),
  ('relation -> LT','relation',1,'p_relation_LT','Parser.py',124),
  ('relation -> GTE','relation',1,'p_relation_GTE','Parser.py',128),
  ('relation -> LTE','relation',1,'p_relation_LTE','Parser.py',132),
  ('relation -> NE','relation',1,'p_relation_NE','Parser.py',136),
  ('relation -> EQUAL','relation',1,'p_relation_EQUAL','Parser.py',140),
  ('expression -> expression relation expression','expression',3,'p_expression_compr','Parser.py',144),
  ('expression -> ISTRUE ( expression )','expression',4,'p_expression_istrue','Parser.py',171),
  ('expression -> - expression','expression',2,'p_expression_uminus','Parser.py',183),
  ('expression -> ( expression )','expression',3,'p_expression_group','Parser.py',187),
  ('expression -> INTEGER','expression',1,'p_expression_integer','Parser.py',191),
  ('expression -> BOOL','expression',1,'p_expression_bool','Parser.py',195),
  ('expression -> NAME','expression',1,'p_expression_name','Parser.py',199),
  ('expression -> DEF ( NAME , expression )','expression',6,'p_expression_def','Parser.py',206),
  ('expression -> NAME ( expression )','expression',4,'p_expression_change','Parser.py',211),
  ('expression -> ALTER ( NAME , expression )','expression',6,'p_expression_math','Parser.py',219),
  ('expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON','expression',8,'p_expression_repeat','Parser.py',230),
  ('expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON','expression',6,'p_expression_repeat_error','Parser.py',236),
  ('expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON','expression',6,'p_expression_until','Parser.py',242),
  ('expression -> UNTIL LPAREN expression RPAREN','expression',4,'p_expression_until_erro','Parser.py',248),
  ('expression -> UNTIL LPAREN expression RPAREN SEMICOLON','expression',5,'p_expression_until_erro','Parser.py',249),
  ('expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON','expression',6,'p_expression_while','Parser.py',255),
]
