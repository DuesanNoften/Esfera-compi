
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left+-left*/rightUMINUSNAME INTEGER BOOL COMMENT ALTER DEF PROC PRINT PRINTLINEstatement : PROC NAME "(" expression ")"statement : COMMENT statement : PRINTLINEstatement : expression\n    statement : PRINT PRINTLINE\n    expression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expressionexpression : \'-\' expression %prec UMINUSexpression : \'(\' expression \')\'expression : INTEGERexpression : BOOLexpression : NAMEexpression : DEF "(" NAME "," expression ")"expression : NAME "(" expression ")"expression : ALTER "(" NAME "," expression ")"'
    
_lr_action_items = {'PROC':([0,],[2,]),'COMMENT':([0,],[6,]),'PRINTLINE':([0,8,],[7,21,]),'PRINT':([0,],[8,]),'-':([0,3,4,5,9,10,11,15,16,17,18,19,20,22,25,26,27,28,29,30,31,34,35,36,37,39,40,41,42,],[9,-14,9,18,9,-12,-13,9,18,9,9,9,9,-10,9,18,-11,-6,-7,-8,-9,18,-16,9,9,18,18,-15,-17,]),'(':([0,3,4,9,12,13,14,15,17,18,19,20,25,36,37,],[4,15,4,4,23,24,25,4,4,4,4,4,4,4,4,]),'INTEGER':([0,4,9,15,17,18,19,20,25,36,37,],[10,10,10,10,10,10,10,10,10,10,10,]),'BOOL':([0,4,9,15,17,18,19,20,25,36,37,],[11,11,11,11,11,11,11,11,11,11,11,]),'NAME':([0,2,4,9,15,17,18,19,20,23,24,25,36,37,],[3,14,3,3,3,3,3,3,3,32,33,3,3,3,]),'DEF':([0,4,9,15,17,18,19,20,25,36,37,],[12,12,12,12,12,12,12,12,12,12,12,]),'ALTER':([0,4,9,15,17,18,19,20,25,36,37,],[13,13,13,13,13,13,13,13,13,13,13,]),'$end':([1,3,5,6,7,10,11,21,22,27,28,29,30,31,35,38,41,42,],[0,-14,-4,-2,-3,-12,-13,-5,-10,-11,-6,-7,-8,-9,-16,-1,-15,-17,]),'+':([3,5,10,11,16,22,26,27,28,29,30,31,34,35,39,40,41,42,],[-14,17,-12,-13,17,-10,17,-11,-6,-7,-8,-9,17,-16,17,17,-15,-17,]),'*':([3,5,10,11,16,22,26,27,28,29,30,31,34,35,39,40,41,42,],[-14,19,-12,-13,19,-10,19,-11,19,19,-8,-9,19,-16,19,19,-15,-17,]),'/':([3,5,10,11,16,22,26,27,28,29,30,31,34,35,39,40,41,42,],[-14,20,-12,-13,20,-10,20,-11,20,20,-8,-9,20,-16,20,20,-15,-17,]),')':([3,10,11,16,22,26,27,28,29,30,31,34,35,39,40,41,42,],[-14,-12,-13,27,-10,35,-11,-6,-7,-8,-9,38,-16,41,42,-15,-17,]),',':([32,33,],[36,37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,4,9,15,17,18,19,20,25,36,37,],[5,16,22,26,28,29,30,31,34,39,40,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> PROC NAME ( expression )','statement',5,'p_statement_proc','Compilador.py',67),
  ('statement -> COMMENT','statement',1,'p_statement_comment','Compilador.py',74),
  ('statement -> PRINTLINE','statement',1,'p_statement_printline','Compilador.py',77),
  ('statement -> expression','statement',1,'p_statement_expr','Compilador.py',79),
  ('statement -> PRINT PRINTLINE','statement',2,'p_statement_print','Compilador.py',84),
  ('expression -> expression + expression','expression',3,'p_expression_binop','Compilador.py',89),
  ('expression -> expression - expression','expression',3,'p_expression_binop','Compilador.py',90),
  ('expression -> expression * expression','expression',3,'p_expression_binop','Compilador.py',91),
  ('expression -> expression / expression','expression',3,'p_expression_binop','Compilador.py',92),
  ('expression -> - expression','expression',2,'p_expression_uminus','Compilador.py',104),
  ('expression -> ( expression )','expression',3,'p_expression_group','Compilador.py',109),
  ('expression -> INTEGER','expression',1,'p_expression_integer','Compilador.py',114),
  ('expression -> BOOL','expression',1,'p_expression_bool','Compilador.py',118),
  ('expression -> NAME','expression',1,'p_expression_name','Compilador.py',123),
  ('expression -> DEF ( NAME , expression )','expression',6,'p_expression_def','Compilador.py',131),
  ('expression -> NAME ( expression )','expression',4,'p_expression_change','Compilador.py',136),
  ('expression -> ALTER ( NAME , expression )','expression',6,'p_expression_math','Compilador.py',144),
]
