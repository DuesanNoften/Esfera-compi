
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left+-left*/rightUMINUSNAME INTEGER BOOL COMMENT ALTER DEF PROC PRINT PRINTLINE SEMICOLON LPAREN RPAREN BREAK REPEAT MOVER ALEATORIO MOVIMIENTO HORNstatement : PROC NAME "(" expression ")"statement : COMMENT statement : PRINTLINEstatement : expression\n    statement : PRINT PRINTLINE\n    \n    statement : ALEATORIO LPAREN RPAREN\n    \n    statement : MOVER LPAREN MOVIMIENTO RPAREN\n    expression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expressionexpression : \'-\' expression %prec UMINUSexpression : \'(\' expression \')\'expression : INTEGERexpression : BOOLexpression : NAMEexpression : DEF "(" NAME "," expression ")"expression : NAME "(" expression ")"expression : ALTER "(" NAME "," expression ")"\n    expression : REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON\n    '
    
_lr_action_items = {'PROC':([0,],[2,]),'COMMENT':([0,],[6,]),'PRINTLINE':([0,8,],[7,24,]),'PRINT':([0,],[8,]),'ALEATORIO':([0,],[9,]),'MOVER':([0,],[10,]),'-':([0,3,4,5,11,12,13,18,19,20,21,22,23,27,30,31,32,33,34,35,36,37,42,43,44,46,47,50,51,53,54,57,],[11,-16,11,21,11,-14,-15,11,21,11,11,11,11,-12,11,11,21,-13,-8,-9,-10,-11,21,21,-18,11,11,21,21,-17,-19,-20,]),'(':([0,3,4,11,14,15,17,18,20,21,22,23,30,31,46,47,],[4,18,4,4,28,29,31,4,4,4,4,4,4,4,4,4,]),'INTEGER':([0,4,11,18,20,21,22,23,30,31,46,47,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'BOOL':([0,4,11,18,20,21,22,23,30,31,46,47,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'NAME':([0,2,4,11,18,20,21,22,23,28,29,30,31,46,47,],[3,17,3,3,3,3,3,3,3,40,41,3,3,3,3,]),'DEF':([0,4,11,18,20,21,22,23,30,31,46,47,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'ALTER':([0,4,11,18,20,21,22,23,30,31,46,47,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'REPEAT':([0,4,11,18,20,21,22,23,30,31,46,47,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'$end':([1,3,5,6,7,12,13,24,27,33,34,35,36,37,38,44,45,49,53,54,57,],[0,-16,-4,-2,-3,-14,-15,-5,-12,-13,-8,-9,-10,-11,-6,-18,-7,-1,-17,-19,-20,]),'+':([3,5,12,13,19,27,32,33,34,35,36,37,42,43,44,50,51,53,54,57,],[-16,20,-14,-15,20,-12,20,-13,-8,-9,-10,-11,20,20,-18,20,20,-17,-19,-20,]),'*':([3,5,12,13,19,27,32,33,34,35,36,37,42,43,44,50,51,53,54,57,],[-16,22,-14,-15,22,-12,22,-13,22,22,-10,-11,22,22,-18,22,22,-17,-19,-20,]),'/':([3,5,12,13,19,27,32,33,34,35,36,37,42,43,44,50,51,53,54,57,],[-16,23,-14,-15,23,-12,23,-13,23,23,-10,-11,23,23,-18,23,23,-17,-19,-20,]),')':([3,12,13,19,27,32,33,34,35,36,37,43,44,50,51,53,54,57,],[-16,-14,-15,33,-12,44,-13,-8,-9,-10,-11,49,-18,53,54,-17,-19,-20,]),'SEMICOLON':([3,12,13,27,33,34,35,36,37,42,44,52,53,54,56,57,],[-16,-14,-15,-12,-13,-8,-9,-10,-11,48,-18,55,-17,-19,57,-20,]),'LPAREN':([9,10,16,],[25,26,30,]),'RPAREN':([25,39,55,],[38,45,56,]),'MOVIMIENTO':([26,],[39,]),',':([40,41,],[46,47,]),'BREAK':([48,],[52,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,4,11,18,20,21,22,23,30,31,46,47,],[5,19,27,32,34,35,36,37,42,43,50,51,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> PROC NAME ( expression )','statement',5,'p_statement_proc','Compilador.py',79),
  ('statement -> COMMENT','statement',1,'p_statement_comment','Compilador.py',86),
  ('statement -> PRINTLINE','statement',1,'p_statement_printline','Compilador.py',89),
  ('statement -> expression','statement',1,'p_statement_expr','Compilador.py',91),
  ('statement -> PRINT PRINTLINE','statement',2,'p_statement_print','Compilador.py',96),
  ('statement -> ALEATORIO LPAREN RPAREN','statement',3,'p_statement_aleatorio','Compilador.py',102),
  ('statement -> MOVER LPAREN MOVIMIENTO RPAREN','statement',4,'p_statement_mover','Compilador.py',106),
  ('expression -> expression + expression','expression',3,'p_expression_binop','Compilador.py',110),
  ('expression -> expression - expression','expression',3,'p_expression_binop','Compilador.py',111),
  ('expression -> expression * expression','expression',3,'p_expression_binop','Compilador.py',112),
  ('expression -> expression / expression','expression',3,'p_expression_binop','Compilador.py',113),
  ('expression -> - expression','expression',2,'p_expression_uminus','Compilador.py',125),
  ('expression -> ( expression )','expression',3,'p_expression_group','Compilador.py',130),
  ('expression -> INTEGER','expression',1,'p_expression_integer','Compilador.py',135),
  ('expression -> BOOL','expression',1,'p_expression_bool','Compilador.py',139),
  ('expression -> NAME','expression',1,'p_expression_name','Compilador.py',145),
  ('expression -> DEF ( NAME , expression )','expression',6,'p_expression_def','Compilador.py',153),
  ('expression -> NAME ( expression )','expression',4,'p_expression_change','Compilador.py',158),
  ('expression -> ALTER ( NAME , expression )','expression',6,'p_expression_math','Compilador.py',166),
  ('expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON','expression',8,'p_expression_repeat','Compilador.py',177),
]
