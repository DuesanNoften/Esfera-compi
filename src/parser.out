Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    ELSE

Grammar

Rule 0     S' -> statement
Rule 1     statement -> PROC NAME ( expression )
Rule 2     statement -> COMMENT
Rule 3     statement -> PRINTLINE
Rule 4     statement -> expression
Rule 5     statement -> PRINT PRINTLINE
Rule 6     statement -> CASE WHEN expression THEN statement
Rule 7     statement -> CASE expression
Rule 8     statement -> statement WHEN expression THEN statement
Rule 9     statement -> ALEATORIO LPAREN RPAREN
Rule 10    statement -> MOVER LPAREN MOVIMIENTO RPAREN
Rule 11    expression -> expression + expression
Rule 12    expression -> expression - expression
Rule 13    expression -> expression * expression
Rule 14    expression -> expression / expression
Rule 15    relation -> GT
Rule 16    relation -> LT
Rule 17    relation -> GTE
Rule 18    relation -> LTE
Rule 19    relation -> NE
Rule 20    relation -> EQUAL
Rule 21    expression -> expression relation expression
Rule 22    expression -> ISTRUE ( expression )
Rule 23    expression -> - expression
Rule 24    expression -> ( expression )
Rule 25    expression -> INTEGER
Rule 26    expression -> BOOL
Rule 27    expression -> NAME
Rule 28    expression -> DEF ( NAME , expression )
Rule 29    expression -> NAME ( expression )
Rule 30    expression -> ALTER ( NAME , expression )
Rule 31    expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
Rule 32    expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
Rule 33    expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON
Rule 34    expression -> UNTIL LPAREN expression RPAREN
Rule 35    expression -> UNTIL LPAREN expression RPAREN SEMICOLON
Rule 36    expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON

Terminals, with rules where they appear

(                    : 1 22 24 28 29 30
)                    : 1 22 24 28 29 30
*                    : 13
+                    : 11
,                    : 28 30
-                    : 12 23
/                    : 14
ALEATORIO            : 9
ALTER                : 30
BOOL                 : 26 33 36
BREAK                : 31
CASE                 : 6 7
COMMENT              : 2
DEF                  : 28
ELSE                 : 
EQUAL                : 20
GT                   : 15
GTE                  : 17
INTEGER              : 25
ISTRUE               : 22
LPAREN               : 9 10 31 32 33 34 35 36
LT                   : 16
LTE                  : 18
MOVER                : 10
MOVIMIENTO           : 10
NAME                 : 1 27 28 29 30
NE                   : 19
PRINT                : 5
PRINTLINE            : 3 5
PROC                 : 1
REPEAT               : 31 32
RPAREN               : 9 10 31 32 33 34 35 36
SEMICOLON            : 31 31 31 32 32 33 35 36
THEN                 : 6 8
UNTIL                : 33 34 35
WHEN                 : 6 8
WHILE                : 36
error                : 

Nonterminals, with rules where they appear

expression           : 1 4 6 7 8 11 11 12 12 13 13 14 14 21 21 22 23 24 28 29 30 31 32 33 34 35 36
relation             : 21
statement            : 6 8 8 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . PROC NAME ( expression )
    (2) statement -> . COMMENT
    (3) statement -> . PRINTLINE
    (4) statement -> . expression
    (5) statement -> . PRINT PRINTLINE
    (6) statement -> . CASE WHEN expression THEN statement
    (7) statement -> . CASE expression
    (8) statement -> . statement WHEN expression THEN statement
    (9) statement -> . ALEATORIO LPAREN RPAREN
    (10) statement -> . MOVER LPAREN MOVIMIENTO RPAREN
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (21) expression -> . expression relation expression
    (22) expression -> . ISTRUE ( expression )
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . INTEGER
    (26) expression -> . BOOL
    (27) expression -> . NAME
    (28) expression -> . DEF ( NAME , expression )
    (29) expression -> . NAME ( expression )
    (30) expression -> . ALTER ( NAME , expression )
    (31) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (33) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (34) expression -> . UNTIL LPAREN expression RPAREN
    (35) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (36) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    PROC            shift and go to state 2
    COMMENT         shift and go to state 6
    PRINTLINE       shift and go to state 7
    PRINT           shift and go to state 8
    CASE            shift and go to state 9
    ALEATORIO       shift and go to state 10
    MOVER           shift and go to state 11
    ISTRUE          shift and go to state 13
    -               shift and go to state 12
    (               shift and go to state 4
    INTEGER         shift and go to state 14
    BOOL            shift and go to state 15
    NAME            shift and go to state 3
    DEF             shift and go to state 16
    ALTER           shift and go to state 17
    REPEAT          shift and go to state 18
    UNTIL           shift and go to state 19
    WHILE           shift and go to state 20

    statement                      shift and go to state 1
    expression                     shift and go to state 5

state 1

    (0) S' -> statement .
    (8) statement -> statement . WHEN expression THEN statement

    WHEN            shift and go to state 21


state 2

    (1) statement -> PROC . NAME ( expression )

    NAME            shift and go to state 22


state 3

    (27) expression -> NAME .
    (29) expression -> NAME . ( expression )

    +               reduce using rule 27 (expression -> NAME .)
    -               reduce using rule 27 (expression -> NAME .)
    *               reduce using rule 27 (expression -> NAME .)
    /               reduce using rule 27 (expression -> NAME .)
    GT              reduce using rule 27 (expression -> NAME .)
    LT              reduce using rule 27 (expression -> NAME .)
    GTE             reduce using rule 27 (expression -> NAME .)
    LTE             reduce using rule 27 (expression -> NAME .)
    NE              reduce using rule 27 (expression -> NAME .)
    EQUAL           reduce using rule 27 (expression -> NAME .)
    WHEN            reduce using rule 27 (expression -> NAME .)
    $end            reduce using rule 27 (expression -> NAME .)
    )               reduce using rule 27 (expression -> NAME .)
    THEN            reduce using rule 27 (expression -> NAME .)
    SEMICOLON       reduce using rule 27 (expression -> NAME .)
    RPAREN          reduce using rule 27 (expression -> NAME .)
    (               shift and go to state 23


state 4

    (24) expression -> ( . expression )
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (21) expression -> . expression relation expression
    (22) expression -> . ISTRUE ( expression )
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . INTEGER
    (26) expression -> . BOOL
    (27) expression -> . NAME
    (28) expression -> . DEF ( NAME , expression )
    (29) expression -> . NAME ( expression )
    (30) expression -> . ALTER ( NAME , expression )
    (31) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (33) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (34) expression -> . UNTIL LPAREN expression RPAREN
    (35) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (36) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 13
    -               shift and go to state 12
    (               shift and go to state 4
    INTEGER         shift and go to state 14
    BOOL            shift and go to state 15
    NAME            shift and go to state 3
    DEF             shift and go to state 16
    ALTER           shift and go to state 17
    REPEAT          shift and go to state 18
    UNTIL           shift and go to state 19
    WHILE           shift and go to state 20

    expression                     shift and go to state 24

state 5

    (4) statement -> expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (21) expression -> expression . relation expression
    (15) relation -> . GT
    (16) relation -> . LT
    (17) relation -> . GTE
    (18) relation -> . LTE
    (19) relation -> . NE
    (20) relation -> . EQUAL

    WHEN            reduce using rule 4 (statement -> expression .)
    $end            reduce using rule 4 (statement -> expression .)
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    GT              shift and go to state 30
    LT              shift and go to state 31
    GTE             shift and go to state 32
    LTE             shift and go to state 33
    NE              shift and go to state 34
    EQUAL           shift and go to state 35

    relation                       shift and go to state 29

state 6

    (2) statement -> COMMENT .

    WHEN            reduce using rule 2 (statement -> COMMENT .)
    $end            reduce using rule 2 (statement -> COMMENT .)


state 7

    (3) statement -> PRINTLINE .

    WHEN            reduce using rule 3 (statement -> PRINTLINE .)
    $end            reduce using rule 3 (statement -> PRINTLINE .)


state 8

    (5) statement -> PRINT . PRINTLINE

    PRINTLINE       shift and go to state 36


state 9

    (6) statement -> CASE . WHEN expression THEN statement
    (7) statement -> CASE . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (21) expression -> . expression relation expression
    (22) expression -> . ISTRUE ( expression )
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . INTEGER
    (26) expression -> . BOOL
    (27) expression -> . NAME
    (28) expression -> . DEF ( NAME , expression )
    (29) expression -> . NAME ( expression )
    (30) expression -> . ALTER ( NAME , expression )
    (31) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (33) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (34) expression -> . UNTIL LPAREN expression RPAREN
    (35) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (36) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    WHEN            shift and go to state 37
    ISTRUE          shift and go to state 13
    -               shift and go to state 12
    (               shift and go to state 4
    INTEGER         shift and go to state 14
    BOOL            shift and go to state 15
    NAME            shift and go to state 3
    DEF             shift and go to state 16
    ALTER           shift and go to state 17
    REPEAT          shift and go to state 18
    UNTIL           shift and go to state 19
    WHILE           shift and go to state 20

    expression                     shift and go to state 38

state 10

    (9) statement -> ALEATORIO . LPAREN RPAREN

    LPAREN          shift and go to state 39


state 11

    (10) statement -> MOVER . LPAREN MOVIMIENTO RPAREN

    LPAREN          shift and go to state 40


state 12

    (23) expression -> - . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (21) expression -> . expression relation expression
    (22) expression -> . ISTRUE ( expression )
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . INTEGER
    (26) expression -> . BOOL
    (27) expression -> . NAME
    (28) expression -> . DEF ( NAME , expression )
    (29) expression -> . NAME ( expression )
    (30) expression -> . ALTER ( NAME , expression )
    (31) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (33) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (34) expression -> . UNTIL LPAREN expression RPAREN
    (35) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (36) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 13
    -               shift and go to state 12
    (               shift and go to state 4
    INTEGER         shift and go to state 14
    BOOL            shift and go to state 15
    NAME            shift and go to state 3
    DEF             shift and go to state 16
    ALTER           shift and go to state 17
    REPEAT          shift and go to state 18
    UNTIL           shift and go to state 19
    WHILE           shift and go to state 20

    expression                     shift and go to state 41

state 13

    (22) expression -> ISTRUE . ( expression )

    (               shift and go to state 42


state 14

    (25) expression -> INTEGER .

    +               reduce using rule 25 (expression -> INTEGER .)
    -               reduce using rule 25 (expression -> INTEGER .)
    *               reduce using rule 25 (expression -> INTEGER .)
    /               reduce using rule 25 (expression -> INTEGER .)
    GT              reduce using rule 25 (expression -> INTEGER .)
    LT              reduce using rule 25 (expression -> INTEGER .)
    GTE             reduce using rule 25 (expression -> INTEGER .)
    LTE             reduce using rule 25 (expression -> INTEGER .)
    NE              reduce using rule 25 (expression -> INTEGER .)
    EQUAL           reduce using rule 25 (expression -> INTEGER .)
    WHEN            reduce using rule 25 (expression -> INTEGER .)
    $end            reduce using rule 25 (expression -> INTEGER .)
    )               reduce using rule 25 (expression -> INTEGER .)
    THEN            reduce using rule 25 (expression -> INTEGER .)
    SEMICOLON       reduce using rule 25 (expression -> INTEGER .)
    RPAREN          reduce using rule 25 (expression -> INTEGER .)


state 15

    (26) expression -> BOOL .

    +               reduce using rule 26 (expression -> BOOL .)
    -               reduce using rule 26 (expression -> BOOL .)
    *               reduce using rule 26 (expression -> BOOL .)
    /               reduce using rule 26 (expression -> BOOL .)
    GT              reduce using rule 26 (expression -> BOOL .)
    LT              reduce using rule 26 (expression -> BOOL .)
    GTE             reduce using rule 26 (expression -> BOOL .)
    LTE             reduce using rule 26 (expression -> BOOL .)
    NE              reduce using rule 26 (expression -> BOOL .)
    EQUAL           reduce using rule 26 (expression -> BOOL .)
    WHEN            reduce using rule 26 (expression -> BOOL .)
    $end            reduce using rule 26 (expression -> BOOL .)
    )               reduce using rule 26 (expression -> BOOL .)
    THEN            reduce using rule 26 (expression -> BOOL .)
    SEMICOLON       reduce using rule 26 (expression -> BOOL .)
    RPAREN          reduce using rule 26 (expression -> BOOL .)


state 16

    (28) expression -> DEF . ( NAME , expression )

    (               shift and go to state 43


state 17

    (30) expression -> ALTER . ( NAME , expression )

    (               shift and go to state 44


state 18

    (31) expression -> REPEAT . LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> REPEAT . LPAREN expression SEMICOLON RPAREN SEMICOLON

    LPAREN          shift and go to state 45


state 19

    (33) expression -> UNTIL . LPAREN expression RPAREN BOOL SEMICOLON
    (34) expression -> UNTIL . LPAREN expression RPAREN
    (35) expression -> UNTIL . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 46


state 20

    (36) expression -> WHILE . BOOL LPAREN expression RPAREN SEMICOLON

    BOOL            shift and go to state 47


state 21

    (8) statement -> statement WHEN . expression THEN statement
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (21) expression -> . expression relation expression
    (22) expression -> . ISTRUE ( expression )
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . INTEGER
    (26) expression -> . BOOL
    (27) expression -> . NAME
    (28) expression -> . DEF ( NAME , expression )
    (29) expression -> . NAME ( expression )
    (30) expression -> . ALTER ( NAME , expression )
    (31) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (33) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (34) expression -> . UNTIL LPAREN expression RPAREN
    (35) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (36) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 13
    -               shift and go to state 12
    (               shift and go to state 4
    INTEGER         shift and go to state 14
    BOOL            shift and go to state 15
    NAME            shift and go to state 3
    DEF             shift and go to state 16
    ALTER           shift and go to state 17
    REPEAT          shift and go to state 18
    UNTIL           shift and go to state 19
    WHILE           shift and go to state 20

    expression                     shift and go to state 48

state 22

    (1) statement -> PROC NAME . ( expression )

    (               shift and go to state 49


state 23

    (29) expression -> NAME ( . expression )
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (21) expression -> . expression relation expression
    (22) expression -> . ISTRUE ( expression )
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . INTEGER
    (26) expression -> . BOOL
    (27) expression -> . NAME
    (28) expression -> . DEF ( NAME , expression )
    (29) expression -> . NAME ( expression )
    (30) expression -> . ALTER ( NAME , expression )
    (31) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (33) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (34) expression -> . UNTIL LPAREN expression RPAREN
    (35) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (36) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 13
    -               shift and go to state 12
    (               shift and go to state 4
    INTEGER         shift and go to state 14
    BOOL            shift and go to state 15
    NAME            shift and go to state 3
    DEF             shift and go to state 16
    ALTER           shift and go to state 17
    REPEAT          shift and go to state 18
    UNTIL           shift and go to state 19
    WHILE           shift and go to state 20

    expression                     shift and go to state 50

state 24

    (24) expression -> ( expression . )
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (21) expression -> expression . relation expression
    (15) relation -> . GT
    (16) relation -> . LT
    (17) relation -> . GTE
    (18) relation -> . LTE
    (19) relation -> . NE
    (20) relation -> . EQUAL

    )               shift and go to state 51
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    GT              shift and go to state 30
    LT              shift and go to state 31
    GTE             shift and go to state 32
    LTE             shift and go to state 33
    NE              shift and go to state 34
    EQUAL           shift and go to state 35

    relation                       shift and go to state 29

state 25

    (11) expression -> expression + . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (21) expression -> . expression relation expression
    (22) expression -> . ISTRUE ( expression )
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . INTEGER
    (26) expression -> . BOOL
    (27) expression -> . NAME
    (28) expression -> . DEF ( NAME , expression )
    (29) expression -> . NAME ( expression )
    (30) expression -> . ALTER ( NAME , expression )
    (31) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (33) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (34) expression -> . UNTIL LPAREN expression RPAREN
    (35) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (36) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 13
    -               shift and go to state 12
    (               shift and go to state 4
    INTEGER         shift and go to state 14
    BOOL            shift and go to state 15
    NAME            shift and go to state 3
    DEF             shift and go to state 16
    ALTER           shift and go to state 17
    REPEAT          shift and go to state 18
    UNTIL           shift and go to state 19
    WHILE           shift and go to state 20

    expression                     shift and go to state 52

state 26

    (12) expression -> expression - . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (21) expression -> . expression relation expression
    (22) expression -> . ISTRUE ( expression )
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . INTEGER
    (26) expression -> . BOOL
    (27) expression -> . NAME
    (28) expression -> . DEF ( NAME , expression )
    (29) expression -> . NAME ( expression )
    (30) expression -> . ALTER ( NAME , expression )
    (31) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (33) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (34) expression -> . UNTIL LPAREN expression RPAREN
    (35) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (36) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 13
    -               shift and go to state 12
    (               shift and go to state 4
    INTEGER         shift and go to state 14
    BOOL            shift and go to state 15
    NAME            shift and go to state 3
    DEF             shift and go to state 16
    ALTER           shift and go to state 17
    REPEAT          shift and go to state 18
    UNTIL           shift and go to state 19
    WHILE           shift and go to state 20

    expression                     shift and go to state 53

state 27

    (13) expression -> expression * . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (21) expression -> . expression relation expression
    (22) expression -> . ISTRUE ( expression )
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . INTEGER
    (26) expression -> . BOOL
    (27) expression -> . NAME
    (28) expression -> . DEF ( NAME , expression )
    (29) expression -> . NAME ( expression )
    (30) expression -> . ALTER ( NAME , expression )
    (31) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (33) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (34) expression -> . UNTIL LPAREN expression RPAREN
    (35) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (36) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 13
    -               shift and go to state 12
    (               shift and go to state 4
    INTEGER         shift and go to state 14
    BOOL            shift and go to state 15
    NAME            shift and go to state 3
    DEF             shift and go to state 16
    ALTER           shift and go to state 17
    REPEAT          shift and go to state 18
    UNTIL           shift and go to state 19
    WHILE           shift and go to state 20

    expression                     shift and go to state 54

state 28

    (14) expression -> expression / . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (21) expression -> . expression relation expression
    (22) expression -> . ISTRUE ( expression )
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . INTEGER
    (26) expression -> . BOOL
    (27) expression -> . NAME
    (28) expression -> . DEF ( NAME , expression )
    (29) expression -> . NAME ( expression )
    (30) expression -> . ALTER ( NAME , expression )
    (31) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (33) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (34) expression -> . UNTIL LPAREN expression RPAREN
    (35) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (36) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 13
    -               shift and go to state 12
    (               shift and go to state 4
    INTEGER         shift and go to state 14
    BOOL            shift and go to state 15
    NAME            shift and go to state 3
    DEF             shift and go to state 16
    ALTER           shift and go to state 17
    REPEAT          shift and go to state 18
    UNTIL           shift and go to state 19
    WHILE           shift and go to state 20

    expression                     shift and go to state 55

state 29

    (21) expression -> expression relation . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (21) expression -> . expression relation expression
    (22) expression -> . ISTRUE ( expression )
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . INTEGER
    (26) expression -> . BOOL
    (27) expression -> . NAME
    (28) expression -> . DEF ( NAME , expression )
    (29) expression -> . NAME ( expression )
    (30) expression -> . ALTER ( NAME , expression )
    (31) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (33) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (34) expression -> . UNTIL LPAREN expression RPAREN
    (35) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (36) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 13
    -               shift and go to state 12
    (               shift and go to state 4
    INTEGER         shift and go to state 14
    BOOL            shift and go to state 15
    NAME            shift and go to state 3
    DEF             shift and go to state 16
    ALTER           shift and go to state 17
    REPEAT          shift and go to state 18
    UNTIL           shift and go to state 19
    WHILE           shift and go to state 20

    expression                     shift and go to state 56

state 30

    (15) relation -> GT .

    ISTRUE          reduce using rule 15 (relation -> GT .)
    -               reduce using rule 15 (relation -> GT .)
    (               reduce using rule 15 (relation -> GT .)
    INTEGER         reduce using rule 15 (relation -> GT .)
    BOOL            reduce using rule 15 (relation -> GT .)
    NAME            reduce using rule 15 (relation -> GT .)
    DEF             reduce using rule 15 (relation -> GT .)
    ALTER           reduce using rule 15 (relation -> GT .)
    REPEAT          reduce using rule 15 (relation -> GT .)
    UNTIL           reduce using rule 15 (relation -> GT .)
    WHILE           reduce using rule 15 (relation -> GT .)


state 31

    (16) relation -> LT .

    ISTRUE          reduce using rule 16 (relation -> LT .)
    -               reduce using rule 16 (relation -> LT .)
    (               reduce using rule 16 (relation -> LT .)
    INTEGER         reduce using rule 16 (relation -> LT .)
    BOOL            reduce using rule 16 (relation -> LT .)
    NAME            reduce using rule 16 (relation -> LT .)
    DEF             reduce using rule 16 (relation -> LT .)
    ALTER           reduce using rule 16 (relation -> LT .)
    REPEAT          reduce using rule 16 (relation -> LT .)
    UNTIL           reduce using rule 16 (relation -> LT .)
    WHILE           reduce using rule 16 (relation -> LT .)


state 32

    (17) relation -> GTE .

    ISTRUE          reduce using rule 17 (relation -> GTE .)
    -               reduce using rule 17 (relation -> GTE .)
    (               reduce using rule 17 (relation -> GTE .)
    INTEGER         reduce using rule 17 (relation -> GTE .)
    BOOL            reduce using rule 17 (relation -> GTE .)
    NAME            reduce using rule 17 (relation -> GTE .)
    DEF             reduce using rule 17 (relation -> GTE .)
    ALTER           reduce using rule 17 (relation -> GTE .)
    REPEAT          reduce using rule 17 (relation -> GTE .)
    UNTIL           reduce using rule 17 (relation -> GTE .)
    WHILE           reduce using rule 17 (relation -> GTE .)


state 33

    (18) relation -> LTE .

    ISTRUE          reduce using rule 18 (relation -> LTE .)
    -               reduce using rule 18 (relation -> LTE .)
    (               reduce using rule 18 (relation -> LTE .)
    INTEGER         reduce using rule 18 (relation -> LTE .)
    BOOL            reduce using rule 18 (relation -> LTE .)
    NAME            reduce using rule 18 (relation -> LTE .)
    DEF             reduce using rule 18 (relation -> LTE .)
    ALTER           reduce using rule 18 (relation -> LTE .)
    REPEAT          reduce using rule 18 (relation -> LTE .)
    UNTIL           reduce using rule 18 (relation -> LTE .)
    WHILE           reduce using rule 18 (relation -> LTE .)


state 34

    (19) relation -> NE .

    ISTRUE          reduce using rule 19 (relation -> NE .)
    -               reduce using rule 19 (relation -> NE .)
    (               reduce using rule 19 (relation -> NE .)
    INTEGER         reduce using rule 19 (relation -> NE .)
    BOOL            reduce using rule 19 (relation -> NE .)
    NAME            reduce using rule 19 (relation -> NE .)
    DEF             reduce using rule 19 (relation -> NE .)
    ALTER           reduce using rule 19 (relation -> NE .)
    REPEAT          reduce using rule 19 (relation -> NE .)
    UNTIL           reduce using rule 19 (relation -> NE .)
    WHILE           reduce using rule 19 (relation -> NE .)


state 35

    (20) relation -> EQUAL .

    ISTRUE          reduce using rule 20 (relation -> EQUAL .)
    -               reduce using rule 20 (relation -> EQUAL .)
    (               reduce using rule 20 (relation -> EQUAL .)
    INTEGER         reduce using rule 20 (relation -> EQUAL .)
    BOOL            reduce using rule 20 (relation -> EQUAL .)
    NAME            reduce using rule 20 (relation -> EQUAL .)
    DEF             reduce using rule 20 (relation -> EQUAL .)
    ALTER           reduce using rule 20 (relation -> EQUAL .)
    REPEAT          reduce using rule 20 (relation -> EQUAL .)
    UNTIL           reduce using rule 20 (relation -> EQUAL .)
    WHILE           reduce using rule 20 (relation -> EQUAL .)


state 36

    (5) statement -> PRINT PRINTLINE .

    WHEN            reduce using rule 5 (statement -> PRINT PRINTLINE .)
    $end            reduce using rule 5 (statement -> PRINT PRINTLINE .)


state 37

    (6) statement -> CASE WHEN . expression THEN statement
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (21) expression -> . expression relation expression
    (22) expression -> . ISTRUE ( expression )
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . INTEGER
    (26) expression -> . BOOL
    (27) expression -> . NAME
    (28) expression -> . DEF ( NAME , expression )
    (29) expression -> . NAME ( expression )
    (30) expression -> . ALTER ( NAME , expression )
    (31) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (33) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (34) expression -> . UNTIL LPAREN expression RPAREN
    (35) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (36) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 13
    -               shift and go to state 12
    (               shift and go to state 4
    INTEGER         shift and go to state 14
    BOOL            shift and go to state 15
    NAME            shift and go to state 3
    DEF             shift and go to state 16
    ALTER           shift and go to state 17
    REPEAT          shift and go to state 18
    UNTIL           shift and go to state 19
    WHILE           shift and go to state 20

    expression                     shift and go to state 57

state 38

    (7) statement -> CASE expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (21) expression -> expression . relation expression
    (15) relation -> . GT
    (16) relation -> . LT
    (17) relation -> . GTE
    (18) relation -> . LTE
    (19) relation -> . NE
    (20) relation -> . EQUAL

    WHEN            reduce using rule 7 (statement -> CASE expression .)
    $end            reduce using rule 7 (statement -> CASE expression .)
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    GT              shift and go to state 30
    LT              shift and go to state 31
    GTE             shift and go to state 32
    LTE             shift and go to state 33
    NE              shift and go to state 34
    EQUAL           shift and go to state 35

    relation                       shift and go to state 29

state 39

    (9) statement -> ALEATORIO LPAREN . RPAREN

    RPAREN          shift and go to state 58


state 40

    (10) statement -> MOVER LPAREN . MOVIMIENTO RPAREN

    MOVIMIENTO      shift and go to state 59


state 41

    (23) expression -> - expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (21) expression -> expression . relation expression
    (15) relation -> . GT
    (16) relation -> . LT
    (17) relation -> . GTE
    (18) relation -> . LTE
    (19) relation -> . NE
    (20) relation -> . EQUAL

    +               reduce using rule 23 (expression -> - expression .)
    -               reduce using rule 23 (expression -> - expression .)
    *               reduce using rule 23 (expression -> - expression .)
    /               reduce using rule 23 (expression -> - expression .)
    GT              reduce using rule 23 (expression -> - expression .)
    LT              reduce using rule 23 (expression -> - expression .)
    GTE             reduce using rule 23 (expression -> - expression .)
    LTE             reduce using rule 23 (expression -> - expression .)
    NE              reduce using rule 23 (expression -> - expression .)
    EQUAL           reduce using rule 23 (expression -> - expression .)
    WHEN            reduce using rule 23 (expression -> - expression .)
    $end            reduce using rule 23 (expression -> - expression .)
    )               reduce using rule 23 (expression -> - expression .)
    THEN            reduce using rule 23 (expression -> - expression .)
    SEMICOLON       reduce using rule 23 (expression -> - expression .)
    RPAREN          reduce using rule 23 (expression -> - expression .)

  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! GT              [ shift and go to state 30 ]
  ! LT              [ shift and go to state 31 ]
  ! GTE             [ shift and go to state 32 ]
  ! LTE             [ shift and go to state 33 ]
  ! NE              [ shift and go to state 34 ]
  ! EQUAL           [ shift and go to state 35 ]

    relation                       shift and go to state 29

state 42

    (22) expression -> ISTRUE ( . expression )
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (21) expression -> . expression relation expression
    (22) expression -> . ISTRUE ( expression )
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . INTEGER
    (26) expression -> . BOOL
    (27) expression -> . NAME
    (28) expression -> . DEF ( NAME , expression )
    (29) expression -> . NAME ( expression )
    (30) expression -> . ALTER ( NAME , expression )
    (31) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (33) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (34) expression -> . UNTIL LPAREN expression RPAREN
    (35) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (36) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 13
    -               shift and go to state 12
    (               shift and go to state 4
    INTEGER         shift and go to state 14
    BOOL            shift and go to state 15
    NAME            shift and go to state 3
    DEF             shift and go to state 16
    ALTER           shift and go to state 17
    REPEAT          shift and go to state 18
    UNTIL           shift and go to state 19
    WHILE           shift and go to state 20

    expression                     shift and go to state 60

state 43

    (28) expression -> DEF ( . NAME , expression )

    NAME            shift and go to state 61


state 44

    (30) expression -> ALTER ( . NAME , expression )

    NAME            shift and go to state 62


state 45

    (31) expression -> REPEAT LPAREN . expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> REPEAT LPAREN . expression SEMICOLON RPAREN SEMICOLON
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (21) expression -> . expression relation expression
    (22) expression -> . ISTRUE ( expression )
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . INTEGER
    (26) expression -> . BOOL
    (27) expression -> . NAME
    (28) expression -> . DEF ( NAME , expression )
    (29) expression -> . NAME ( expression )
    (30) expression -> . ALTER ( NAME , expression )
    (31) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (33) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (34) expression -> . UNTIL LPAREN expression RPAREN
    (35) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (36) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 13
    -               shift and go to state 12
    (               shift and go to state 4
    INTEGER         shift and go to state 14
    BOOL            shift and go to state 15
    NAME            shift and go to state 3
    DEF             shift and go to state 16
    ALTER           shift and go to state 17
    REPEAT          shift and go to state 18
    UNTIL           shift and go to state 19
    WHILE           shift and go to state 20

    expression                     shift and go to state 63

state 46

    (33) expression -> UNTIL LPAREN . expression RPAREN BOOL SEMICOLON
    (34) expression -> UNTIL LPAREN . expression RPAREN
    (35) expression -> UNTIL LPAREN . expression RPAREN SEMICOLON
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (21) expression -> . expression relation expression
    (22) expression -> . ISTRUE ( expression )
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . INTEGER
    (26) expression -> . BOOL
    (27) expression -> . NAME
    (28) expression -> . DEF ( NAME , expression )
    (29) expression -> . NAME ( expression )
    (30) expression -> . ALTER ( NAME , expression )
    (31) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (33) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (34) expression -> . UNTIL LPAREN expression RPAREN
    (35) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (36) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 13
    -               shift and go to state 12
    (               shift and go to state 4
    INTEGER         shift and go to state 14
    BOOL            shift and go to state 15
    NAME            shift and go to state 3
    DEF             shift and go to state 16
    ALTER           shift and go to state 17
    REPEAT          shift and go to state 18
    UNTIL           shift and go to state 19
    WHILE           shift and go to state 20

    expression                     shift and go to state 64

state 47

    (36) expression -> WHILE BOOL . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 65


state 48

    (8) statement -> statement WHEN expression . THEN statement
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (21) expression -> expression . relation expression
    (15) relation -> . GT
    (16) relation -> . LT
    (17) relation -> . GTE
    (18) relation -> . LTE
    (19) relation -> . NE
    (20) relation -> . EQUAL

    THEN            shift and go to state 66
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    GT              shift and go to state 30
    LT              shift and go to state 31
    GTE             shift and go to state 32
    LTE             shift and go to state 33
    NE              shift and go to state 34
    EQUAL           shift and go to state 35

    relation                       shift and go to state 29

state 49

    (1) statement -> PROC NAME ( . expression )
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (21) expression -> . expression relation expression
    (22) expression -> . ISTRUE ( expression )
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . INTEGER
    (26) expression -> . BOOL
    (27) expression -> . NAME
    (28) expression -> . DEF ( NAME , expression )
    (29) expression -> . NAME ( expression )
    (30) expression -> . ALTER ( NAME , expression )
    (31) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (33) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (34) expression -> . UNTIL LPAREN expression RPAREN
    (35) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (36) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 13
    -               shift and go to state 12
    (               shift and go to state 4
    INTEGER         shift and go to state 14
    BOOL            shift and go to state 15
    NAME            shift and go to state 3
    DEF             shift and go to state 16
    ALTER           shift and go to state 17
    REPEAT          shift and go to state 18
    UNTIL           shift and go to state 19
    WHILE           shift and go to state 20

    expression                     shift and go to state 67

state 50

    (29) expression -> NAME ( expression . )
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (21) expression -> expression . relation expression
    (15) relation -> . GT
    (16) relation -> . LT
    (17) relation -> . GTE
    (18) relation -> . LTE
    (19) relation -> . NE
    (20) relation -> . EQUAL

    )               shift and go to state 68
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    GT              shift and go to state 30
    LT              shift and go to state 31
    GTE             shift and go to state 32
    LTE             shift and go to state 33
    NE              shift and go to state 34
    EQUAL           shift and go to state 35

    relation                       shift and go to state 29

state 51

    (24) expression -> ( expression ) .

    +               reduce using rule 24 (expression -> ( expression ) .)
    -               reduce using rule 24 (expression -> ( expression ) .)
    *               reduce using rule 24 (expression -> ( expression ) .)
    /               reduce using rule 24 (expression -> ( expression ) .)
    GT              reduce using rule 24 (expression -> ( expression ) .)
    LT              reduce using rule 24 (expression -> ( expression ) .)
    GTE             reduce using rule 24 (expression -> ( expression ) .)
    LTE             reduce using rule 24 (expression -> ( expression ) .)
    NE              reduce using rule 24 (expression -> ( expression ) .)
    EQUAL           reduce using rule 24 (expression -> ( expression ) .)
    WHEN            reduce using rule 24 (expression -> ( expression ) .)
    $end            reduce using rule 24 (expression -> ( expression ) .)
    )               reduce using rule 24 (expression -> ( expression ) .)
    THEN            reduce using rule 24 (expression -> ( expression ) .)
    SEMICOLON       reduce using rule 24 (expression -> ( expression ) .)
    RPAREN          reduce using rule 24 (expression -> ( expression ) .)


state 52

    (11) expression -> expression + expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (21) expression -> expression . relation expression
    (15) relation -> . GT
    (16) relation -> . LT
    (17) relation -> . GTE
    (18) relation -> . LTE
    (19) relation -> . NE
    (20) relation -> . EQUAL

    +               reduce using rule 11 (expression -> expression + expression .)
    -               reduce using rule 11 (expression -> expression + expression .)
    GT              reduce using rule 11 (expression -> expression + expression .)
    LT              reduce using rule 11 (expression -> expression + expression .)
    GTE             reduce using rule 11 (expression -> expression + expression .)
    LTE             reduce using rule 11 (expression -> expression + expression .)
    NE              reduce using rule 11 (expression -> expression + expression .)
    EQUAL           reduce using rule 11 (expression -> expression + expression .)
    WHEN            reduce using rule 11 (expression -> expression + expression .)
    $end            reduce using rule 11 (expression -> expression + expression .)
    )               reduce using rule 11 (expression -> expression + expression .)
    THEN            reduce using rule 11 (expression -> expression + expression .)
    SEMICOLON       reduce using rule 11 (expression -> expression + expression .)
    RPAREN          reduce using rule 11 (expression -> expression + expression .)
    *               shift and go to state 27
    /               shift and go to state 28

  ! *               [ reduce using rule 11 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 11 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! GT              [ shift and go to state 30 ]
  ! LT              [ shift and go to state 31 ]
  ! GTE             [ shift and go to state 32 ]
  ! LTE             [ shift and go to state 33 ]
  ! NE              [ shift and go to state 34 ]
  ! EQUAL           [ shift and go to state 35 ]

    relation                       shift and go to state 29

state 53

    (12) expression -> expression - expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (21) expression -> expression . relation expression
    (15) relation -> . GT
    (16) relation -> . LT
    (17) relation -> . GTE
    (18) relation -> . LTE
    (19) relation -> . NE
    (20) relation -> . EQUAL

    +               reduce using rule 12 (expression -> expression - expression .)
    -               reduce using rule 12 (expression -> expression - expression .)
    GT              reduce using rule 12 (expression -> expression - expression .)
    LT              reduce using rule 12 (expression -> expression - expression .)
    GTE             reduce using rule 12 (expression -> expression - expression .)
    LTE             reduce using rule 12 (expression -> expression - expression .)
    NE              reduce using rule 12 (expression -> expression - expression .)
    EQUAL           reduce using rule 12 (expression -> expression - expression .)
    WHEN            reduce using rule 12 (expression -> expression - expression .)
    $end            reduce using rule 12 (expression -> expression - expression .)
    )               reduce using rule 12 (expression -> expression - expression .)
    THEN            reduce using rule 12 (expression -> expression - expression .)
    SEMICOLON       reduce using rule 12 (expression -> expression - expression .)
    RPAREN          reduce using rule 12 (expression -> expression - expression .)
    *               shift and go to state 27
    /               shift and go to state 28

  ! *               [ reduce using rule 12 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 12 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! GT              [ shift and go to state 30 ]
  ! LT              [ shift and go to state 31 ]
  ! GTE             [ shift and go to state 32 ]
  ! LTE             [ shift and go to state 33 ]
  ! NE              [ shift and go to state 34 ]
  ! EQUAL           [ shift and go to state 35 ]

    relation                       shift and go to state 29

state 54

    (13) expression -> expression * expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (21) expression -> expression . relation expression
    (15) relation -> . GT
    (16) relation -> . LT
    (17) relation -> . GTE
    (18) relation -> . LTE
    (19) relation -> . NE
    (20) relation -> . EQUAL

    +               reduce using rule 13 (expression -> expression * expression .)
    -               reduce using rule 13 (expression -> expression * expression .)
    *               reduce using rule 13 (expression -> expression * expression .)
    /               reduce using rule 13 (expression -> expression * expression .)
    GT              reduce using rule 13 (expression -> expression * expression .)
    LT              reduce using rule 13 (expression -> expression * expression .)
    GTE             reduce using rule 13 (expression -> expression * expression .)
    LTE             reduce using rule 13 (expression -> expression * expression .)
    NE              reduce using rule 13 (expression -> expression * expression .)
    EQUAL           reduce using rule 13 (expression -> expression * expression .)
    WHEN            reduce using rule 13 (expression -> expression * expression .)
    $end            reduce using rule 13 (expression -> expression * expression .)
    )               reduce using rule 13 (expression -> expression * expression .)
    THEN            reduce using rule 13 (expression -> expression * expression .)
    SEMICOLON       reduce using rule 13 (expression -> expression * expression .)
    RPAREN          reduce using rule 13 (expression -> expression * expression .)

  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! GT              [ shift and go to state 30 ]
  ! LT              [ shift and go to state 31 ]
  ! GTE             [ shift and go to state 32 ]
  ! LTE             [ shift and go to state 33 ]
  ! NE              [ shift and go to state 34 ]
  ! EQUAL           [ shift and go to state 35 ]

    relation                       shift and go to state 29

state 55

    (14) expression -> expression / expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (21) expression -> expression . relation expression
    (15) relation -> . GT
    (16) relation -> . LT
    (17) relation -> . GTE
    (18) relation -> . LTE
    (19) relation -> . NE
    (20) relation -> . EQUAL

    +               reduce using rule 14 (expression -> expression / expression .)
    -               reduce using rule 14 (expression -> expression / expression .)
    *               reduce using rule 14 (expression -> expression / expression .)
    /               reduce using rule 14 (expression -> expression / expression .)
    GT              reduce using rule 14 (expression -> expression / expression .)
    LT              reduce using rule 14 (expression -> expression / expression .)
    GTE             reduce using rule 14 (expression -> expression / expression .)
    LTE             reduce using rule 14 (expression -> expression / expression .)
    NE              reduce using rule 14 (expression -> expression / expression .)
    EQUAL           reduce using rule 14 (expression -> expression / expression .)
    WHEN            reduce using rule 14 (expression -> expression / expression .)
    $end            reduce using rule 14 (expression -> expression / expression .)
    )               reduce using rule 14 (expression -> expression / expression .)
    THEN            reduce using rule 14 (expression -> expression / expression .)
    SEMICOLON       reduce using rule 14 (expression -> expression / expression .)
    RPAREN          reduce using rule 14 (expression -> expression / expression .)

  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! GT              [ shift and go to state 30 ]
  ! LT              [ shift and go to state 31 ]
  ! GTE             [ shift and go to state 32 ]
  ! LTE             [ shift and go to state 33 ]
  ! NE              [ shift and go to state 34 ]
  ! EQUAL           [ shift and go to state 35 ]

    relation                       shift and go to state 29

state 56

    (21) expression -> expression relation expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (21) expression -> expression . relation expression
    (15) relation -> . GT
    (16) relation -> . LT
    (17) relation -> . GTE
    (18) relation -> . LTE
    (19) relation -> . NE
    (20) relation -> . EQUAL

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    WHEN            reduce using rule 21 (expression -> expression relation expression .)
    $end            reduce using rule 21 (expression -> expression relation expression .)
    )               reduce using rule 21 (expression -> expression relation expression .)
    THEN            reduce using rule 21 (expression -> expression relation expression .)
    SEMICOLON       reduce using rule 21 (expression -> expression relation expression .)
    RPAREN          reduce using rule 21 (expression -> expression relation expression .)
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    GT              shift and go to state 30
    LT              shift and go to state 31
    GTE             shift and go to state 32
    LTE             shift and go to state 33
    NE              shift and go to state 34
    EQUAL           shift and go to state 35

  ! +               [ reduce using rule 21 (expression -> expression relation expression .) ]
  ! -               [ reduce using rule 21 (expression -> expression relation expression .) ]
  ! *               [ reduce using rule 21 (expression -> expression relation expression .) ]
  ! /               [ reduce using rule 21 (expression -> expression relation expression .) ]
  ! GT              [ reduce using rule 21 (expression -> expression relation expression .) ]
  ! LT              [ reduce using rule 21 (expression -> expression relation expression .) ]
  ! GTE             [ reduce using rule 21 (expression -> expression relation expression .) ]
  ! LTE             [ reduce using rule 21 (expression -> expression relation expression .) ]
  ! NE              [ reduce using rule 21 (expression -> expression relation expression .) ]
  ! EQUAL           [ reduce using rule 21 (expression -> expression relation expression .) ]

    relation                       shift and go to state 29

state 57

    (6) statement -> CASE WHEN expression . THEN statement
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (21) expression -> expression . relation expression
    (15) relation -> . GT
    (16) relation -> . LT
    (17) relation -> . GTE
    (18) relation -> . LTE
    (19) relation -> . NE
    (20) relation -> . EQUAL

    THEN            shift and go to state 69
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    GT              shift and go to state 30
    LT              shift and go to state 31
    GTE             shift and go to state 32
    LTE             shift and go to state 33
    NE              shift and go to state 34
    EQUAL           shift and go to state 35

    relation                       shift and go to state 29

state 58

    (9) statement -> ALEATORIO LPAREN RPAREN .

    WHEN            reduce using rule 9 (statement -> ALEATORIO LPAREN RPAREN .)
    $end            reduce using rule 9 (statement -> ALEATORIO LPAREN RPAREN .)


state 59

    (10) statement -> MOVER LPAREN MOVIMIENTO . RPAREN

    RPAREN          shift and go to state 70


state 60

    (22) expression -> ISTRUE ( expression . )
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (21) expression -> expression . relation expression
    (15) relation -> . GT
    (16) relation -> . LT
    (17) relation -> . GTE
    (18) relation -> . LTE
    (19) relation -> . NE
    (20) relation -> . EQUAL

    )               shift and go to state 71
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    GT              shift and go to state 30
    LT              shift and go to state 31
    GTE             shift and go to state 32
    LTE             shift and go to state 33
    NE              shift and go to state 34
    EQUAL           shift and go to state 35

    relation                       shift and go to state 29

state 61

    (28) expression -> DEF ( NAME . , expression )

    ,               shift and go to state 72


state 62

    (30) expression -> ALTER ( NAME . , expression )

    ,               shift and go to state 73


state 63

    (31) expression -> REPEAT LPAREN expression . SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> REPEAT LPAREN expression . SEMICOLON RPAREN SEMICOLON
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (21) expression -> expression . relation expression
    (15) relation -> . GT
    (16) relation -> . LT
    (17) relation -> . GTE
    (18) relation -> . LTE
    (19) relation -> . NE
    (20) relation -> . EQUAL

    SEMICOLON       shift and go to state 74
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    GT              shift and go to state 30
    LT              shift and go to state 31
    GTE             shift and go to state 32
    LTE             shift and go to state 33
    NE              shift and go to state 34
    EQUAL           shift and go to state 35

    relation                       shift and go to state 29

state 64

    (33) expression -> UNTIL LPAREN expression . RPAREN BOOL SEMICOLON
    (34) expression -> UNTIL LPAREN expression . RPAREN
    (35) expression -> UNTIL LPAREN expression . RPAREN SEMICOLON
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (21) expression -> expression . relation expression
    (15) relation -> . GT
    (16) relation -> . LT
    (17) relation -> . GTE
    (18) relation -> . LTE
    (19) relation -> . NE
    (20) relation -> . EQUAL

    RPAREN          shift and go to state 75
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    GT              shift and go to state 30
    LT              shift and go to state 31
    GTE             shift and go to state 32
    LTE             shift and go to state 33
    NE              shift and go to state 34
    EQUAL           shift and go to state 35

    relation                       shift and go to state 29

state 65

    (36) expression -> WHILE BOOL LPAREN . expression RPAREN SEMICOLON
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (21) expression -> . expression relation expression
    (22) expression -> . ISTRUE ( expression )
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . INTEGER
    (26) expression -> . BOOL
    (27) expression -> . NAME
    (28) expression -> . DEF ( NAME , expression )
    (29) expression -> . NAME ( expression )
    (30) expression -> . ALTER ( NAME , expression )
    (31) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (33) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (34) expression -> . UNTIL LPAREN expression RPAREN
    (35) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (36) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 13
    -               shift and go to state 12
    (               shift and go to state 4
    INTEGER         shift and go to state 14
    BOOL            shift and go to state 15
    NAME            shift and go to state 3
    DEF             shift and go to state 16
    ALTER           shift and go to state 17
    REPEAT          shift and go to state 18
    UNTIL           shift and go to state 19
    WHILE           shift and go to state 20

    expression                     shift and go to state 76

state 66

    (8) statement -> statement WHEN expression THEN . statement
    (1) statement -> . PROC NAME ( expression )
    (2) statement -> . COMMENT
    (3) statement -> . PRINTLINE
    (4) statement -> . expression
    (5) statement -> . PRINT PRINTLINE
    (6) statement -> . CASE WHEN expression THEN statement
    (7) statement -> . CASE expression
    (8) statement -> . statement WHEN expression THEN statement
    (9) statement -> . ALEATORIO LPAREN RPAREN
    (10) statement -> . MOVER LPAREN MOVIMIENTO RPAREN
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (21) expression -> . expression relation expression
    (22) expression -> . ISTRUE ( expression )
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . INTEGER
    (26) expression -> . BOOL
    (27) expression -> . NAME
    (28) expression -> . DEF ( NAME , expression )
    (29) expression -> . NAME ( expression )
    (30) expression -> . ALTER ( NAME , expression )
    (31) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (33) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (34) expression -> . UNTIL LPAREN expression RPAREN
    (35) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (36) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    PROC            shift and go to state 2
    COMMENT         shift and go to state 6
    PRINTLINE       shift and go to state 7
    PRINT           shift and go to state 8
    CASE            shift and go to state 9
    ALEATORIO       shift and go to state 10
    MOVER           shift and go to state 11
    ISTRUE          shift and go to state 13
    -               shift and go to state 12
    (               shift and go to state 4
    INTEGER         shift and go to state 14
    BOOL            shift and go to state 15
    NAME            shift and go to state 3
    DEF             shift and go to state 16
    ALTER           shift and go to state 17
    REPEAT          shift and go to state 18
    UNTIL           shift and go to state 19
    WHILE           shift and go to state 20

    statement                      shift and go to state 77
    expression                     shift and go to state 5

state 67

    (1) statement -> PROC NAME ( expression . )
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (21) expression -> expression . relation expression
    (15) relation -> . GT
    (16) relation -> . LT
    (17) relation -> . GTE
    (18) relation -> . LTE
    (19) relation -> . NE
    (20) relation -> . EQUAL

    )               shift and go to state 78
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    GT              shift and go to state 30
    LT              shift and go to state 31
    GTE             shift and go to state 32
    LTE             shift and go to state 33
    NE              shift and go to state 34
    EQUAL           shift and go to state 35

    relation                       shift and go to state 29

state 68

    (29) expression -> NAME ( expression ) .

    +               reduce using rule 29 (expression -> NAME ( expression ) .)
    -               reduce using rule 29 (expression -> NAME ( expression ) .)
    *               reduce using rule 29 (expression -> NAME ( expression ) .)
    /               reduce using rule 29 (expression -> NAME ( expression ) .)
    GT              reduce using rule 29 (expression -> NAME ( expression ) .)
    LT              reduce using rule 29 (expression -> NAME ( expression ) .)
    GTE             reduce using rule 29 (expression -> NAME ( expression ) .)
    LTE             reduce using rule 29 (expression -> NAME ( expression ) .)
    NE              reduce using rule 29 (expression -> NAME ( expression ) .)
    EQUAL           reduce using rule 29 (expression -> NAME ( expression ) .)
    WHEN            reduce using rule 29 (expression -> NAME ( expression ) .)
    $end            reduce using rule 29 (expression -> NAME ( expression ) .)
    )               reduce using rule 29 (expression -> NAME ( expression ) .)
    THEN            reduce using rule 29 (expression -> NAME ( expression ) .)
    SEMICOLON       reduce using rule 29 (expression -> NAME ( expression ) .)
    RPAREN          reduce using rule 29 (expression -> NAME ( expression ) .)


state 69

    (6) statement -> CASE WHEN expression THEN . statement
    (1) statement -> . PROC NAME ( expression )
    (2) statement -> . COMMENT
    (3) statement -> . PRINTLINE
    (4) statement -> . expression
    (5) statement -> . PRINT PRINTLINE
    (6) statement -> . CASE WHEN expression THEN statement
    (7) statement -> . CASE expression
    (8) statement -> . statement WHEN expression THEN statement
    (9) statement -> . ALEATORIO LPAREN RPAREN
    (10) statement -> . MOVER LPAREN MOVIMIENTO RPAREN
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (21) expression -> . expression relation expression
    (22) expression -> . ISTRUE ( expression )
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . INTEGER
    (26) expression -> . BOOL
    (27) expression -> . NAME
    (28) expression -> . DEF ( NAME , expression )
    (29) expression -> . NAME ( expression )
    (30) expression -> . ALTER ( NAME , expression )
    (31) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (33) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (34) expression -> . UNTIL LPAREN expression RPAREN
    (35) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (36) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    PROC            shift and go to state 2
    COMMENT         shift and go to state 6
    PRINTLINE       shift and go to state 7
    PRINT           shift and go to state 8
    CASE            shift and go to state 9
    ALEATORIO       shift and go to state 10
    MOVER           shift and go to state 11
    ISTRUE          shift and go to state 13
    -               shift and go to state 12
    (               shift and go to state 4
    INTEGER         shift and go to state 14
    BOOL            shift and go to state 15
    NAME            shift and go to state 3
    DEF             shift and go to state 16
    ALTER           shift and go to state 17
    REPEAT          shift and go to state 18
    UNTIL           shift and go to state 19
    WHILE           shift and go to state 20

    expression                     shift and go to state 5
    statement                      shift and go to state 79

state 70

    (10) statement -> MOVER LPAREN MOVIMIENTO RPAREN .

    WHEN            reduce using rule 10 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    $end            reduce using rule 10 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)


state 71

    (22) expression -> ISTRUE ( expression ) .

    +               reduce using rule 22 (expression -> ISTRUE ( expression ) .)
    -               reduce using rule 22 (expression -> ISTRUE ( expression ) .)
    *               reduce using rule 22 (expression -> ISTRUE ( expression ) .)
    /               reduce using rule 22 (expression -> ISTRUE ( expression ) .)
    GT              reduce using rule 22 (expression -> ISTRUE ( expression ) .)
    LT              reduce using rule 22 (expression -> ISTRUE ( expression ) .)
    GTE             reduce using rule 22 (expression -> ISTRUE ( expression ) .)
    LTE             reduce using rule 22 (expression -> ISTRUE ( expression ) .)
    NE              reduce using rule 22 (expression -> ISTRUE ( expression ) .)
    EQUAL           reduce using rule 22 (expression -> ISTRUE ( expression ) .)
    WHEN            reduce using rule 22 (expression -> ISTRUE ( expression ) .)
    $end            reduce using rule 22 (expression -> ISTRUE ( expression ) .)
    )               reduce using rule 22 (expression -> ISTRUE ( expression ) .)
    THEN            reduce using rule 22 (expression -> ISTRUE ( expression ) .)
    SEMICOLON       reduce using rule 22 (expression -> ISTRUE ( expression ) .)
    RPAREN          reduce using rule 22 (expression -> ISTRUE ( expression ) .)


state 72

    (28) expression -> DEF ( NAME , . expression )
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (21) expression -> . expression relation expression
    (22) expression -> . ISTRUE ( expression )
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . INTEGER
    (26) expression -> . BOOL
    (27) expression -> . NAME
    (28) expression -> . DEF ( NAME , expression )
    (29) expression -> . NAME ( expression )
    (30) expression -> . ALTER ( NAME , expression )
    (31) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (33) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (34) expression -> . UNTIL LPAREN expression RPAREN
    (35) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (36) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 13
    -               shift and go to state 12
    (               shift and go to state 4
    INTEGER         shift and go to state 14
    BOOL            shift and go to state 15
    NAME            shift and go to state 3
    DEF             shift and go to state 16
    ALTER           shift and go to state 17
    REPEAT          shift and go to state 18
    UNTIL           shift and go to state 19
    WHILE           shift and go to state 20

    expression                     shift and go to state 80

state 73

    (30) expression -> ALTER ( NAME , . expression )
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (21) expression -> . expression relation expression
    (22) expression -> . ISTRUE ( expression )
    (23) expression -> . - expression
    (24) expression -> . ( expression )
    (25) expression -> . INTEGER
    (26) expression -> . BOOL
    (27) expression -> . NAME
    (28) expression -> . DEF ( NAME , expression )
    (29) expression -> . NAME ( expression )
    (30) expression -> . ALTER ( NAME , expression )
    (31) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (33) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (34) expression -> . UNTIL LPAREN expression RPAREN
    (35) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (36) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 13
    -               shift and go to state 12
    (               shift and go to state 4
    INTEGER         shift and go to state 14
    BOOL            shift and go to state 15
    NAME            shift and go to state 3
    DEF             shift and go to state 16
    ALTER           shift and go to state 17
    REPEAT          shift and go to state 18
    UNTIL           shift and go to state 19
    WHILE           shift and go to state 20

    expression                     shift and go to state 81

state 74

    (31) expression -> REPEAT LPAREN expression SEMICOLON . BREAK SEMICOLON RPAREN SEMICOLON
    (32) expression -> REPEAT LPAREN expression SEMICOLON . RPAREN SEMICOLON

    BREAK           shift and go to state 82
    RPAREN          shift and go to state 83


state 75

    (33) expression -> UNTIL LPAREN expression RPAREN . BOOL SEMICOLON
    (34) expression -> UNTIL LPAREN expression RPAREN .
    (35) expression -> UNTIL LPAREN expression RPAREN . SEMICOLON

  ! shift/reduce conflict for SEMICOLON resolved as shift
    BOOL            shift and go to state 84
    +               reduce using rule 34 (expression -> UNTIL LPAREN expression RPAREN .)
    -               reduce using rule 34 (expression -> UNTIL LPAREN expression RPAREN .)
    *               reduce using rule 34 (expression -> UNTIL LPAREN expression RPAREN .)
    /               reduce using rule 34 (expression -> UNTIL LPAREN expression RPAREN .)
    GT              reduce using rule 34 (expression -> UNTIL LPAREN expression RPAREN .)
    LT              reduce using rule 34 (expression -> UNTIL LPAREN expression RPAREN .)
    GTE             reduce using rule 34 (expression -> UNTIL LPAREN expression RPAREN .)
    LTE             reduce using rule 34 (expression -> UNTIL LPAREN expression RPAREN .)
    NE              reduce using rule 34 (expression -> UNTIL LPAREN expression RPAREN .)
    EQUAL           reduce using rule 34 (expression -> UNTIL LPAREN expression RPAREN .)
    WHEN            reduce using rule 34 (expression -> UNTIL LPAREN expression RPAREN .)
    $end            reduce using rule 34 (expression -> UNTIL LPAREN expression RPAREN .)
    )               reduce using rule 34 (expression -> UNTIL LPAREN expression RPAREN .)
    THEN            reduce using rule 34 (expression -> UNTIL LPAREN expression RPAREN .)
    RPAREN          reduce using rule 34 (expression -> UNTIL LPAREN expression RPAREN .)
    SEMICOLON       shift and go to state 85

  ! SEMICOLON       [ reduce using rule 34 (expression -> UNTIL LPAREN expression RPAREN .) ]


state 76

    (36) expression -> WHILE BOOL LPAREN expression . RPAREN SEMICOLON
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (21) expression -> expression . relation expression
    (15) relation -> . GT
    (16) relation -> . LT
    (17) relation -> . GTE
    (18) relation -> . LTE
    (19) relation -> . NE
    (20) relation -> . EQUAL

    RPAREN          shift and go to state 86
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    GT              shift and go to state 30
    LT              shift and go to state 31
    GTE             shift and go to state 32
    LTE             shift and go to state 33
    NE              shift and go to state 34
    EQUAL           shift and go to state 35

    relation                       shift and go to state 29

state 77

    (8) statement -> statement WHEN expression THEN statement .
    (8) statement -> statement . WHEN expression THEN statement

  ! shift/reduce conflict for WHEN resolved as shift
    $end            reduce using rule 8 (statement -> statement WHEN expression THEN statement .)
    WHEN            shift and go to state 21

  ! WHEN            [ reduce using rule 8 (statement -> statement WHEN expression THEN statement .) ]


state 78

    (1) statement -> PROC NAME ( expression ) .

    WHEN            reduce using rule 1 (statement -> PROC NAME ( expression ) .)
    $end            reduce using rule 1 (statement -> PROC NAME ( expression ) .)


state 79

    (6) statement -> CASE WHEN expression THEN statement .
    (8) statement -> statement . WHEN expression THEN statement

  ! shift/reduce conflict for WHEN resolved as shift
    $end            reduce using rule 6 (statement -> CASE WHEN expression THEN statement .)
    WHEN            shift and go to state 21

  ! WHEN            [ reduce using rule 6 (statement -> CASE WHEN expression THEN statement .) ]


state 80

    (28) expression -> DEF ( NAME , expression . )
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (21) expression -> expression . relation expression
    (15) relation -> . GT
    (16) relation -> . LT
    (17) relation -> . GTE
    (18) relation -> . LTE
    (19) relation -> . NE
    (20) relation -> . EQUAL

    )               shift and go to state 87
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    GT              shift and go to state 30
    LT              shift and go to state 31
    GTE             shift and go to state 32
    LTE             shift and go to state 33
    NE              shift and go to state 34
    EQUAL           shift and go to state 35

    relation                       shift and go to state 29

state 81

    (30) expression -> ALTER ( NAME , expression . )
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (21) expression -> expression . relation expression
    (15) relation -> . GT
    (16) relation -> . LT
    (17) relation -> . GTE
    (18) relation -> . LTE
    (19) relation -> . NE
    (20) relation -> . EQUAL

    )               shift and go to state 88
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    GT              shift and go to state 30
    LT              shift and go to state 31
    GTE             shift and go to state 32
    LTE             shift and go to state 33
    NE              shift and go to state 34
    EQUAL           shift and go to state 35

    relation                       shift and go to state 29

state 82

    (31) expression -> REPEAT LPAREN expression SEMICOLON BREAK . SEMICOLON RPAREN SEMICOLON

    SEMICOLON       shift and go to state 89


state 83

    (32) expression -> REPEAT LPAREN expression SEMICOLON RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 90


state 84

    (33) expression -> UNTIL LPAREN expression RPAREN BOOL . SEMICOLON

    SEMICOLON       shift and go to state 91


state 85

    (35) expression -> UNTIL LPAREN expression RPAREN SEMICOLON .

    +               reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    -               reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    *               reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    /               reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    GT              reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    LT              reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    GTE             reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    LTE             reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    NE              reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    EQUAL           reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    WHEN            reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    )               reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    THEN            reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    RPAREN          reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)


state 86

    (36) expression -> WHILE BOOL LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 92


state 87

    (28) expression -> DEF ( NAME , expression ) .

    +               reduce using rule 28 (expression -> DEF ( NAME , expression ) .)
    -               reduce using rule 28 (expression -> DEF ( NAME , expression ) .)
    *               reduce using rule 28 (expression -> DEF ( NAME , expression ) .)
    /               reduce using rule 28 (expression -> DEF ( NAME , expression ) .)
    GT              reduce using rule 28 (expression -> DEF ( NAME , expression ) .)
    LT              reduce using rule 28 (expression -> DEF ( NAME , expression ) .)
    GTE             reduce using rule 28 (expression -> DEF ( NAME , expression ) .)
    LTE             reduce using rule 28 (expression -> DEF ( NAME , expression ) .)
    NE              reduce using rule 28 (expression -> DEF ( NAME , expression ) .)
    EQUAL           reduce using rule 28 (expression -> DEF ( NAME , expression ) .)
    WHEN            reduce using rule 28 (expression -> DEF ( NAME , expression ) .)
    $end            reduce using rule 28 (expression -> DEF ( NAME , expression ) .)
    )               reduce using rule 28 (expression -> DEF ( NAME , expression ) .)
    THEN            reduce using rule 28 (expression -> DEF ( NAME , expression ) .)
    SEMICOLON       reduce using rule 28 (expression -> DEF ( NAME , expression ) .)
    RPAREN          reduce using rule 28 (expression -> DEF ( NAME , expression ) .)


state 88

    (30) expression -> ALTER ( NAME , expression ) .

    +               reduce using rule 30 (expression -> ALTER ( NAME , expression ) .)
    -               reduce using rule 30 (expression -> ALTER ( NAME , expression ) .)
    *               reduce using rule 30 (expression -> ALTER ( NAME , expression ) .)
    /               reduce using rule 30 (expression -> ALTER ( NAME , expression ) .)
    GT              reduce using rule 30 (expression -> ALTER ( NAME , expression ) .)
    LT              reduce using rule 30 (expression -> ALTER ( NAME , expression ) .)
    GTE             reduce using rule 30 (expression -> ALTER ( NAME , expression ) .)
    LTE             reduce using rule 30 (expression -> ALTER ( NAME , expression ) .)
    NE              reduce using rule 30 (expression -> ALTER ( NAME , expression ) .)
    EQUAL           reduce using rule 30 (expression -> ALTER ( NAME , expression ) .)
    WHEN            reduce using rule 30 (expression -> ALTER ( NAME , expression ) .)
    $end            reduce using rule 30 (expression -> ALTER ( NAME , expression ) .)
    )               reduce using rule 30 (expression -> ALTER ( NAME , expression ) .)
    THEN            reduce using rule 30 (expression -> ALTER ( NAME , expression ) .)
    SEMICOLON       reduce using rule 30 (expression -> ALTER ( NAME , expression ) .)
    RPAREN          reduce using rule 30 (expression -> ALTER ( NAME , expression ) .)


state 89

    (31) expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON . RPAREN SEMICOLON

    RPAREN          shift and go to state 93


state 90

    (32) expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .

    +               reduce using rule 32 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    -               reduce using rule 32 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    *               reduce using rule 32 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    /               reduce using rule 32 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    GT              reduce using rule 32 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    LT              reduce using rule 32 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    GTE             reduce using rule 32 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    LTE             reduce using rule 32 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    NE              reduce using rule 32 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    EQUAL           reduce using rule 32 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    WHEN            reduce using rule 32 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    $end            reduce using rule 32 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    )               reduce using rule 32 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    THEN            reduce using rule 32 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 32 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    RPAREN          reduce using rule 32 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)


state 91

    (33) expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .

    +               reduce using rule 33 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    -               reduce using rule 33 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    *               reduce using rule 33 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    /               reduce using rule 33 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    GT              reduce using rule 33 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    LT              reduce using rule 33 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    GTE             reduce using rule 33 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    LTE             reduce using rule 33 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    NE              reduce using rule 33 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    EQUAL           reduce using rule 33 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    WHEN            reduce using rule 33 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    $end            reduce using rule 33 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    )               reduce using rule 33 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    THEN            reduce using rule 33 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    SEMICOLON       reduce using rule 33 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    RPAREN          reduce using rule 33 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)


state 92

    (36) expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .

    +               reduce using rule 36 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    -               reduce using rule 36 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    *               reduce using rule 36 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    /               reduce using rule 36 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    GT              reduce using rule 36 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    LT              reduce using rule 36 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    GTE             reduce using rule 36 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    LTE             reduce using rule 36 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    NE              reduce using rule 36 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    EQUAL           reduce using rule 36 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    WHEN            reduce using rule 36 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 36 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    )               reduce using rule 36 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    THEN            reduce using rule 36 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 36 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    RPAREN          reduce using rule 36 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)


state 93

    (31) expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 94


state 94

    (31) expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .

    +               reduce using rule 31 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    -               reduce using rule 31 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    *               reduce using rule 31 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    /               reduce using rule 31 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    GT              reduce using rule 31 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    LT              reduce using rule 31 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    GTE             reduce using rule 31 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    LTE             reduce using rule 31 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    NE              reduce using rule 31 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    EQUAL           reduce using rule 31 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    WHEN            reduce using rule 31 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    $end            reduce using rule 31 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    )               reduce using rule 31 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    THEN            reduce using rule 31 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 31 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    RPAREN          reduce using rule 31 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for + in state 56 resolved as shift
WARNING: shift/reduce conflict for - in state 56 resolved as shift
WARNING: shift/reduce conflict for * in state 56 resolved as shift
WARNING: shift/reduce conflict for / in state 56 resolved as shift
WARNING: shift/reduce conflict for GT in state 56 resolved as shift
WARNING: shift/reduce conflict for LT in state 56 resolved as shift
WARNING: shift/reduce conflict for GTE in state 56 resolved as shift
WARNING: shift/reduce conflict for LTE in state 56 resolved as shift
WARNING: shift/reduce conflict for NE in state 56 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 56 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 75 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 77 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 79 resolved as shift
