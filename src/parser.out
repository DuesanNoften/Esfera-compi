Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Body
Rule 1     symbol -> Body
Rule 2     statement -> PROC NAME ( expression )
Rule 3     statement -> COMMENT
Rule 4     statement -> PRINTLINE
Rule 5     statement -> expression
Rule 6     statement -> expression statement
Rule 7     statement -> <empty>
Rule 8     statement -> PRINT PRINTLINE
Rule 9     statement -> CASE WHEN expression statementt
Rule 10    statementt -> THEN statement
Rule 11    statement -> CASE expression
Rule 12    statement -> statement WHEN expression statement
Rule 13    statement -> ELSE statement
Rule 14    statement -> ALEATORIO LPAREN RPAREN
Rule 15    statement -> HORN LPAREN RPAREN
Rule 16    statement -> MOVER LPAREN MOVIMIENTO RPAREN
Rule 17    expression -> expression + expression
Rule 18    expression -> expression - expression
Rule 19    expression -> expression * expression
Rule 20    expression -> expression / expression
Rule 21    relation -> GT
Rule 22    relation -> LT
Rule 23    relation -> GTE
Rule 24    relation -> LTE
Rule 25    relation -> NE
Rule 26    relation -> EQUAL
Rule 27    expression -> expression relation expression
Rule 28    expression -> ISTRUE ( expression )
Rule 29    expression -> - expression
Rule 30    expression -> ( expression )
Rule 31    expression -> INTEGER
Rule 32    expression -> BOOL
Rule 33    expression -> NAME
Rule 34    expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
Rule 35    expression -> NAME ( expression )
Rule 36    expression -> ALTER ( NAME , expression )
Rule 37    expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
Rule 38    expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
Rule 39    expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON
Rule 40    expression -> UNTIL LPAREN expression RPAREN
Rule 41    expression -> UNTIL LPAREN expression RPAREN SEMICOLON
Rule 42    statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON
Rule 43    Body -> expression statement expression
Rule 44    Body -> expression statement
Rule 45    Body -> statement expression
Rule 46    Body -> statement
Rule 47    Body -> statement statement
Rule 48    Body -> statement expression statement
Rule 49    Body -> expression expression

Terminals, with rules where they appear

(                    : 2 28 30 35 36
)                    : 2 28 30 35 36
*                    : 19
+                    : 17
,                    : 36
-                    : 18 29
/                    : 20
ALEATORIO            : 14
ALTER                : 36
BOOL                 : 32
BREAK                : 37
CASE                 : 9 11
COMMA                : 34
COMMENT              : 3
DEF                  : 34
ELSE                 : 13
EQUAL                : 26
GT                   : 21
GTE                  : 23
HORN                 : 15
INTEGER              : 31
ISTRUE               : 28
LPAREN               : 14 15 16 34 37 38 39 40 41 42 42
LT                   : 22
LTE                  : 24
MOVER                : 16
MOVIMIENTO           : 16
NAME                 : 2 33 34 35 36
NE                   : 25
PRINT                : 8
PRINTLINE            : 4 8
PROC                 : 2
REPEAT               : 37 38
RPAREN               : 14 15 16 34 37 38 39 40 41 42 42
SEMICOLON            : 34 37 37 37 38 38 39 41 42
THEN                 : 10
UNTIL                : 39 40 41
WHEN                 : 9 12
WHILE                : 42
error                : 

Nonterminals, with rules where they appear

Body                 : 1 0
expression           : 2 5 6 9 11 12 17 17 18 18 19 19 20 20 27 27 28 29 30 34 35 36 37 38 39 40 41 42 43 43 44 45 48 49 49
relation             : 27
statement            : 6 10 12 12 13 39 42 43 44 45 46 47 47 48 48
statementt           : 9
symbol               : 

Parsing method: LALR

state 0

    (0) S' -> . Body
    (43) Body -> . expression statement expression
    (44) Body -> . expression statement
    (45) Body -> . statement expression
    (46) Body -> . statement
    (47) Body -> . statement statement
    (48) Body -> . statement expression statement
    (49) Body -> . expression expression
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (2) statement -> . PROC NAME ( expression )
    (3) statement -> . COMMENT
    (4) statement -> . PRINTLINE
    (5) statement -> . expression
    (6) statement -> . expression statement
    (7) statement -> .
    (8) statement -> . PRINT PRINTLINE
    (9) statement -> . CASE WHEN expression statementt
    (11) statement -> . CASE expression
    (12) statement -> . statement WHEN expression statement
    (13) statement -> . ELSE statement
    (14) statement -> . ALEATORIO LPAREN RPAREN
    (15) statement -> . HORN LPAREN RPAREN
    (16) statement -> . MOVER LPAREN MOVIMIENTO RPAREN
    (42) statement -> . WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON

  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for PROC resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ALEATORIO resolved as shift
  ! shift/reduce conflict for HORN resolved as shift
  ! shift/reduce conflict for MOVER resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13
    PROC            shift and go to state 14
    COMMENT         shift and go to state 15
    PRINTLINE       shift and go to state 16
    WHEN            reduce using rule 7 (statement -> .)
    $end            reduce using rule 7 (statement -> .)
    PRINT           shift and go to state 17
    CASE            shift and go to state 18
    ELSE            shift and go to state 19
    ALEATORIO       shift and go to state 20
    HORN            shift and go to state 21
    MOVER           shift and go to state 22
    WHILE           shift and go to state 23

  ! ISTRUE          [ reduce using rule 7 (statement -> .) ]
  ! -               [ reduce using rule 7 (statement -> .) ]
  ! (               [ reduce using rule 7 (statement -> .) ]
  ! INTEGER         [ reduce using rule 7 (statement -> .) ]
  ! BOOL            [ reduce using rule 7 (statement -> .) ]
  ! NAME            [ reduce using rule 7 (statement -> .) ]
  ! DEF             [ reduce using rule 7 (statement -> .) ]
  ! ALTER           [ reduce using rule 7 (statement -> .) ]
  ! REPEAT          [ reduce using rule 7 (statement -> .) ]
  ! UNTIL           [ reduce using rule 7 (statement -> .) ]
  ! PROC            [ reduce using rule 7 (statement -> .) ]
  ! COMMENT         [ reduce using rule 7 (statement -> .) ]
  ! PRINTLINE       [ reduce using rule 7 (statement -> .) ]
  ! PRINT           [ reduce using rule 7 (statement -> .) ]
  ! CASE            [ reduce using rule 7 (statement -> .) ]
  ! ELSE            [ reduce using rule 7 (statement -> .) ]
  ! ALEATORIO       [ reduce using rule 7 (statement -> .) ]
  ! HORN            [ reduce using rule 7 (statement -> .) ]
  ! MOVER           [ reduce using rule 7 (statement -> .) ]
  ! WHILE           [ reduce using rule 7 (statement -> .) ]

    Body                           shift and go to state 1
    expression                     shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> Body .



state 2

    (43) Body -> expression . statement expression
    (44) Body -> expression . statement
    (49) Body -> expression . expression
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (5) statement -> expression .
    (6) statement -> expression . statement
    (2) statement -> . PROC NAME ( expression )
    (3) statement -> . COMMENT
    (4) statement -> . PRINTLINE
    (5) statement -> . expression
    (6) statement -> . expression statement
    (7) statement -> .
    (8) statement -> . PRINT PRINTLINE
    (9) statement -> . CASE WHEN expression statementt
    (11) statement -> . CASE expression
    (12) statement -> . statement WHEN expression statement
    (13) statement -> . ELSE statement
    (14) statement -> . ALEATORIO LPAREN RPAREN
    (15) statement -> . HORN LPAREN RPAREN
    (16) statement -> . MOVER LPAREN MOVIMIENTO RPAREN
    (42) statement -> . WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for PROC resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! reduce/reduce conflict for WHEN resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for ISTRUE resolved using rule 5 (statement -> expression .)
  ! shift/reduce conflict for - resolved as shift
  ! reduce/reduce conflict for ( resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for INTEGER resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for BOOL resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for NAME resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for DEF resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for ALTER resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for REPEAT resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for UNTIL resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for $end resolved using rule 5 (statement -> expression .)
  ! shift/reduce conflict for PROC resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! reduce/reduce conflict for PRINT resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for CASE resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for ALEATORIO resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for HORN resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for MOVER resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 5 (statement -> expression .)
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ALEATORIO resolved as shift
  ! shift/reduce conflict for HORN resolved as shift
  ! shift/reduce conflict for MOVER resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    +               shift and go to state 26
    -               shift and go to state 27
    *               shift and go to state 28
    /               shift and go to state 29
    WHEN            reduce using rule 5 (statement -> expression .)
    $end            reduce using rule 5 (statement -> expression .)
    PROC            shift and go to state 14
    COMMENT         shift and go to state 15
    PRINTLINE       shift and go to state 16
    PRINT           shift and go to state 17
    CASE            shift and go to state 18
    ELSE            shift and go to state 19
    ALEATORIO       shift and go to state 20
    HORN            shift and go to state 21
    MOVER           shift and go to state 22
    WHILE           shift and go to state 23
    ISTRUE          shift and go to state 5
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13
    GT              shift and go to state 31
    LT              shift and go to state 32
    GTE             shift and go to state 33
    LTE             shift and go to state 34
    NE              shift and go to state 35
    EQUAL           shift and go to state 36

  ! ISTRUE          [ reduce using rule 5 (statement -> expression .) ]
  ! -               [ reduce using rule 5 (statement -> expression .) ]
  ! (               [ reduce using rule 5 (statement -> expression .) ]
  ! INTEGER         [ reduce using rule 5 (statement -> expression .) ]
  ! BOOL            [ reduce using rule 5 (statement -> expression .) ]
  ! NAME            [ reduce using rule 5 (statement -> expression .) ]
  ! DEF             [ reduce using rule 5 (statement -> expression .) ]
  ! ALTER           [ reduce using rule 5 (statement -> expression .) ]
  ! REPEAT          [ reduce using rule 5 (statement -> expression .) ]
  ! UNTIL           [ reduce using rule 5 (statement -> expression .) ]
  ! PROC            [ reduce using rule 5 (statement -> expression .) ]
  ! COMMENT         [ reduce using rule 5 (statement -> expression .) ]
  ! PRINTLINE       [ reduce using rule 5 (statement -> expression .) ]
  ! PRINT           [ reduce using rule 5 (statement -> expression .) ]
  ! CASE            [ reduce using rule 5 (statement -> expression .) ]
  ! ELSE            [ reduce using rule 5 (statement -> expression .) ]
  ! ALEATORIO       [ reduce using rule 5 (statement -> expression .) ]
  ! HORN            [ reduce using rule 5 (statement -> expression .) ]
  ! MOVER           [ reduce using rule 5 (statement -> expression .) ]
  ! WHILE           [ reduce using rule 5 (statement -> expression .) ]
  ! WHEN            [ reduce using rule 7 (statement -> .) ]
  ! ISTRUE          [ reduce using rule 7 (statement -> .) ]
  ! -               [ reduce using rule 7 (statement -> .) ]
  ! (               [ reduce using rule 7 (statement -> .) ]
  ! INTEGER         [ reduce using rule 7 (statement -> .) ]
  ! BOOL            [ reduce using rule 7 (statement -> .) ]
  ! NAME            [ reduce using rule 7 (statement -> .) ]
  ! DEF             [ reduce using rule 7 (statement -> .) ]
  ! ALTER           [ reduce using rule 7 (statement -> .) ]
  ! REPEAT          [ reduce using rule 7 (statement -> .) ]
  ! UNTIL           [ reduce using rule 7 (statement -> .) ]
  ! $end            [ reduce using rule 7 (statement -> .) ]
  ! PROC            [ reduce using rule 7 (statement -> .) ]
  ! COMMENT         [ reduce using rule 7 (statement -> .) ]
  ! PRINTLINE       [ reduce using rule 7 (statement -> .) ]
  ! PRINT           [ reduce using rule 7 (statement -> .) ]
  ! CASE            [ reduce using rule 7 (statement -> .) ]
  ! ELSE            [ reduce using rule 7 (statement -> .) ]
  ! ALEATORIO       [ reduce using rule 7 (statement -> .) ]
  ! HORN            [ reduce using rule 7 (statement -> .) ]
  ! MOVER           [ reduce using rule 7 (statement -> .) ]
  ! WHILE           [ reduce using rule 7 (statement -> .) ]

    expression                     shift and go to state 24
    statement                      shift and go to state 25
    relation                       shift and go to state 30

state 3

    (45) Body -> statement . expression
    (46) Body -> statement .
    (47) Body -> statement . statement
    (48) Body -> statement . expression statement
    (12) statement -> statement . WHEN expression statement
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON
    (2) statement -> . PROC NAME ( expression )
    (3) statement -> . COMMENT
    (4) statement -> . PRINTLINE
    (5) statement -> . expression
    (6) statement -> . expression statement
    (7) statement -> .
    (8) statement -> . PRINT PRINTLINE
    (9) statement -> . CASE WHEN expression statementt
    (11) statement -> . CASE expression
    (12) statement -> . statement WHEN expression statement
    (13) statement -> . ELSE statement
    (14) statement -> . ALEATORIO LPAREN RPAREN
    (15) statement -> . HORN LPAREN RPAREN
    (16) statement -> . MOVER LPAREN MOVIMIENTO RPAREN
    (42) statement -> . WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON

  ! shift/reduce conflict for WHEN resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 7 (statement -> .)
    WHEN            shift and go to state 39
    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13
    PROC            shift and go to state 14
    COMMENT         shift and go to state 15
    PRINTLINE       shift and go to state 16
    $end            reduce using rule 7 (statement -> .)
    PRINT           shift and go to state 17
    CASE            shift and go to state 18
    ELSE            shift and go to state 19
    ALEATORIO       shift and go to state 20
    HORN            shift and go to state 21
    MOVER           shift and go to state 22
    WHILE           shift and go to state 23

  ! $end            [ reduce using rule 46 (Body -> statement .) ]
  ! WHEN            [ reduce using rule 7 (statement -> .) ]

    statement                      shift and go to state 37
    expression                     shift and go to state 38

state 4

    (29) expression -> - . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

    expression                     shift and go to state 40

state 5

    (28) expression -> ISTRUE . ( expression )

    (               shift and go to state 41


state 6

    (30) expression -> ( . expression )
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

    expression                     shift and go to state 42

state 7

    (31) expression -> INTEGER .

    +               reduce using rule 31 (expression -> INTEGER .)
    -               reduce using rule 31 (expression -> INTEGER .)
    *               reduce using rule 31 (expression -> INTEGER .)
    /               reduce using rule 31 (expression -> INTEGER .)
    PROC            reduce using rule 31 (expression -> INTEGER .)
    COMMENT         reduce using rule 31 (expression -> INTEGER .)
    PRINTLINE       reduce using rule 31 (expression -> INTEGER .)
    PRINT           reduce using rule 31 (expression -> INTEGER .)
    CASE            reduce using rule 31 (expression -> INTEGER .)
    ELSE            reduce using rule 31 (expression -> INTEGER .)
    ALEATORIO       reduce using rule 31 (expression -> INTEGER .)
    HORN            reduce using rule 31 (expression -> INTEGER .)
    MOVER           reduce using rule 31 (expression -> INTEGER .)
    WHILE           reduce using rule 31 (expression -> INTEGER .)
    ISTRUE          reduce using rule 31 (expression -> INTEGER .)
    (               reduce using rule 31 (expression -> INTEGER .)
    INTEGER         reduce using rule 31 (expression -> INTEGER .)
    BOOL            reduce using rule 31 (expression -> INTEGER .)
    NAME            reduce using rule 31 (expression -> INTEGER .)
    DEF             reduce using rule 31 (expression -> INTEGER .)
    ALTER           reduce using rule 31 (expression -> INTEGER .)
    REPEAT          reduce using rule 31 (expression -> INTEGER .)
    UNTIL           reduce using rule 31 (expression -> INTEGER .)
    GT              reduce using rule 31 (expression -> INTEGER .)
    LT              reduce using rule 31 (expression -> INTEGER .)
    GTE             reduce using rule 31 (expression -> INTEGER .)
    LTE             reduce using rule 31 (expression -> INTEGER .)
    NE              reduce using rule 31 (expression -> INTEGER .)
    EQUAL           reduce using rule 31 (expression -> INTEGER .)
    WHEN            reduce using rule 31 (expression -> INTEGER .)
    $end            reduce using rule 31 (expression -> INTEGER .)
    )               reduce using rule 31 (expression -> INTEGER .)
    SEMICOLON       reduce using rule 31 (expression -> INTEGER .)
    RPAREN          reduce using rule 31 (expression -> INTEGER .)
    THEN            reduce using rule 31 (expression -> INTEGER .)


state 8

    (32) expression -> BOOL .

    +               reduce using rule 32 (expression -> BOOL .)
    -               reduce using rule 32 (expression -> BOOL .)
    *               reduce using rule 32 (expression -> BOOL .)
    /               reduce using rule 32 (expression -> BOOL .)
    PROC            reduce using rule 32 (expression -> BOOL .)
    COMMENT         reduce using rule 32 (expression -> BOOL .)
    PRINTLINE       reduce using rule 32 (expression -> BOOL .)
    PRINT           reduce using rule 32 (expression -> BOOL .)
    CASE            reduce using rule 32 (expression -> BOOL .)
    ELSE            reduce using rule 32 (expression -> BOOL .)
    ALEATORIO       reduce using rule 32 (expression -> BOOL .)
    HORN            reduce using rule 32 (expression -> BOOL .)
    MOVER           reduce using rule 32 (expression -> BOOL .)
    WHILE           reduce using rule 32 (expression -> BOOL .)
    ISTRUE          reduce using rule 32 (expression -> BOOL .)
    (               reduce using rule 32 (expression -> BOOL .)
    INTEGER         reduce using rule 32 (expression -> BOOL .)
    BOOL            reduce using rule 32 (expression -> BOOL .)
    NAME            reduce using rule 32 (expression -> BOOL .)
    DEF             reduce using rule 32 (expression -> BOOL .)
    ALTER           reduce using rule 32 (expression -> BOOL .)
    REPEAT          reduce using rule 32 (expression -> BOOL .)
    UNTIL           reduce using rule 32 (expression -> BOOL .)
    GT              reduce using rule 32 (expression -> BOOL .)
    LT              reduce using rule 32 (expression -> BOOL .)
    GTE             reduce using rule 32 (expression -> BOOL .)
    LTE             reduce using rule 32 (expression -> BOOL .)
    NE              reduce using rule 32 (expression -> BOOL .)
    EQUAL           reduce using rule 32 (expression -> BOOL .)
    WHEN            reduce using rule 32 (expression -> BOOL .)
    $end            reduce using rule 32 (expression -> BOOL .)
    )               reduce using rule 32 (expression -> BOOL .)
    SEMICOLON       reduce using rule 32 (expression -> BOOL .)
    RPAREN          reduce using rule 32 (expression -> BOOL .)
    THEN            reduce using rule 32 (expression -> BOOL .)


state 9

    (33) expression -> NAME .
    (35) expression -> NAME . ( expression )

  ! shift/reduce conflict for ( resolved as shift
    +               reduce using rule 33 (expression -> NAME .)
    -               reduce using rule 33 (expression -> NAME .)
    *               reduce using rule 33 (expression -> NAME .)
    /               reduce using rule 33 (expression -> NAME .)
    PROC            reduce using rule 33 (expression -> NAME .)
    COMMENT         reduce using rule 33 (expression -> NAME .)
    PRINTLINE       reduce using rule 33 (expression -> NAME .)
    PRINT           reduce using rule 33 (expression -> NAME .)
    CASE            reduce using rule 33 (expression -> NAME .)
    ELSE            reduce using rule 33 (expression -> NAME .)
    ALEATORIO       reduce using rule 33 (expression -> NAME .)
    HORN            reduce using rule 33 (expression -> NAME .)
    MOVER           reduce using rule 33 (expression -> NAME .)
    WHILE           reduce using rule 33 (expression -> NAME .)
    ISTRUE          reduce using rule 33 (expression -> NAME .)
    INTEGER         reduce using rule 33 (expression -> NAME .)
    BOOL            reduce using rule 33 (expression -> NAME .)
    NAME            reduce using rule 33 (expression -> NAME .)
    DEF             reduce using rule 33 (expression -> NAME .)
    ALTER           reduce using rule 33 (expression -> NAME .)
    REPEAT          reduce using rule 33 (expression -> NAME .)
    UNTIL           reduce using rule 33 (expression -> NAME .)
    GT              reduce using rule 33 (expression -> NAME .)
    LT              reduce using rule 33 (expression -> NAME .)
    GTE             reduce using rule 33 (expression -> NAME .)
    LTE             reduce using rule 33 (expression -> NAME .)
    NE              reduce using rule 33 (expression -> NAME .)
    EQUAL           reduce using rule 33 (expression -> NAME .)
    WHEN            reduce using rule 33 (expression -> NAME .)
    $end            reduce using rule 33 (expression -> NAME .)
    )               reduce using rule 33 (expression -> NAME .)
    SEMICOLON       reduce using rule 33 (expression -> NAME .)
    RPAREN          reduce using rule 33 (expression -> NAME .)
    THEN            reduce using rule 33 (expression -> NAME .)
    (               shift and go to state 43

  ! (               [ reduce using rule 33 (expression -> NAME .) ]


state 10

    (34) expression -> DEF . LPAREN NAME COMMA expression RPAREN SEMICOLON

    LPAREN          shift and go to state 44


state 11

    (36) expression -> ALTER . ( NAME , expression )

    (               shift and go to state 45


state 12

    (37) expression -> REPEAT . LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> REPEAT . LPAREN expression SEMICOLON RPAREN SEMICOLON

    LPAREN          shift and go to state 46


state 13

    (39) expression -> UNTIL . LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> UNTIL . LPAREN expression RPAREN
    (41) expression -> UNTIL . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 47


state 14

    (2) statement -> PROC . NAME ( expression )

    NAME            shift and go to state 48


state 15

    (3) statement -> COMMENT .

    WHEN            reduce using rule 3 (statement -> COMMENT .)
    ISTRUE          reduce using rule 3 (statement -> COMMENT .)
    -               reduce using rule 3 (statement -> COMMENT .)
    (               reduce using rule 3 (statement -> COMMENT .)
    INTEGER         reduce using rule 3 (statement -> COMMENT .)
    BOOL            reduce using rule 3 (statement -> COMMENT .)
    NAME            reduce using rule 3 (statement -> COMMENT .)
    DEF             reduce using rule 3 (statement -> COMMENT .)
    ALTER           reduce using rule 3 (statement -> COMMENT .)
    REPEAT          reduce using rule 3 (statement -> COMMENT .)
    UNTIL           reduce using rule 3 (statement -> COMMENT .)
    PROC            reduce using rule 3 (statement -> COMMENT .)
    COMMENT         reduce using rule 3 (statement -> COMMENT .)
    PRINTLINE       reduce using rule 3 (statement -> COMMENT .)
    PRINT           reduce using rule 3 (statement -> COMMENT .)
    CASE            reduce using rule 3 (statement -> COMMENT .)
    ELSE            reduce using rule 3 (statement -> COMMENT .)
    ALEATORIO       reduce using rule 3 (statement -> COMMENT .)
    HORN            reduce using rule 3 (statement -> COMMENT .)
    MOVER           reduce using rule 3 (statement -> COMMENT .)
    WHILE           reduce using rule 3 (statement -> COMMENT .)
    $end            reduce using rule 3 (statement -> COMMENT .)
    SEMICOLON       reduce using rule 3 (statement -> COMMENT .)
    RPAREN          reduce using rule 3 (statement -> COMMENT .)


state 16

    (4) statement -> PRINTLINE .

    WHEN            reduce using rule 4 (statement -> PRINTLINE .)
    ISTRUE          reduce using rule 4 (statement -> PRINTLINE .)
    -               reduce using rule 4 (statement -> PRINTLINE .)
    (               reduce using rule 4 (statement -> PRINTLINE .)
    INTEGER         reduce using rule 4 (statement -> PRINTLINE .)
    BOOL            reduce using rule 4 (statement -> PRINTLINE .)
    NAME            reduce using rule 4 (statement -> PRINTLINE .)
    DEF             reduce using rule 4 (statement -> PRINTLINE .)
    ALTER           reduce using rule 4 (statement -> PRINTLINE .)
    REPEAT          reduce using rule 4 (statement -> PRINTLINE .)
    UNTIL           reduce using rule 4 (statement -> PRINTLINE .)
    PROC            reduce using rule 4 (statement -> PRINTLINE .)
    COMMENT         reduce using rule 4 (statement -> PRINTLINE .)
    PRINTLINE       reduce using rule 4 (statement -> PRINTLINE .)
    PRINT           reduce using rule 4 (statement -> PRINTLINE .)
    CASE            reduce using rule 4 (statement -> PRINTLINE .)
    ELSE            reduce using rule 4 (statement -> PRINTLINE .)
    ALEATORIO       reduce using rule 4 (statement -> PRINTLINE .)
    HORN            reduce using rule 4 (statement -> PRINTLINE .)
    MOVER           reduce using rule 4 (statement -> PRINTLINE .)
    WHILE           reduce using rule 4 (statement -> PRINTLINE .)
    $end            reduce using rule 4 (statement -> PRINTLINE .)
    SEMICOLON       reduce using rule 4 (statement -> PRINTLINE .)
    RPAREN          reduce using rule 4 (statement -> PRINTLINE .)


state 17

    (8) statement -> PRINT . PRINTLINE

    PRINTLINE       shift and go to state 49


state 18

    (9) statement -> CASE . WHEN expression statementt
    (11) statement -> CASE . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

    WHEN            shift and go to state 50
    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

    expression                     shift and go to state 51

state 19

    (13) statement -> ELSE . statement
    (2) statement -> . PROC NAME ( expression )
    (3) statement -> . COMMENT
    (4) statement -> . PRINTLINE
    (5) statement -> . expression
    (6) statement -> . expression statement
    (7) statement -> .
    (8) statement -> . PRINT PRINTLINE
    (9) statement -> . CASE WHEN expression statementt
    (11) statement -> . CASE expression
    (12) statement -> . statement WHEN expression statement
    (13) statement -> . ELSE statement
    (14) statement -> . ALEATORIO LPAREN RPAREN
    (15) statement -> . HORN LPAREN RPAREN
    (16) statement -> . MOVER LPAREN MOVIMIENTO RPAREN
    (42) statement -> . WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

  ! shift/reduce conflict for PROC resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ALEATORIO resolved as shift
  ! shift/reduce conflict for HORN resolved as shift
  ! shift/reduce conflict for MOVER resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    PROC            shift and go to state 14
    COMMENT         shift and go to state 15
    PRINTLINE       shift and go to state 16
    WHEN            reduce using rule 7 (statement -> .)
    $end            reduce using rule 7 (statement -> .)
    SEMICOLON       reduce using rule 7 (statement -> .)
    RPAREN          reduce using rule 7 (statement -> .)
    PRINT           shift and go to state 17
    CASE            shift and go to state 18
    ELSE            shift and go to state 19
    ALEATORIO       shift and go to state 20
    HORN            shift and go to state 21
    MOVER           shift and go to state 22
    WHILE           shift and go to state 23
    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

  ! ISTRUE          [ reduce using rule 7 (statement -> .) ]
  ! -               [ reduce using rule 7 (statement -> .) ]
  ! (               [ reduce using rule 7 (statement -> .) ]
  ! INTEGER         [ reduce using rule 7 (statement -> .) ]
  ! BOOL            [ reduce using rule 7 (statement -> .) ]
  ! NAME            [ reduce using rule 7 (statement -> .) ]
  ! DEF             [ reduce using rule 7 (statement -> .) ]
  ! ALTER           [ reduce using rule 7 (statement -> .) ]
  ! REPEAT          [ reduce using rule 7 (statement -> .) ]
  ! UNTIL           [ reduce using rule 7 (statement -> .) ]
  ! PROC            [ reduce using rule 7 (statement -> .) ]
  ! COMMENT         [ reduce using rule 7 (statement -> .) ]
  ! PRINTLINE       [ reduce using rule 7 (statement -> .) ]
  ! PRINT           [ reduce using rule 7 (statement -> .) ]
  ! CASE            [ reduce using rule 7 (statement -> .) ]
  ! ELSE            [ reduce using rule 7 (statement -> .) ]
  ! ALEATORIO       [ reduce using rule 7 (statement -> .) ]
  ! HORN            [ reduce using rule 7 (statement -> .) ]
  ! MOVER           [ reduce using rule 7 (statement -> .) ]
  ! WHILE           [ reduce using rule 7 (statement -> .) ]

    statement                      shift and go to state 52
    expression                     shift and go to state 53

state 20

    (14) statement -> ALEATORIO . LPAREN RPAREN

    LPAREN          shift and go to state 54


state 21

    (15) statement -> HORN . LPAREN RPAREN

    LPAREN          shift and go to state 55


state 22

    (16) statement -> MOVER . LPAREN MOVIMIENTO RPAREN

    LPAREN          shift and go to state 56


state 23

    (42) statement -> WHILE . LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON

    LPAREN          shift and go to state 57


state 24

    (49) Body -> expression expression .
    (5) statement -> expression .
    (6) statement -> expression . statement
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (2) statement -> . PROC NAME ( expression )
    (3) statement -> . COMMENT
    (4) statement -> . PRINTLINE
    (5) statement -> . expression
    (6) statement -> . expression statement
    (7) statement -> .
    (8) statement -> . PRINT PRINTLINE
    (9) statement -> . CASE WHEN expression statementt
    (11) statement -> . CASE expression
    (12) statement -> . statement WHEN expression statement
    (13) statement -> . ELSE statement
    (14) statement -> . ALEATORIO LPAREN RPAREN
    (15) statement -> . HORN LPAREN RPAREN
    (16) statement -> . MOVER LPAREN MOVIMIENTO RPAREN
    (42) statement -> . WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

  ! reduce/reduce conflict for $end resolved using rule 5 (statement -> expression .)
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for PROC resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! reduce/reduce conflict for WHEN resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for ISTRUE resolved using rule 5 (statement -> expression .)
  ! shift/reduce conflict for - resolved as shift
  ! reduce/reduce conflict for ( resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for INTEGER resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for BOOL resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for NAME resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for DEF resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for ALTER resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for REPEAT resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for UNTIL resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for $end resolved using rule 5 (statement -> expression .)
  ! shift/reduce conflict for PROC resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! reduce/reduce conflict for PRINT resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for CASE resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for ALEATORIO resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for HORN resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for MOVER resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 5 (statement -> expression .)
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ALEATORIO resolved as shift
  ! shift/reduce conflict for HORN resolved as shift
  ! shift/reduce conflict for MOVER resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    WHEN            reduce using rule 5 (statement -> expression .)
    $end            reduce using rule 5 (statement -> expression .)
    +               shift and go to state 26
    -               shift and go to state 27
    *               shift and go to state 28
    /               shift and go to state 29
    PROC            shift and go to state 14
    COMMENT         shift and go to state 15
    PRINTLINE       shift and go to state 16
    PRINT           shift and go to state 17
    CASE            shift and go to state 18
    ELSE            shift and go to state 19
    ALEATORIO       shift and go to state 20
    HORN            shift and go to state 21
    MOVER           shift and go to state 22
    WHILE           shift and go to state 23
    GT              shift and go to state 31
    LT              shift and go to state 32
    GTE             shift and go to state 33
    LTE             shift and go to state 34
    NE              shift and go to state 35
    EQUAL           shift and go to state 36
    ISTRUE          shift and go to state 5
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

  ! $end            [ reduce using rule 49 (Body -> expression expression .) ]
  ! ISTRUE          [ reduce using rule 5 (statement -> expression .) ]
  ! -               [ reduce using rule 5 (statement -> expression .) ]
  ! (               [ reduce using rule 5 (statement -> expression .) ]
  ! INTEGER         [ reduce using rule 5 (statement -> expression .) ]
  ! BOOL            [ reduce using rule 5 (statement -> expression .) ]
  ! NAME            [ reduce using rule 5 (statement -> expression .) ]
  ! DEF             [ reduce using rule 5 (statement -> expression .) ]
  ! ALTER           [ reduce using rule 5 (statement -> expression .) ]
  ! REPEAT          [ reduce using rule 5 (statement -> expression .) ]
  ! UNTIL           [ reduce using rule 5 (statement -> expression .) ]
  ! PROC            [ reduce using rule 5 (statement -> expression .) ]
  ! COMMENT         [ reduce using rule 5 (statement -> expression .) ]
  ! PRINTLINE       [ reduce using rule 5 (statement -> expression .) ]
  ! PRINT           [ reduce using rule 5 (statement -> expression .) ]
  ! CASE            [ reduce using rule 5 (statement -> expression .) ]
  ! ELSE            [ reduce using rule 5 (statement -> expression .) ]
  ! ALEATORIO       [ reduce using rule 5 (statement -> expression .) ]
  ! HORN            [ reduce using rule 5 (statement -> expression .) ]
  ! MOVER           [ reduce using rule 5 (statement -> expression .) ]
  ! WHILE           [ reduce using rule 5 (statement -> expression .) ]
  ! WHEN            [ reduce using rule 7 (statement -> .) ]
  ! ISTRUE          [ reduce using rule 7 (statement -> .) ]
  ! -               [ reduce using rule 7 (statement -> .) ]
  ! (               [ reduce using rule 7 (statement -> .) ]
  ! INTEGER         [ reduce using rule 7 (statement -> .) ]
  ! BOOL            [ reduce using rule 7 (statement -> .) ]
  ! NAME            [ reduce using rule 7 (statement -> .) ]
  ! DEF             [ reduce using rule 7 (statement -> .) ]
  ! ALTER           [ reduce using rule 7 (statement -> .) ]
  ! REPEAT          [ reduce using rule 7 (statement -> .) ]
  ! UNTIL           [ reduce using rule 7 (statement -> .) ]
  ! $end            [ reduce using rule 7 (statement -> .) ]
  ! PROC            [ reduce using rule 7 (statement -> .) ]
  ! COMMENT         [ reduce using rule 7 (statement -> .) ]
  ! PRINTLINE       [ reduce using rule 7 (statement -> .) ]
  ! PRINT           [ reduce using rule 7 (statement -> .) ]
  ! CASE            [ reduce using rule 7 (statement -> .) ]
  ! ELSE            [ reduce using rule 7 (statement -> .) ]
  ! ALEATORIO       [ reduce using rule 7 (statement -> .) ]
  ! HORN            [ reduce using rule 7 (statement -> .) ]
  ! MOVER           [ reduce using rule 7 (statement -> .) ]
  ! WHILE           [ reduce using rule 7 (statement -> .) ]

    expression                     shift and go to state 53
    statement                      shift and go to state 58
    relation                       shift and go to state 30

state 25

    (43) Body -> expression statement . expression
    (44) Body -> expression statement .
    (6) statement -> expression statement .
    (12) statement -> statement . WHEN expression statement
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

  ! reduce/reduce conflict for $end resolved using rule 6 (statement -> expression statement .)
  ! shift/reduce conflict for WHEN resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    PROC            reduce using rule 6 (statement -> expression statement .)
    COMMENT         reduce using rule 6 (statement -> expression statement .)
    PRINTLINE       reduce using rule 6 (statement -> expression statement .)
    PRINT           reduce using rule 6 (statement -> expression statement .)
    CASE            reduce using rule 6 (statement -> expression statement .)
    ELSE            reduce using rule 6 (statement -> expression statement .)
    ALEATORIO       reduce using rule 6 (statement -> expression statement .)
    HORN            reduce using rule 6 (statement -> expression statement .)
    MOVER           reduce using rule 6 (statement -> expression statement .)
    WHILE           reduce using rule 6 (statement -> expression statement .)
    $end            reduce using rule 6 (statement -> expression statement .)
    WHEN            shift and go to state 39
    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

  ! $end            [ reduce using rule 44 (Body -> expression statement .) ]
  ! WHEN            [ reduce using rule 6 (statement -> expression statement .) ]
  ! ISTRUE          [ reduce using rule 6 (statement -> expression statement .) ]
  ! -               [ reduce using rule 6 (statement -> expression statement .) ]
  ! (               [ reduce using rule 6 (statement -> expression statement .) ]
  ! INTEGER         [ reduce using rule 6 (statement -> expression statement .) ]
  ! BOOL            [ reduce using rule 6 (statement -> expression statement .) ]
  ! NAME            [ reduce using rule 6 (statement -> expression statement .) ]
  ! DEF             [ reduce using rule 6 (statement -> expression statement .) ]
  ! ALTER           [ reduce using rule 6 (statement -> expression statement .) ]
  ! REPEAT          [ reduce using rule 6 (statement -> expression statement .) ]
  ! UNTIL           [ reduce using rule 6 (statement -> expression statement .) ]

    expression                     shift and go to state 59

state 26

    (17) expression -> expression + . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

    expression                     shift and go to state 60

state 27

    (18) expression -> expression - . expression
    (29) expression -> - . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

    expression                     shift and go to state 61

state 28

    (19) expression -> expression * . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

    expression                     shift and go to state 62

state 29

    (20) expression -> expression / . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

    expression                     shift and go to state 63

state 30

    (27) expression -> expression relation . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

    expression                     shift and go to state 64

state 31

    (21) relation -> GT .

    ISTRUE          reduce using rule 21 (relation -> GT .)
    -               reduce using rule 21 (relation -> GT .)
    (               reduce using rule 21 (relation -> GT .)
    INTEGER         reduce using rule 21 (relation -> GT .)
    BOOL            reduce using rule 21 (relation -> GT .)
    NAME            reduce using rule 21 (relation -> GT .)
    DEF             reduce using rule 21 (relation -> GT .)
    ALTER           reduce using rule 21 (relation -> GT .)
    REPEAT          reduce using rule 21 (relation -> GT .)
    UNTIL           reduce using rule 21 (relation -> GT .)


state 32

    (22) relation -> LT .

    ISTRUE          reduce using rule 22 (relation -> LT .)
    -               reduce using rule 22 (relation -> LT .)
    (               reduce using rule 22 (relation -> LT .)
    INTEGER         reduce using rule 22 (relation -> LT .)
    BOOL            reduce using rule 22 (relation -> LT .)
    NAME            reduce using rule 22 (relation -> LT .)
    DEF             reduce using rule 22 (relation -> LT .)
    ALTER           reduce using rule 22 (relation -> LT .)
    REPEAT          reduce using rule 22 (relation -> LT .)
    UNTIL           reduce using rule 22 (relation -> LT .)


state 33

    (23) relation -> GTE .

    ISTRUE          reduce using rule 23 (relation -> GTE .)
    -               reduce using rule 23 (relation -> GTE .)
    (               reduce using rule 23 (relation -> GTE .)
    INTEGER         reduce using rule 23 (relation -> GTE .)
    BOOL            reduce using rule 23 (relation -> GTE .)
    NAME            reduce using rule 23 (relation -> GTE .)
    DEF             reduce using rule 23 (relation -> GTE .)
    ALTER           reduce using rule 23 (relation -> GTE .)
    REPEAT          reduce using rule 23 (relation -> GTE .)
    UNTIL           reduce using rule 23 (relation -> GTE .)


state 34

    (24) relation -> LTE .

    ISTRUE          reduce using rule 24 (relation -> LTE .)
    -               reduce using rule 24 (relation -> LTE .)
    (               reduce using rule 24 (relation -> LTE .)
    INTEGER         reduce using rule 24 (relation -> LTE .)
    BOOL            reduce using rule 24 (relation -> LTE .)
    NAME            reduce using rule 24 (relation -> LTE .)
    DEF             reduce using rule 24 (relation -> LTE .)
    ALTER           reduce using rule 24 (relation -> LTE .)
    REPEAT          reduce using rule 24 (relation -> LTE .)
    UNTIL           reduce using rule 24 (relation -> LTE .)


state 35

    (25) relation -> NE .

    ISTRUE          reduce using rule 25 (relation -> NE .)
    -               reduce using rule 25 (relation -> NE .)
    (               reduce using rule 25 (relation -> NE .)
    INTEGER         reduce using rule 25 (relation -> NE .)
    BOOL            reduce using rule 25 (relation -> NE .)
    NAME            reduce using rule 25 (relation -> NE .)
    DEF             reduce using rule 25 (relation -> NE .)
    ALTER           reduce using rule 25 (relation -> NE .)
    REPEAT          reduce using rule 25 (relation -> NE .)
    UNTIL           reduce using rule 25 (relation -> NE .)


state 36

    (26) relation -> EQUAL .

    ISTRUE          reduce using rule 26 (relation -> EQUAL .)
    -               reduce using rule 26 (relation -> EQUAL .)
    (               reduce using rule 26 (relation -> EQUAL .)
    INTEGER         reduce using rule 26 (relation -> EQUAL .)
    BOOL            reduce using rule 26 (relation -> EQUAL .)
    NAME            reduce using rule 26 (relation -> EQUAL .)
    DEF             reduce using rule 26 (relation -> EQUAL .)
    ALTER           reduce using rule 26 (relation -> EQUAL .)
    REPEAT          reduce using rule 26 (relation -> EQUAL .)
    UNTIL           reduce using rule 26 (relation -> EQUAL .)


state 37

    (47) Body -> statement statement .
    (12) statement -> statement . WHEN expression statement

    $end            reduce using rule 47 (Body -> statement statement .)
    WHEN            shift and go to state 39


state 38

    (45) Body -> statement expression .
    (48) Body -> statement expression . statement
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (5) statement -> expression .
    (6) statement -> expression . statement
    (2) statement -> . PROC NAME ( expression )
    (3) statement -> . COMMENT
    (4) statement -> . PRINTLINE
    (5) statement -> . expression
    (6) statement -> . expression statement
    (7) statement -> .
    (8) statement -> . PRINT PRINTLINE
    (9) statement -> . CASE WHEN expression statementt
    (11) statement -> . CASE expression
    (12) statement -> . statement WHEN expression statement
    (13) statement -> . ELSE statement
    (14) statement -> . ALEATORIO LPAREN RPAREN
    (15) statement -> . HORN LPAREN RPAREN
    (16) statement -> . MOVER LPAREN MOVIMIENTO RPAREN
    (42) statement -> . WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

  ! reduce/reduce conflict for $end resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for WHEN resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for $end resolved using rule 5 (statement -> expression .)
    +               shift and go to state 26
    -               shift and go to state 27
    *               shift and go to state 28
    /               shift and go to state 29
    WHEN            reduce using rule 5 (statement -> expression .)
    $end            reduce using rule 5 (statement -> expression .)
    PROC            shift and go to state 14
    COMMENT         shift and go to state 15
    PRINTLINE       shift and go to state 16
    PRINT           shift and go to state 17
    CASE            shift and go to state 18
    ELSE            shift and go to state 19
    ALEATORIO       shift and go to state 20
    HORN            shift and go to state 21
    MOVER           shift and go to state 22
    WHILE           shift and go to state 23
    GT              shift and go to state 31
    LT              shift and go to state 32
    GTE             shift and go to state 33
    LTE             shift and go to state 34
    NE              shift and go to state 35
    EQUAL           shift and go to state 36
    ISTRUE          shift and go to state 5
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

  ! $end            [ reduce using rule 45 (Body -> statement expression .) ]
  ! WHEN            [ reduce using rule 7 (statement -> .) ]
  ! $end            [ reduce using rule 7 (statement -> .) ]

    statement                      shift and go to state 65
    expression                     shift and go to state 53
    relation                       shift and go to state 30

state 39

    (12) statement -> statement WHEN . expression statement
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

    expression                     shift and go to state 66

state 40

    (29) expression -> - expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL

    +               reduce using rule 29 (expression -> - expression .)
    -               reduce using rule 29 (expression -> - expression .)
    *               reduce using rule 29 (expression -> - expression .)
    /               reduce using rule 29 (expression -> - expression .)
    PROC            reduce using rule 29 (expression -> - expression .)
    COMMENT         reduce using rule 29 (expression -> - expression .)
    PRINTLINE       reduce using rule 29 (expression -> - expression .)
    PRINT           reduce using rule 29 (expression -> - expression .)
    CASE            reduce using rule 29 (expression -> - expression .)
    ELSE            reduce using rule 29 (expression -> - expression .)
    ALEATORIO       reduce using rule 29 (expression -> - expression .)
    HORN            reduce using rule 29 (expression -> - expression .)
    MOVER           reduce using rule 29 (expression -> - expression .)
    WHILE           reduce using rule 29 (expression -> - expression .)
    ISTRUE          reduce using rule 29 (expression -> - expression .)
    (               reduce using rule 29 (expression -> - expression .)
    INTEGER         reduce using rule 29 (expression -> - expression .)
    BOOL            reduce using rule 29 (expression -> - expression .)
    NAME            reduce using rule 29 (expression -> - expression .)
    DEF             reduce using rule 29 (expression -> - expression .)
    ALTER           reduce using rule 29 (expression -> - expression .)
    REPEAT          reduce using rule 29 (expression -> - expression .)
    UNTIL           reduce using rule 29 (expression -> - expression .)
    GT              reduce using rule 29 (expression -> - expression .)
    LT              reduce using rule 29 (expression -> - expression .)
    GTE             reduce using rule 29 (expression -> - expression .)
    LTE             reduce using rule 29 (expression -> - expression .)
    NE              reduce using rule 29 (expression -> - expression .)
    EQUAL           reduce using rule 29 (expression -> - expression .)
    WHEN            reduce using rule 29 (expression -> - expression .)
    $end            reduce using rule 29 (expression -> - expression .)
    )               reduce using rule 29 (expression -> - expression .)
    SEMICOLON       reduce using rule 29 (expression -> - expression .)
    RPAREN          reduce using rule 29 (expression -> - expression .)
    THEN            reduce using rule 29 (expression -> - expression .)

  ! +               [ shift and go to state 26 ]
  ! -               [ shift and go to state 67 ]
  ! *               [ shift and go to state 28 ]
  ! /               [ shift and go to state 29 ]
  ! GT              [ shift and go to state 31 ]
  ! LT              [ shift and go to state 32 ]
  ! GTE             [ shift and go to state 33 ]
  ! LTE             [ shift and go to state 34 ]
  ! NE              [ shift and go to state 35 ]
  ! EQUAL           [ shift and go to state 36 ]

    relation                       shift and go to state 30

state 41

    (28) expression -> ISTRUE ( . expression )
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

    expression                     shift and go to state 68

state 42

    (30) expression -> ( expression . )
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL

    )               shift and go to state 69
    +               shift and go to state 26
    -               shift and go to state 67
    *               shift and go to state 28
    /               shift and go to state 29
    GT              shift and go to state 31
    LT              shift and go to state 32
    GTE             shift and go to state 33
    LTE             shift and go to state 34
    NE              shift and go to state 35
    EQUAL           shift and go to state 36

    relation                       shift and go to state 30

state 43

    (35) expression -> NAME ( . expression )
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

    expression                     shift and go to state 70

state 44

    (34) expression -> DEF LPAREN . NAME COMMA expression RPAREN SEMICOLON

    NAME            shift and go to state 71


state 45

    (36) expression -> ALTER ( . NAME , expression )

    NAME            shift and go to state 72


state 46

    (37) expression -> REPEAT LPAREN . expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> REPEAT LPAREN . expression SEMICOLON RPAREN SEMICOLON
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

    expression                     shift and go to state 73

state 47

    (39) expression -> UNTIL LPAREN . expression RPAREN statement SEMICOLON
    (40) expression -> UNTIL LPAREN . expression RPAREN
    (41) expression -> UNTIL LPAREN . expression RPAREN SEMICOLON
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

    expression                     shift and go to state 74

state 48

    (2) statement -> PROC NAME . ( expression )

    (               shift and go to state 75


state 49

    (8) statement -> PRINT PRINTLINE .

    WHEN            reduce using rule 8 (statement -> PRINT PRINTLINE .)
    ISTRUE          reduce using rule 8 (statement -> PRINT PRINTLINE .)
    -               reduce using rule 8 (statement -> PRINT PRINTLINE .)
    (               reduce using rule 8 (statement -> PRINT PRINTLINE .)
    INTEGER         reduce using rule 8 (statement -> PRINT PRINTLINE .)
    BOOL            reduce using rule 8 (statement -> PRINT PRINTLINE .)
    NAME            reduce using rule 8 (statement -> PRINT PRINTLINE .)
    DEF             reduce using rule 8 (statement -> PRINT PRINTLINE .)
    ALTER           reduce using rule 8 (statement -> PRINT PRINTLINE .)
    REPEAT          reduce using rule 8 (statement -> PRINT PRINTLINE .)
    UNTIL           reduce using rule 8 (statement -> PRINT PRINTLINE .)
    PROC            reduce using rule 8 (statement -> PRINT PRINTLINE .)
    COMMENT         reduce using rule 8 (statement -> PRINT PRINTLINE .)
    PRINTLINE       reduce using rule 8 (statement -> PRINT PRINTLINE .)
    PRINT           reduce using rule 8 (statement -> PRINT PRINTLINE .)
    CASE            reduce using rule 8 (statement -> PRINT PRINTLINE .)
    ELSE            reduce using rule 8 (statement -> PRINT PRINTLINE .)
    ALEATORIO       reduce using rule 8 (statement -> PRINT PRINTLINE .)
    HORN            reduce using rule 8 (statement -> PRINT PRINTLINE .)
    MOVER           reduce using rule 8 (statement -> PRINT PRINTLINE .)
    WHILE           reduce using rule 8 (statement -> PRINT PRINTLINE .)
    $end            reduce using rule 8 (statement -> PRINT PRINTLINE .)
    SEMICOLON       reduce using rule 8 (statement -> PRINT PRINTLINE .)
    RPAREN          reduce using rule 8 (statement -> PRINT PRINTLINE .)


state 50

    (9) statement -> CASE WHEN . expression statementt
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

    expression                     shift and go to state 76

state 51

    (11) statement -> CASE expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL

    WHEN            reduce using rule 11 (statement -> CASE expression .)
    ISTRUE          reduce using rule 11 (statement -> CASE expression .)
    -               reduce using rule 11 (statement -> CASE expression .)
    (               reduce using rule 11 (statement -> CASE expression .)
    INTEGER         reduce using rule 11 (statement -> CASE expression .)
    BOOL            reduce using rule 11 (statement -> CASE expression .)
    NAME            reduce using rule 11 (statement -> CASE expression .)
    DEF             reduce using rule 11 (statement -> CASE expression .)
    ALTER           reduce using rule 11 (statement -> CASE expression .)
    REPEAT          reduce using rule 11 (statement -> CASE expression .)
    UNTIL           reduce using rule 11 (statement -> CASE expression .)
    PROC            reduce using rule 11 (statement -> CASE expression .)
    COMMENT         reduce using rule 11 (statement -> CASE expression .)
    PRINTLINE       reduce using rule 11 (statement -> CASE expression .)
    PRINT           reduce using rule 11 (statement -> CASE expression .)
    CASE            reduce using rule 11 (statement -> CASE expression .)
    ELSE            reduce using rule 11 (statement -> CASE expression .)
    ALEATORIO       reduce using rule 11 (statement -> CASE expression .)
    HORN            reduce using rule 11 (statement -> CASE expression .)
    MOVER           reduce using rule 11 (statement -> CASE expression .)
    WHILE           reduce using rule 11 (statement -> CASE expression .)
    $end            reduce using rule 11 (statement -> CASE expression .)
    SEMICOLON       reduce using rule 11 (statement -> CASE expression .)
    RPAREN          reduce using rule 11 (statement -> CASE expression .)
    +               shift and go to state 26
    *               shift and go to state 28
    /               shift and go to state 29
    GT              shift and go to state 31
    LT              shift and go to state 32
    GTE             shift and go to state 33
    LTE             shift and go to state 34
    NE              shift and go to state 35
    EQUAL           shift and go to state 36

  ! -               [ shift and go to state 67 ]

    relation                       shift and go to state 30

state 52

    (13) statement -> ELSE statement .
    (12) statement -> statement . WHEN expression statement

  ! shift/reduce conflict for WHEN resolved as shift
    ISTRUE          reduce using rule 13 (statement -> ELSE statement .)
    -               reduce using rule 13 (statement -> ELSE statement .)
    (               reduce using rule 13 (statement -> ELSE statement .)
    INTEGER         reduce using rule 13 (statement -> ELSE statement .)
    BOOL            reduce using rule 13 (statement -> ELSE statement .)
    NAME            reduce using rule 13 (statement -> ELSE statement .)
    DEF             reduce using rule 13 (statement -> ELSE statement .)
    ALTER           reduce using rule 13 (statement -> ELSE statement .)
    REPEAT          reduce using rule 13 (statement -> ELSE statement .)
    UNTIL           reduce using rule 13 (statement -> ELSE statement .)
    PROC            reduce using rule 13 (statement -> ELSE statement .)
    COMMENT         reduce using rule 13 (statement -> ELSE statement .)
    PRINTLINE       reduce using rule 13 (statement -> ELSE statement .)
    PRINT           reduce using rule 13 (statement -> ELSE statement .)
    CASE            reduce using rule 13 (statement -> ELSE statement .)
    ELSE            reduce using rule 13 (statement -> ELSE statement .)
    ALEATORIO       reduce using rule 13 (statement -> ELSE statement .)
    HORN            reduce using rule 13 (statement -> ELSE statement .)
    MOVER           reduce using rule 13 (statement -> ELSE statement .)
    WHILE           reduce using rule 13 (statement -> ELSE statement .)
    $end            reduce using rule 13 (statement -> ELSE statement .)
    SEMICOLON       reduce using rule 13 (statement -> ELSE statement .)
    RPAREN          reduce using rule 13 (statement -> ELSE statement .)
    WHEN            shift and go to state 39

  ! WHEN            [ reduce using rule 13 (statement -> ELSE statement .) ]


state 53

    (5) statement -> expression .
    (6) statement -> expression . statement
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (2) statement -> . PROC NAME ( expression )
    (3) statement -> . COMMENT
    (4) statement -> . PRINTLINE
    (5) statement -> . expression
    (6) statement -> . expression statement
    (7) statement -> .
    (8) statement -> . PRINT PRINTLINE
    (9) statement -> . CASE WHEN expression statementt
    (11) statement -> . CASE expression
    (12) statement -> . statement WHEN expression statement
    (13) statement -> . ELSE statement
    (14) statement -> . ALEATORIO LPAREN RPAREN
    (15) statement -> . HORN LPAREN RPAREN
    (16) statement -> . MOVER LPAREN MOVIMIENTO RPAREN
    (42) statement -> . WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for PROC resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! reduce/reduce conflict for WHEN resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for ISTRUE resolved using rule 5 (statement -> expression .)
  ! shift/reduce conflict for - resolved as shift
  ! reduce/reduce conflict for ( resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for INTEGER resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for BOOL resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for NAME resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for DEF resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for ALTER resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for REPEAT resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for UNTIL resolved using rule 5 (statement -> expression .)
  ! shift/reduce conflict for PROC resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! reduce/reduce conflict for PRINT resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for CASE resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for ALEATORIO resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for HORN resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for MOVER resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for $end resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 5 (statement -> expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 5 (statement -> expression .)
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ALEATORIO resolved as shift
  ! shift/reduce conflict for HORN resolved as shift
  ! shift/reduce conflict for MOVER resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    WHEN            reduce using rule 5 (statement -> expression .)
    $end            reduce using rule 5 (statement -> expression .)
    SEMICOLON       reduce using rule 5 (statement -> expression .)
    RPAREN          reduce using rule 5 (statement -> expression .)
    +               shift and go to state 26
    -               shift and go to state 27
    *               shift and go to state 28
    /               shift and go to state 29
    PROC            shift and go to state 14
    COMMENT         shift and go to state 15
    PRINTLINE       shift and go to state 16
    PRINT           shift and go to state 17
    CASE            shift and go to state 18
    ELSE            shift and go to state 19
    ALEATORIO       shift and go to state 20
    HORN            shift and go to state 21
    MOVER           shift and go to state 22
    WHILE           shift and go to state 23
    GT              shift and go to state 31
    LT              shift and go to state 32
    GTE             shift and go to state 33
    LTE             shift and go to state 34
    NE              shift and go to state 35
    EQUAL           shift and go to state 36
    ISTRUE          shift and go to state 5
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

  ! ISTRUE          [ reduce using rule 5 (statement -> expression .) ]
  ! -               [ reduce using rule 5 (statement -> expression .) ]
  ! (               [ reduce using rule 5 (statement -> expression .) ]
  ! INTEGER         [ reduce using rule 5 (statement -> expression .) ]
  ! BOOL            [ reduce using rule 5 (statement -> expression .) ]
  ! NAME            [ reduce using rule 5 (statement -> expression .) ]
  ! DEF             [ reduce using rule 5 (statement -> expression .) ]
  ! ALTER           [ reduce using rule 5 (statement -> expression .) ]
  ! REPEAT          [ reduce using rule 5 (statement -> expression .) ]
  ! UNTIL           [ reduce using rule 5 (statement -> expression .) ]
  ! PROC            [ reduce using rule 5 (statement -> expression .) ]
  ! COMMENT         [ reduce using rule 5 (statement -> expression .) ]
  ! PRINTLINE       [ reduce using rule 5 (statement -> expression .) ]
  ! PRINT           [ reduce using rule 5 (statement -> expression .) ]
  ! CASE            [ reduce using rule 5 (statement -> expression .) ]
  ! ELSE            [ reduce using rule 5 (statement -> expression .) ]
  ! ALEATORIO       [ reduce using rule 5 (statement -> expression .) ]
  ! HORN            [ reduce using rule 5 (statement -> expression .) ]
  ! MOVER           [ reduce using rule 5 (statement -> expression .) ]
  ! WHILE           [ reduce using rule 5 (statement -> expression .) ]
  ! WHEN            [ reduce using rule 7 (statement -> .) ]
  ! ISTRUE          [ reduce using rule 7 (statement -> .) ]
  ! -               [ reduce using rule 7 (statement -> .) ]
  ! (               [ reduce using rule 7 (statement -> .) ]
  ! INTEGER         [ reduce using rule 7 (statement -> .) ]
  ! BOOL            [ reduce using rule 7 (statement -> .) ]
  ! NAME            [ reduce using rule 7 (statement -> .) ]
  ! DEF             [ reduce using rule 7 (statement -> .) ]
  ! ALTER           [ reduce using rule 7 (statement -> .) ]
  ! REPEAT          [ reduce using rule 7 (statement -> .) ]
  ! UNTIL           [ reduce using rule 7 (statement -> .) ]
  ! PROC            [ reduce using rule 7 (statement -> .) ]
  ! COMMENT         [ reduce using rule 7 (statement -> .) ]
  ! PRINTLINE       [ reduce using rule 7 (statement -> .) ]
  ! PRINT           [ reduce using rule 7 (statement -> .) ]
  ! CASE            [ reduce using rule 7 (statement -> .) ]
  ! ELSE            [ reduce using rule 7 (statement -> .) ]
  ! ALEATORIO       [ reduce using rule 7 (statement -> .) ]
  ! HORN            [ reduce using rule 7 (statement -> .) ]
  ! MOVER           [ reduce using rule 7 (statement -> .) ]
  ! WHILE           [ reduce using rule 7 (statement -> .) ]
  ! $end            [ reduce using rule 7 (statement -> .) ]
  ! SEMICOLON       [ reduce using rule 7 (statement -> .) ]
  ! RPAREN          [ reduce using rule 7 (statement -> .) ]

    expression                     shift and go to state 53
    statement                      shift and go to state 58
    relation                       shift and go to state 30

state 54

    (14) statement -> ALEATORIO LPAREN . RPAREN

    RPAREN          shift and go to state 77


state 55

    (15) statement -> HORN LPAREN . RPAREN

    RPAREN          shift and go to state 78


state 56

    (16) statement -> MOVER LPAREN . MOVIMIENTO RPAREN

    MOVIMIENTO      shift and go to state 79


state 57

    (42) statement -> WHILE LPAREN . expression RPAREN LPAREN statement RPAREN SEMICOLON
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

    expression                     shift and go to state 80

state 58

    (6) statement -> expression statement .
    (12) statement -> statement . WHEN expression statement

  ! shift/reduce conflict for WHEN resolved as shift
    ISTRUE          reduce using rule 6 (statement -> expression statement .)
    -               reduce using rule 6 (statement -> expression statement .)
    (               reduce using rule 6 (statement -> expression statement .)
    INTEGER         reduce using rule 6 (statement -> expression statement .)
    BOOL            reduce using rule 6 (statement -> expression statement .)
    NAME            reduce using rule 6 (statement -> expression statement .)
    DEF             reduce using rule 6 (statement -> expression statement .)
    ALTER           reduce using rule 6 (statement -> expression statement .)
    REPEAT          reduce using rule 6 (statement -> expression statement .)
    UNTIL           reduce using rule 6 (statement -> expression statement .)
    $end            reduce using rule 6 (statement -> expression statement .)
    PROC            reduce using rule 6 (statement -> expression statement .)
    COMMENT         reduce using rule 6 (statement -> expression statement .)
    PRINTLINE       reduce using rule 6 (statement -> expression statement .)
    PRINT           reduce using rule 6 (statement -> expression statement .)
    CASE            reduce using rule 6 (statement -> expression statement .)
    ELSE            reduce using rule 6 (statement -> expression statement .)
    ALEATORIO       reduce using rule 6 (statement -> expression statement .)
    HORN            reduce using rule 6 (statement -> expression statement .)
    MOVER           reduce using rule 6 (statement -> expression statement .)
    WHILE           reduce using rule 6 (statement -> expression statement .)
    SEMICOLON       reduce using rule 6 (statement -> expression statement .)
    RPAREN          reduce using rule 6 (statement -> expression statement .)
    WHEN            shift and go to state 39

  ! WHEN            [ reduce using rule 6 (statement -> expression statement .) ]


state 59

    (43) Body -> expression statement expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL

    $end            reduce using rule 43 (Body -> expression statement expression .)
    +               shift and go to state 26
    -               shift and go to state 67
    *               shift and go to state 28
    /               shift and go to state 29
    GT              shift and go to state 31
    LT              shift and go to state 32
    GTE             shift and go to state 33
    LTE             shift and go to state 34
    NE              shift and go to state 35
    EQUAL           shift and go to state 36

    relation                       shift and go to state 30

state 60

    (17) expression -> expression + expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL

    +               reduce using rule 17 (expression -> expression + expression .)
    -               reduce using rule 17 (expression -> expression + expression .)
    PROC            reduce using rule 17 (expression -> expression + expression .)
    COMMENT         reduce using rule 17 (expression -> expression + expression .)
    PRINTLINE       reduce using rule 17 (expression -> expression + expression .)
    PRINT           reduce using rule 17 (expression -> expression + expression .)
    CASE            reduce using rule 17 (expression -> expression + expression .)
    ELSE            reduce using rule 17 (expression -> expression + expression .)
    ALEATORIO       reduce using rule 17 (expression -> expression + expression .)
    HORN            reduce using rule 17 (expression -> expression + expression .)
    MOVER           reduce using rule 17 (expression -> expression + expression .)
    WHILE           reduce using rule 17 (expression -> expression + expression .)
    ISTRUE          reduce using rule 17 (expression -> expression + expression .)
    (               reduce using rule 17 (expression -> expression + expression .)
    INTEGER         reduce using rule 17 (expression -> expression + expression .)
    BOOL            reduce using rule 17 (expression -> expression + expression .)
    NAME            reduce using rule 17 (expression -> expression + expression .)
    DEF             reduce using rule 17 (expression -> expression + expression .)
    ALTER           reduce using rule 17 (expression -> expression + expression .)
    REPEAT          reduce using rule 17 (expression -> expression + expression .)
    UNTIL           reduce using rule 17 (expression -> expression + expression .)
    GT              reduce using rule 17 (expression -> expression + expression .)
    LT              reduce using rule 17 (expression -> expression + expression .)
    GTE             reduce using rule 17 (expression -> expression + expression .)
    LTE             reduce using rule 17 (expression -> expression + expression .)
    NE              reduce using rule 17 (expression -> expression + expression .)
    EQUAL           reduce using rule 17 (expression -> expression + expression .)
    WHEN            reduce using rule 17 (expression -> expression + expression .)
    $end            reduce using rule 17 (expression -> expression + expression .)
    )               reduce using rule 17 (expression -> expression + expression .)
    SEMICOLON       reduce using rule 17 (expression -> expression + expression .)
    RPAREN          reduce using rule 17 (expression -> expression + expression .)
    THEN            reduce using rule 17 (expression -> expression + expression .)
    *               shift and go to state 28
    /               shift and go to state 29

  ! *               [ reduce using rule 17 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 17 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 26 ]
  ! -               [ shift and go to state 67 ]
  ! GT              [ shift and go to state 31 ]
  ! LT              [ shift and go to state 32 ]
  ! GTE             [ shift and go to state 33 ]
  ! LTE             [ shift and go to state 34 ]
  ! NE              [ shift and go to state 35 ]
  ! EQUAL           [ shift and go to state 36 ]

    relation                       shift and go to state 30

state 61

    (18) expression -> expression - expression .
    (29) expression -> - expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL

  ! reduce/reduce conflict for + resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for - resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for * resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for / resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for PROC resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for COMMENT resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for PRINTLINE resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for PRINT resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for CASE resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for ELSE resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for ALEATORIO resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for HORN resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for MOVER resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for GT resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for LT resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for GTE resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for LTE resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for NE resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for EQUAL resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for ISTRUE resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for ( resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for INTEGER resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for BOOL resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for NAME resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for DEF resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for ALTER resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for REPEAT resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for UNTIL resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for WHEN resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for $end resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 18 (expression -> expression - expression .)
  ! reduce/reduce conflict for RPAREN resolved using rule 18 (expression -> expression - expression .)
    +               reduce using rule 18 (expression -> expression - expression .)
    -               reduce using rule 18 (expression -> expression - expression .)
    PROC            reduce using rule 18 (expression -> expression - expression .)
    COMMENT         reduce using rule 18 (expression -> expression - expression .)
    PRINTLINE       reduce using rule 18 (expression -> expression - expression .)
    PRINT           reduce using rule 18 (expression -> expression - expression .)
    CASE            reduce using rule 18 (expression -> expression - expression .)
    ELSE            reduce using rule 18 (expression -> expression - expression .)
    ALEATORIO       reduce using rule 18 (expression -> expression - expression .)
    HORN            reduce using rule 18 (expression -> expression - expression .)
    MOVER           reduce using rule 18 (expression -> expression - expression .)
    WHILE           reduce using rule 18 (expression -> expression - expression .)
    ISTRUE          reduce using rule 18 (expression -> expression - expression .)
    (               reduce using rule 18 (expression -> expression - expression .)
    INTEGER         reduce using rule 18 (expression -> expression - expression .)
    BOOL            reduce using rule 18 (expression -> expression - expression .)
    NAME            reduce using rule 18 (expression -> expression - expression .)
    DEF             reduce using rule 18 (expression -> expression - expression .)
    ALTER           reduce using rule 18 (expression -> expression - expression .)
    REPEAT          reduce using rule 18 (expression -> expression - expression .)
    UNTIL           reduce using rule 18 (expression -> expression - expression .)
    GT              reduce using rule 18 (expression -> expression - expression .)
    LT              reduce using rule 18 (expression -> expression - expression .)
    GTE             reduce using rule 18 (expression -> expression - expression .)
    LTE             reduce using rule 18 (expression -> expression - expression .)
    NE              reduce using rule 18 (expression -> expression - expression .)
    EQUAL           reduce using rule 18 (expression -> expression - expression .)
    WHEN            reduce using rule 18 (expression -> expression - expression .)
    $end            reduce using rule 18 (expression -> expression - expression .)
    SEMICOLON       reduce using rule 18 (expression -> expression - expression .)
    RPAREN          reduce using rule 18 (expression -> expression - expression .)
    *               shift and go to state 28
    /               shift and go to state 29

  ! *               [ reduce using rule 18 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 18 (expression -> expression - expression .) ]
  ! +               [ reduce using rule 29 (expression -> - expression .) ]
  ! -               [ reduce using rule 29 (expression -> - expression .) ]
  ! *               [ reduce using rule 29 (expression -> - expression .) ]
  ! /               [ reduce using rule 29 (expression -> - expression .) ]
  ! PROC            [ reduce using rule 29 (expression -> - expression .) ]
  ! COMMENT         [ reduce using rule 29 (expression -> - expression .) ]
  ! PRINTLINE       [ reduce using rule 29 (expression -> - expression .) ]
  ! PRINT           [ reduce using rule 29 (expression -> - expression .) ]
  ! CASE            [ reduce using rule 29 (expression -> - expression .) ]
  ! ELSE            [ reduce using rule 29 (expression -> - expression .) ]
  ! ALEATORIO       [ reduce using rule 29 (expression -> - expression .) ]
  ! HORN            [ reduce using rule 29 (expression -> - expression .) ]
  ! MOVER           [ reduce using rule 29 (expression -> - expression .) ]
  ! WHILE           [ reduce using rule 29 (expression -> - expression .) ]
  ! GT              [ reduce using rule 29 (expression -> - expression .) ]
  ! LT              [ reduce using rule 29 (expression -> - expression .) ]
  ! GTE             [ reduce using rule 29 (expression -> - expression .) ]
  ! LTE             [ reduce using rule 29 (expression -> - expression .) ]
  ! NE              [ reduce using rule 29 (expression -> - expression .) ]
  ! EQUAL           [ reduce using rule 29 (expression -> - expression .) ]
  ! ISTRUE          [ reduce using rule 29 (expression -> - expression .) ]
  ! (               [ reduce using rule 29 (expression -> - expression .) ]
  ! INTEGER         [ reduce using rule 29 (expression -> - expression .) ]
  ! BOOL            [ reduce using rule 29 (expression -> - expression .) ]
  ! NAME            [ reduce using rule 29 (expression -> - expression .) ]
  ! DEF             [ reduce using rule 29 (expression -> - expression .) ]
  ! ALTER           [ reduce using rule 29 (expression -> - expression .) ]
  ! REPEAT          [ reduce using rule 29 (expression -> - expression .) ]
  ! UNTIL           [ reduce using rule 29 (expression -> - expression .) ]
  ! WHEN            [ reduce using rule 29 (expression -> - expression .) ]
  ! $end            [ reduce using rule 29 (expression -> - expression .) ]
  ! SEMICOLON       [ reduce using rule 29 (expression -> - expression .) ]
  ! RPAREN          [ reduce using rule 29 (expression -> - expression .) ]
  ! +               [ shift and go to state 26 ]
  ! -               [ shift and go to state 67 ]
  ! GT              [ shift and go to state 31 ]
  ! LT              [ shift and go to state 32 ]
  ! GTE             [ shift and go to state 33 ]
  ! LTE             [ shift and go to state 34 ]
  ! NE              [ shift and go to state 35 ]
  ! EQUAL           [ shift and go to state 36 ]

    relation                       shift and go to state 30

state 62

    (19) expression -> expression * expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL

    +               reduce using rule 19 (expression -> expression * expression .)
    -               reduce using rule 19 (expression -> expression * expression .)
    *               reduce using rule 19 (expression -> expression * expression .)
    /               reduce using rule 19 (expression -> expression * expression .)
    PROC            reduce using rule 19 (expression -> expression * expression .)
    COMMENT         reduce using rule 19 (expression -> expression * expression .)
    PRINTLINE       reduce using rule 19 (expression -> expression * expression .)
    PRINT           reduce using rule 19 (expression -> expression * expression .)
    CASE            reduce using rule 19 (expression -> expression * expression .)
    ELSE            reduce using rule 19 (expression -> expression * expression .)
    ALEATORIO       reduce using rule 19 (expression -> expression * expression .)
    HORN            reduce using rule 19 (expression -> expression * expression .)
    MOVER           reduce using rule 19 (expression -> expression * expression .)
    WHILE           reduce using rule 19 (expression -> expression * expression .)
    ISTRUE          reduce using rule 19 (expression -> expression * expression .)
    (               reduce using rule 19 (expression -> expression * expression .)
    INTEGER         reduce using rule 19 (expression -> expression * expression .)
    BOOL            reduce using rule 19 (expression -> expression * expression .)
    NAME            reduce using rule 19 (expression -> expression * expression .)
    DEF             reduce using rule 19 (expression -> expression * expression .)
    ALTER           reduce using rule 19 (expression -> expression * expression .)
    REPEAT          reduce using rule 19 (expression -> expression * expression .)
    UNTIL           reduce using rule 19 (expression -> expression * expression .)
    GT              reduce using rule 19 (expression -> expression * expression .)
    LT              reduce using rule 19 (expression -> expression * expression .)
    GTE             reduce using rule 19 (expression -> expression * expression .)
    LTE             reduce using rule 19 (expression -> expression * expression .)
    NE              reduce using rule 19 (expression -> expression * expression .)
    EQUAL           reduce using rule 19 (expression -> expression * expression .)
    WHEN            reduce using rule 19 (expression -> expression * expression .)
    $end            reduce using rule 19 (expression -> expression * expression .)
    )               reduce using rule 19 (expression -> expression * expression .)
    SEMICOLON       reduce using rule 19 (expression -> expression * expression .)
    RPAREN          reduce using rule 19 (expression -> expression * expression .)
    THEN            reduce using rule 19 (expression -> expression * expression .)

  ! +               [ shift and go to state 26 ]
  ! -               [ shift and go to state 67 ]
  ! *               [ shift and go to state 28 ]
  ! /               [ shift and go to state 29 ]
  ! GT              [ shift and go to state 31 ]
  ! LT              [ shift and go to state 32 ]
  ! GTE             [ shift and go to state 33 ]
  ! LTE             [ shift and go to state 34 ]
  ! NE              [ shift and go to state 35 ]
  ! EQUAL           [ shift and go to state 36 ]

    relation                       shift and go to state 30

state 63

    (20) expression -> expression / expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL

    +               reduce using rule 20 (expression -> expression / expression .)
    -               reduce using rule 20 (expression -> expression / expression .)
    *               reduce using rule 20 (expression -> expression / expression .)
    /               reduce using rule 20 (expression -> expression / expression .)
    PROC            reduce using rule 20 (expression -> expression / expression .)
    COMMENT         reduce using rule 20 (expression -> expression / expression .)
    PRINTLINE       reduce using rule 20 (expression -> expression / expression .)
    PRINT           reduce using rule 20 (expression -> expression / expression .)
    CASE            reduce using rule 20 (expression -> expression / expression .)
    ELSE            reduce using rule 20 (expression -> expression / expression .)
    ALEATORIO       reduce using rule 20 (expression -> expression / expression .)
    HORN            reduce using rule 20 (expression -> expression / expression .)
    MOVER           reduce using rule 20 (expression -> expression / expression .)
    WHILE           reduce using rule 20 (expression -> expression / expression .)
    ISTRUE          reduce using rule 20 (expression -> expression / expression .)
    (               reduce using rule 20 (expression -> expression / expression .)
    INTEGER         reduce using rule 20 (expression -> expression / expression .)
    BOOL            reduce using rule 20 (expression -> expression / expression .)
    NAME            reduce using rule 20 (expression -> expression / expression .)
    DEF             reduce using rule 20 (expression -> expression / expression .)
    ALTER           reduce using rule 20 (expression -> expression / expression .)
    REPEAT          reduce using rule 20 (expression -> expression / expression .)
    UNTIL           reduce using rule 20 (expression -> expression / expression .)
    GT              reduce using rule 20 (expression -> expression / expression .)
    LT              reduce using rule 20 (expression -> expression / expression .)
    GTE             reduce using rule 20 (expression -> expression / expression .)
    LTE             reduce using rule 20 (expression -> expression / expression .)
    NE              reduce using rule 20 (expression -> expression / expression .)
    EQUAL           reduce using rule 20 (expression -> expression / expression .)
    WHEN            reduce using rule 20 (expression -> expression / expression .)
    $end            reduce using rule 20 (expression -> expression / expression .)
    )               reduce using rule 20 (expression -> expression / expression .)
    SEMICOLON       reduce using rule 20 (expression -> expression / expression .)
    RPAREN          reduce using rule 20 (expression -> expression / expression .)
    THEN            reduce using rule 20 (expression -> expression / expression .)

  ! +               [ shift and go to state 26 ]
  ! -               [ shift and go to state 67 ]
  ! *               [ shift and go to state 28 ]
  ! /               [ shift and go to state 29 ]
  ! GT              [ shift and go to state 31 ]
  ! LT              [ shift and go to state 32 ]
  ! GTE             [ shift and go to state 33 ]
  ! LTE             [ shift and go to state 34 ]
  ! NE              [ shift and go to state 35 ]
  ! EQUAL           [ shift and go to state 36 ]

    relation                       shift and go to state 30

state 64

    (27) expression -> expression relation expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    PROC            reduce using rule 27 (expression -> expression relation expression .)
    COMMENT         reduce using rule 27 (expression -> expression relation expression .)
    PRINTLINE       reduce using rule 27 (expression -> expression relation expression .)
    PRINT           reduce using rule 27 (expression -> expression relation expression .)
    CASE            reduce using rule 27 (expression -> expression relation expression .)
    ELSE            reduce using rule 27 (expression -> expression relation expression .)
    ALEATORIO       reduce using rule 27 (expression -> expression relation expression .)
    HORN            reduce using rule 27 (expression -> expression relation expression .)
    MOVER           reduce using rule 27 (expression -> expression relation expression .)
    WHILE           reduce using rule 27 (expression -> expression relation expression .)
    ISTRUE          reduce using rule 27 (expression -> expression relation expression .)
    (               reduce using rule 27 (expression -> expression relation expression .)
    INTEGER         reduce using rule 27 (expression -> expression relation expression .)
    BOOL            reduce using rule 27 (expression -> expression relation expression .)
    NAME            reduce using rule 27 (expression -> expression relation expression .)
    DEF             reduce using rule 27 (expression -> expression relation expression .)
    ALTER           reduce using rule 27 (expression -> expression relation expression .)
    REPEAT          reduce using rule 27 (expression -> expression relation expression .)
    UNTIL           reduce using rule 27 (expression -> expression relation expression .)
    WHEN            reduce using rule 27 (expression -> expression relation expression .)
    $end            reduce using rule 27 (expression -> expression relation expression .)
    )               reduce using rule 27 (expression -> expression relation expression .)
    SEMICOLON       reduce using rule 27 (expression -> expression relation expression .)
    RPAREN          reduce using rule 27 (expression -> expression relation expression .)
    THEN            reduce using rule 27 (expression -> expression relation expression .)
    +               shift and go to state 26
    -               shift and go to state 67
    *               shift and go to state 28
    /               shift and go to state 29
    GT              shift and go to state 31
    LT              shift and go to state 32
    GTE             shift and go to state 33
    LTE             shift and go to state 34
    NE              shift and go to state 35
    EQUAL           shift and go to state 36

  ! +               [ reduce using rule 27 (expression -> expression relation expression .) ]
  ! -               [ reduce using rule 27 (expression -> expression relation expression .) ]
  ! *               [ reduce using rule 27 (expression -> expression relation expression .) ]
  ! /               [ reduce using rule 27 (expression -> expression relation expression .) ]
  ! GT              [ reduce using rule 27 (expression -> expression relation expression .) ]
  ! LT              [ reduce using rule 27 (expression -> expression relation expression .) ]
  ! GTE             [ reduce using rule 27 (expression -> expression relation expression .) ]
  ! LTE             [ reduce using rule 27 (expression -> expression relation expression .) ]
  ! NE              [ reduce using rule 27 (expression -> expression relation expression .) ]
  ! EQUAL           [ reduce using rule 27 (expression -> expression relation expression .) ]

    relation                       shift and go to state 30

state 65

    (48) Body -> statement expression statement .
    (6) statement -> expression statement .
    (12) statement -> statement . WHEN expression statement

  ! reduce/reduce conflict for $end resolved using rule 6 (statement -> expression statement .)
  ! shift/reduce conflict for WHEN resolved as shift
    $end            reduce using rule 6 (statement -> expression statement .)
    WHEN            shift and go to state 39

  ! $end            [ reduce using rule 48 (Body -> statement expression statement .) ]
  ! WHEN            [ reduce using rule 6 (statement -> expression statement .) ]


state 66

    (12) statement -> statement WHEN expression . statement
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (2) statement -> . PROC NAME ( expression )
    (3) statement -> . COMMENT
    (4) statement -> . PRINTLINE
    (5) statement -> . expression
    (6) statement -> . expression statement
    (7) statement -> .
    (8) statement -> . PRINT PRINTLINE
    (9) statement -> . CASE WHEN expression statementt
    (11) statement -> . CASE expression
    (12) statement -> . statement WHEN expression statement
    (13) statement -> . ELSE statement
    (14) statement -> . ALEATORIO LPAREN RPAREN
    (15) statement -> . HORN LPAREN RPAREN
    (16) statement -> . MOVER LPAREN MOVIMIENTO RPAREN
    (42) statement -> . WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for PROC resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ALEATORIO resolved as shift
  ! shift/reduce conflict for HORN resolved as shift
  ! shift/reduce conflict for MOVER resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    +               shift and go to state 26
    -               shift and go to state 27
    *               shift and go to state 28
    /               shift and go to state 29
    PROC            shift and go to state 14
    COMMENT         shift and go to state 15
    PRINTLINE       shift and go to state 16
    WHEN            reduce using rule 7 (statement -> .)
    $end            reduce using rule 7 (statement -> .)
    SEMICOLON       reduce using rule 7 (statement -> .)
    RPAREN          reduce using rule 7 (statement -> .)
    PRINT           shift and go to state 17
    CASE            shift and go to state 18
    ELSE            shift and go to state 19
    ALEATORIO       shift and go to state 20
    HORN            shift and go to state 21
    MOVER           shift and go to state 22
    WHILE           shift and go to state 23
    GT              shift and go to state 31
    LT              shift and go to state 32
    GTE             shift and go to state 33
    LTE             shift and go to state 34
    NE              shift and go to state 35
    EQUAL           shift and go to state 36
    ISTRUE          shift and go to state 5
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

  ! ISTRUE          [ reduce using rule 7 (statement -> .) ]
  ! -               [ reduce using rule 7 (statement -> .) ]
  ! (               [ reduce using rule 7 (statement -> .) ]
  ! INTEGER         [ reduce using rule 7 (statement -> .) ]
  ! BOOL            [ reduce using rule 7 (statement -> .) ]
  ! NAME            [ reduce using rule 7 (statement -> .) ]
  ! DEF             [ reduce using rule 7 (statement -> .) ]
  ! ALTER           [ reduce using rule 7 (statement -> .) ]
  ! REPEAT          [ reduce using rule 7 (statement -> .) ]
  ! UNTIL           [ reduce using rule 7 (statement -> .) ]
  ! PROC            [ reduce using rule 7 (statement -> .) ]
  ! COMMENT         [ reduce using rule 7 (statement -> .) ]
  ! PRINTLINE       [ reduce using rule 7 (statement -> .) ]
  ! PRINT           [ reduce using rule 7 (statement -> .) ]
  ! CASE            [ reduce using rule 7 (statement -> .) ]
  ! ELSE            [ reduce using rule 7 (statement -> .) ]
  ! ALEATORIO       [ reduce using rule 7 (statement -> .) ]
  ! HORN            [ reduce using rule 7 (statement -> .) ]
  ! MOVER           [ reduce using rule 7 (statement -> .) ]
  ! WHILE           [ reduce using rule 7 (statement -> .) ]

    statement                      shift and go to state 81
    expression                     shift and go to state 53
    relation                       shift and go to state 30

state 67

    (18) expression -> expression - . expression
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

    expression                     shift and go to state 82

state 68

    (28) expression -> ISTRUE ( expression . )
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL

    )               shift and go to state 83
    +               shift and go to state 26
    -               shift and go to state 67
    *               shift and go to state 28
    /               shift and go to state 29
    GT              shift and go to state 31
    LT              shift and go to state 32
    GTE             shift and go to state 33
    LTE             shift and go to state 34
    NE              shift and go to state 35
    EQUAL           shift and go to state 36

    relation                       shift and go to state 30

state 69

    (30) expression -> ( expression ) .

    +               reduce using rule 30 (expression -> ( expression ) .)
    -               reduce using rule 30 (expression -> ( expression ) .)
    *               reduce using rule 30 (expression -> ( expression ) .)
    /               reduce using rule 30 (expression -> ( expression ) .)
    PROC            reduce using rule 30 (expression -> ( expression ) .)
    COMMENT         reduce using rule 30 (expression -> ( expression ) .)
    PRINTLINE       reduce using rule 30 (expression -> ( expression ) .)
    PRINT           reduce using rule 30 (expression -> ( expression ) .)
    CASE            reduce using rule 30 (expression -> ( expression ) .)
    ELSE            reduce using rule 30 (expression -> ( expression ) .)
    ALEATORIO       reduce using rule 30 (expression -> ( expression ) .)
    HORN            reduce using rule 30 (expression -> ( expression ) .)
    MOVER           reduce using rule 30 (expression -> ( expression ) .)
    WHILE           reduce using rule 30 (expression -> ( expression ) .)
    ISTRUE          reduce using rule 30 (expression -> ( expression ) .)
    (               reduce using rule 30 (expression -> ( expression ) .)
    INTEGER         reduce using rule 30 (expression -> ( expression ) .)
    BOOL            reduce using rule 30 (expression -> ( expression ) .)
    NAME            reduce using rule 30 (expression -> ( expression ) .)
    DEF             reduce using rule 30 (expression -> ( expression ) .)
    ALTER           reduce using rule 30 (expression -> ( expression ) .)
    REPEAT          reduce using rule 30 (expression -> ( expression ) .)
    UNTIL           reduce using rule 30 (expression -> ( expression ) .)
    GT              reduce using rule 30 (expression -> ( expression ) .)
    LT              reduce using rule 30 (expression -> ( expression ) .)
    GTE             reduce using rule 30 (expression -> ( expression ) .)
    LTE             reduce using rule 30 (expression -> ( expression ) .)
    NE              reduce using rule 30 (expression -> ( expression ) .)
    EQUAL           reduce using rule 30 (expression -> ( expression ) .)
    WHEN            reduce using rule 30 (expression -> ( expression ) .)
    $end            reduce using rule 30 (expression -> ( expression ) .)
    )               reduce using rule 30 (expression -> ( expression ) .)
    SEMICOLON       reduce using rule 30 (expression -> ( expression ) .)
    RPAREN          reduce using rule 30 (expression -> ( expression ) .)
    THEN            reduce using rule 30 (expression -> ( expression ) .)


state 70

    (35) expression -> NAME ( expression . )
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL

    )               shift and go to state 84
    +               shift and go to state 26
    -               shift and go to state 67
    *               shift and go to state 28
    /               shift and go to state 29
    GT              shift and go to state 31
    LT              shift and go to state 32
    GTE             shift and go to state 33
    LTE             shift and go to state 34
    NE              shift and go to state 35
    EQUAL           shift and go to state 36

    relation                       shift and go to state 30

state 71

    (34) expression -> DEF LPAREN NAME . COMMA expression RPAREN SEMICOLON

    COMMA           shift and go to state 85


state 72

    (36) expression -> ALTER ( NAME . , expression )

    ,               shift and go to state 86


state 73

    (37) expression -> REPEAT LPAREN expression . SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> REPEAT LPAREN expression . SEMICOLON RPAREN SEMICOLON
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL

    SEMICOLON       shift and go to state 87
    +               shift and go to state 26
    -               shift and go to state 67
    *               shift and go to state 28
    /               shift and go to state 29
    GT              shift and go to state 31
    LT              shift and go to state 32
    GTE             shift and go to state 33
    LTE             shift and go to state 34
    NE              shift and go to state 35
    EQUAL           shift and go to state 36

    relation                       shift and go to state 30

state 74

    (39) expression -> UNTIL LPAREN expression . RPAREN statement SEMICOLON
    (40) expression -> UNTIL LPAREN expression . RPAREN
    (41) expression -> UNTIL LPAREN expression . RPAREN SEMICOLON
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL

    RPAREN          shift and go to state 88
    +               shift and go to state 26
    -               shift and go to state 67
    *               shift and go to state 28
    /               shift and go to state 29
    GT              shift and go to state 31
    LT              shift and go to state 32
    GTE             shift and go to state 33
    LTE             shift and go to state 34
    NE              shift and go to state 35
    EQUAL           shift and go to state 36

    relation                       shift and go to state 30

state 75

    (2) statement -> PROC NAME ( . expression )
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

    expression                     shift and go to state 89

state 76

    (9) statement -> CASE WHEN expression . statementt
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (10) statementt -> . THEN statement
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL

    +               shift and go to state 26
    -               shift and go to state 67
    *               shift and go to state 28
    /               shift and go to state 29
    THEN            shift and go to state 91
    GT              shift and go to state 31
    LT              shift and go to state 32
    GTE             shift and go to state 33
    LTE             shift and go to state 34
    NE              shift and go to state 35
    EQUAL           shift and go to state 36

    statementt                     shift and go to state 90
    relation                       shift and go to state 30

state 77

    (14) statement -> ALEATORIO LPAREN RPAREN .

    WHEN            reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    ISTRUE          reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    -               reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    (               reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    INTEGER         reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    BOOL            reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    NAME            reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    DEF             reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    ALTER           reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    REPEAT          reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    UNTIL           reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    PROC            reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    COMMENT         reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    PRINTLINE       reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    PRINT           reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    CASE            reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    ELSE            reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    ALEATORIO       reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    HORN            reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    MOVER           reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    WHILE           reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    $end            reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    SEMICOLON       reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)
    RPAREN          reduce using rule 14 (statement -> ALEATORIO LPAREN RPAREN .)


state 78

    (15) statement -> HORN LPAREN RPAREN .

    WHEN            reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    ISTRUE          reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    -               reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    (               reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    INTEGER         reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    BOOL            reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    NAME            reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    DEF             reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    ALTER           reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    REPEAT          reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    UNTIL           reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    PROC            reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    COMMENT         reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    PRINTLINE       reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    PRINT           reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    CASE            reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    ELSE            reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    ALEATORIO       reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    HORN            reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    MOVER           reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    WHILE           reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    $end            reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    SEMICOLON       reduce using rule 15 (statement -> HORN LPAREN RPAREN .)
    RPAREN          reduce using rule 15 (statement -> HORN LPAREN RPAREN .)


state 79

    (16) statement -> MOVER LPAREN MOVIMIENTO . RPAREN

    RPAREN          shift and go to state 92


state 80

    (42) statement -> WHILE LPAREN expression . RPAREN LPAREN statement RPAREN SEMICOLON
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL

    RPAREN          shift and go to state 93
    +               shift and go to state 26
    -               shift and go to state 67
    *               shift and go to state 28
    /               shift and go to state 29
    GT              shift and go to state 31
    LT              shift and go to state 32
    GTE             shift and go to state 33
    LTE             shift and go to state 34
    NE              shift and go to state 35
    EQUAL           shift and go to state 36

    relation                       shift and go to state 30

state 81

    (12) statement -> statement WHEN expression statement .
    (12) statement -> statement . WHEN expression statement

    ISTRUE          reduce using rule 12 (statement -> statement WHEN expression statement .)
    -               reduce using rule 12 (statement -> statement WHEN expression statement .)
    (               reduce using rule 12 (statement -> statement WHEN expression statement .)
    INTEGER         reduce using rule 12 (statement -> statement WHEN expression statement .)
    BOOL            reduce using rule 12 (statement -> statement WHEN expression statement .)
    NAME            reduce using rule 12 (statement -> statement WHEN expression statement .)
    DEF             reduce using rule 12 (statement -> statement WHEN expression statement .)
    ALTER           reduce using rule 12 (statement -> statement WHEN expression statement .)
    REPEAT          reduce using rule 12 (statement -> statement WHEN expression statement .)
    UNTIL           reduce using rule 12 (statement -> statement WHEN expression statement .)
    PROC            reduce using rule 12 (statement -> statement WHEN expression statement .)
    COMMENT         reduce using rule 12 (statement -> statement WHEN expression statement .)
    PRINTLINE       reduce using rule 12 (statement -> statement WHEN expression statement .)
    PRINT           reduce using rule 12 (statement -> statement WHEN expression statement .)
    CASE            reduce using rule 12 (statement -> statement WHEN expression statement .)
    ELSE            reduce using rule 12 (statement -> statement WHEN expression statement .)
    ALEATORIO       reduce using rule 12 (statement -> statement WHEN expression statement .)
    HORN            reduce using rule 12 (statement -> statement WHEN expression statement .)
    MOVER           reduce using rule 12 (statement -> statement WHEN expression statement .)
    WHILE           reduce using rule 12 (statement -> statement WHEN expression statement .)
    $end            reduce using rule 12 (statement -> statement WHEN expression statement .)
    SEMICOLON       reduce using rule 12 (statement -> statement WHEN expression statement .)
    RPAREN          reduce using rule 12 (statement -> statement WHEN expression statement .)
    WHEN            shift and go to state 39

  ! WHEN            [ reduce using rule 12 (statement -> statement WHEN expression statement .) ]


state 82

    (18) expression -> expression - expression .
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL

    +               reduce using rule 18 (expression -> expression - expression .)
    -               reduce using rule 18 (expression -> expression - expression .)
    GT              reduce using rule 18 (expression -> expression - expression .)
    LT              reduce using rule 18 (expression -> expression - expression .)
    GTE             reduce using rule 18 (expression -> expression - expression .)
    LTE             reduce using rule 18 (expression -> expression - expression .)
    NE              reduce using rule 18 (expression -> expression - expression .)
    EQUAL           reduce using rule 18 (expression -> expression - expression .)
    PROC            reduce using rule 18 (expression -> expression - expression .)
    COMMENT         reduce using rule 18 (expression -> expression - expression .)
    PRINTLINE       reduce using rule 18 (expression -> expression - expression .)
    PRINT           reduce using rule 18 (expression -> expression - expression .)
    CASE            reduce using rule 18 (expression -> expression - expression .)
    ELSE            reduce using rule 18 (expression -> expression - expression .)
    ALEATORIO       reduce using rule 18 (expression -> expression - expression .)
    HORN            reduce using rule 18 (expression -> expression - expression .)
    MOVER           reduce using rule 18 (expression -> expression - expression .)
    WHILE           reduce using rule 18 (expression -> expression - expression .)
    ISTRUE          reduce using rule 18 (expression -> expression - expression .)
    (               reduce using rule 18 (expression -> expression - expression .)
    INTEGER         reduce using rule 18 (expression -> expression - expression .)
    BOOL            reduce using rule 18 (expression -> expression - expression .)
    NAME            reduce using rule 18 (expression -> expression - expression .)
    DEF             reduce using rule 18 (expression -> expression - expression .)
    ALTER           reduce using rule 18 (expression -> expression - expression .)
    REPEAT          reduce using rule 18 (expression -> expression - expression .)
    UNTIL           reduce using rule 18 (expression -> expression - expression .)
    WHEN            reduce using rule 18 (expression -> expression - expression .)
    $end            reduce using rule 18 (expression -> expression - expression .)
    )               reduce using rule 18 (expression -> expression - expression .)
    SEMICOLON       reduce using rule 18 (expression -> expression - expression .)
    RPAREN          reduce using rule 18 (expression -> expression - expression .)
    THEN            reduce using rule 18 (expression -> expression - expression .)
    *               shift and go to state 28
    /               shift and go to state 29

  ! *               [ reduce using rule 18 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 18 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 26 ]
  ! -               [ shift and go to state 67 ]
  ! GT              [ shift and go to state 31 ]
  ! LT              [ shift and go to state 32 ]
  ! GTE             [ shift and go to state 33 ]
  ! LTE             [ shift and go to state 34 ]
  ! NE              [ shift and go to state 35 ]
  ! EQUAL           [ shift and go to state 36 ]

    relation                       shift and go to state 30

state 83

    (28) expression -> ISTRUE ( expression ) .

    +               reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    -               reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    *               reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    /               reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    PROC            reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    COMMENT         reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    PRINTLINE       reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    PRINT           reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    CASE            reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    ELSE            reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    ALEATORIO       reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    HORN            reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    MOVER           reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    WHILE           reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    ISTRUE          reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    (               reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    INTEGER         reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    BOOL            reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    NAME            reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    DEF             reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    ALTER           reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    REPEAT          reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    UNTIL           reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    GT              reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    LT              reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    GTE             reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    LTE             reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    NE              reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    EQUAL           reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    WHEN            reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    $end            reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    )               reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    SEMICOLON       reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    RPAREN          reduce using rule 28 (expression -> ISTRUE ( expression ) .)
    THEN            reduce using rule 28 (expression -> ISTRUE ( expression ) .)


state 84

    (35) expression -> NAME ( expression ) .

    +               reduce using rule 35 (expression -> NAME ( expression ) .)
    -               reduce using rule 35 (expression -> NAME ( expression ) .)
    *               reduce using rule 35 (expression -> NAME ( expression ) .)
    /               reduce using rule 35 (expression -> NAME ( expression ) .)
    PROC            reduce using rule 35 (expression -> NAME ( expression ) .)
    COMMENT         reduce using rule 35 (expression -> NAME ( expression ) .)
    PRINTLINE       reduce using rule 35 (expression -> NAME ( expression ) .)
    PRINT           reduce using rule 35 (expression -> NAME ( expression ) .)
    CASE            reduce using rule 35 (expression -> NAME ( expression ) .)
    ELSE            reduce using rule 35 (expression -> NAME ( expression ) .)
    ALEATORIO       reduce using rule 35 (expression -> NAME ( expression ) .)
    HORN            reduce using rule 35 (expression -> NAME ( expression ) .)
    MOVER           reduce using rule 35 (expression -> NAME ( expression ) .)
    WHILE           reduce using rule 35 (expression -> NAME ( expression ) .)
    ISTRUE          reduce using rule 35 (expression -> NAME ( expression ) .)
    (               reduce using rule 35 (expression -> NAME ( expression ) .)
    INTEGER         reduce using rule 35 (expression -> NAME ( expression ) .)
    BOOL            reduce using rule 35 (expression -> NAME ( expression ) .)
    NAME            reduce using rule 35 (expression -> NAME ( expression ) .)
    DEF             reduce using rule 35 (expression -> NAME ( expression ) .)
    ALTER           reduce using rule 35 (expression -> NAME ( expression ) .)
    REPEAT          reduce using rule 35 (expression -> NAME ( expression ) .)
    UNTIL           reduce using rule 35 (expression -> NAME ( expression ) .)
    GT              reduce using rule 35 (expression -> NAME ( expression ) .)
    LT              reduce using rule 35 (expression -> NAME ( expression ) .)
    GTE             reduce using rule 35 (expression -> NAME ( expression ) .)
    LTE             reduce using rule 35 (expression -> NAME ( expression ) .)
    NE              reduce using rule 35 (expression -> NAME ( expression ) .)
    EQUAL           reduce using rule 35 (expression -> NAME ( expression ) .)
    WHEN            reduce using rule 35 (expression -> NAME ( expression ) .)
    $end            reduce using rule 35 (expression -> NAME ( expression ) .)
    )               reduce using rule 35 (expression -> NAME ( expression ) .)
    SEMICOLON       reduce using rule 35 (expression -> NAME ( expression ) .)
    RPAREN          reduce using rule 35 (expression -> NAME ( expression ) .)
    THEN            reduce using rule 35 (expression -> NAME ( expression ) .)


state 85

    (34) expression -> DEF LPAREN NAME COMMA . expression RPAREN SEMICOLON
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

    expression                     shift and go to state 94

state 86

    (36) expression -> ALTER ( NAME , . expression )
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

    expression                     shift and go to state 95

state 87

    (37) expression -> REPEAT LPAREN expression SEMICOLON . BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> REPEAT LPAREN expression SEMICOLON . RPAREN SEMICOLON

    BREAK           shift and go to state 96
    RPAREN          shift and go to state 97


state 88

    (39) expression -> UNTIL LPAREN expression RPAREN . statement SEMICOLON
    (40) expression -> UNTIL LPAREN expression RPAREN .
    (41) expression -> UNTIL LPAREN expression RPAREN . SEMICOLON
    (2) statement -> . PROC NAME ( expression )
    (3) statement -> . COMMENT
    (4) statement -> . PRINTLINE
    (5) statement -> . expression
    (6) statement -> . expression statement
    (7) statement -> .
    (8) statement -> . PRINT PRINTLINE
    (9) statement -> . CASE WHEN expression statementt
    (11) statement -> . CASE expression
    (12) statement -> . statement WHEN expression statement
    (13) statement -> . ELSE statement
    (14) statement -> . ALEATORIO LPAREN RPAREN
    (15) statement -> . HORN LPAREN RPAREN
    (16) statement -> . MOVER LPAREN MOVIMIENTO RPAREN
    (42) statement -> . WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! shift/reduce conflict for PROC resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! reduce/reduce conflict for WHEN resolved using rule 7 (statement -> .)
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ALEATORIO resolved as shift
  ! shift/reduce conflict for HORN resolved as shift
  ! shift/reduce conflict for MOVER resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    +               reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .)
    *               reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .)
    /               reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .)
    GT              reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .)
    LT              reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .)
    GTE             reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .)
    LTE             reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .)
    NE              reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .)
    EQUAL           reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .)
    $end            reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .)
    )               reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .)
    RPAREN          reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .)
    THEN            reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .)
    SEMICOLON       shift and go to state 99
    PROC            shift and go to state 14
    COMMENT         shift and go to state 15
    PRINTLINE       shift and go to state 16
    WHEN            reduce using rule 7 (statement -> .)
    PRINT           shift and go to state 17
    CASE            shift and go to state 18
    ELSE            shift and go to state 19
    ALEATORIO       shift and go to state 20
    HORN            shift and go to state 21
    MOVER           shift and go to state 22
    WHILE           shift and go to state 23
    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

  ! -               [ reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .) ]
  ! PROC            [ reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .) ]
  ! COMMENT         [ reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .) ]
  ! PRINTLINE       [ reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .) ]
  ! PRINT           [ reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .) ]
  ! CASE            [ reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .) ]
  ! ELSE            [ reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .) ]
  ! ALEATORIO       [ reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .) ]
  ! HORN            [ reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .) ]
  ! MOVER           [ reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .) ]
  ! WHILE           [ reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .) ]
  ! ISTRUE          [ reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .) ]
  ! (               [ reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .) ]
  ! INTEGER         [ reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .) ]
  ! BOOL            [ reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .) ]
  ! NAME            [ reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .) ]
  ! DEF             [ reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .) ]
  ! ALTER           [ reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .) ]
  ! REPEAT          [ reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .) ]
  ! UNTIL           [ reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .) ]
  ! WHEN            [ reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .) ]
  ! SEMICOLON       [ reduce using rule 40 (expression -> UNTIL LPAREN expression RPAREN .) ]
  ! SEMICOLON       [ reduce using rule 7 (statement -> .) ]

    expression                     shift and go to state 53
    statement                      shift and go to state 98

state 89

    (2) statement -> PROC NAME ( expression . )
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL

    )               shift and go to state 100
    +               shift and go to state 26
    -               shift and go to state 67
    *               shift and go to state 28
    /               shift and go to state 29
    GT              shift and go to state 31
    LT              shift and go to state 32
    GTE             shift and go to state 33
    LTE             shift and go to state 34
    NE              shift and go to state 35
    EQUAL           shift and go to state 36

    relation                       shift and go to state 30

state 90

    (9) statement -> CASE WHEN expression statementt .

    WHEN            reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    ISTRUE          reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    -               reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    (               reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    INTEGER         reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    BOOL            reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    NAME            reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    DEF             reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    ALTER           reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    REPEAT          reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    UNTIL           reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    PROC            reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    COMMENT         reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    PRINTLINE       reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    PRINT           reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    CASE            reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    ELSE            reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    ALEATORIO       reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    HORN            reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    MOVER           reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    WHILE           reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    $end            reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    SEMICOLON       reduce using rule 9 (statement -> CASE WHEN expression statementt .)
    RPAREN          reduce using rule 9 (statement -> CASE WHEN expression statementt .)


state 91

    (10) statementt -> THEN . statement
    (2) statement -> . PROC NAME ( expression )
    (3) statement -> . COMMENT
    (4) statement -> . PRINTLINE
    (5) statement -> . expression
    (6) statement -> . expression statement
    (7) statement -> .
    (8) statement -> . PRINT PRINTLINE
    (9) statement -> . CASE WHEN expression statementt
    (11) statement -> . CASE expression
    (12) statement -> . statement WHEN expression statement
    (13) statement -> . ELSE statement
    (14) statement -> . ALEATORIO LPAREN RPAREN
    (15) statement -> . HORN LPAREN RPAREN
    (16) statement -> . MOVER LPAREN MOVIMIENTO RPAREN
    (42) statement -> . WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

  ! shift/reduce conflict for PROC resolved as shift
  ! shift/reduce conflict for COMMENT resolved as shift
  ! shift/reduce conflict for PRINTLINE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ALEATORIO resolved as shift
  ! shift/reduce conflict for HORN resolved as shift
  ! shift/reduce conflict for MOVER resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for ISTRUE resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for ALTER resolved as shift
  ! shift/reduce conflict for REPEAT resolved as shift
  ! shift/reduce conflict for UNTIL resolved as shift
    PROC            shift and go to state 14
    COMMENT         shift and go to state 15
    PRINTLINE       shift and go to state 16
    WHEN            reduce using rule 7 (statement -> .)
    $end            reduce using rule 7 (statement -> .)
    SEMICOLON       reduce using rule 7 (statement -> .)
    RPAREN          reduce using rule 7 (statement -> .)
    PRINT           shift and go to state 17
    CASE            shift and go to state 18
    ELSE            shift and go to state 19
    ALEATORIO       shift and go to state 20
    HORN            shift and go to state 21
    MOVER           shift and go to state 22
    WHILE           shift and go to state 23
    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

  ! ISTRUE          [ reduce using rule 7 (statement -> .) ]
  ! -               [ reduce using rule 7 (statement -> .) ]
  ! (               [ reduce using rule 7 (statement -> .) ]
  ! INTEGER         [ reduce using rule 7 (statement -> .) ]
  ! BOOL            [ reduce using rule 7 (statement -> .) ]
  ! NAME            [ reduce using rule 7 (statement -> .) ]
  ! DEF             [ reduce using rule 7 (statement -> .) ]
  ! ALTER           [ reduce using rule 7 (statement -> .) ]
  ! REPEAT          [ reduce using rule 7 (statement -> .) ]
  ! UNTIL           [ reduce using rule 7 (statement -> .) ]
  ! PROC            [ reduce using rule 7 (statement -> .) ]
  ! COMMENT         [ reduce using rule 7 (statement -> .) ]
  ! PRINTLINE       [ reduce using rule 7 (statement -> .) ]
  ! PRINT           [ reduce using rule 7 (statement -> .) ]
  ! CASE            [ reduce using rule 7 (statement -> .) ]
  ! ELSE            [ reduce using rule 7 (statement -> .) ]
  ! ALEATORIO       [ reduce using rule 7 (statement -> .) ]
  ! HORN            [ reduce using rule 7 (statement -> .) ]
  ! MOVER           [ reduce using rule 7 (statement -> .) ]
  ! WHILE           [ reduce using rule 7 (statement -> .) ]

    statement                      shift and go to state 101
    expression                     shift and go to state 53

state 92

    (16) statement -> MOVER LPAREN MOVIMIENTO RPAREN .

    WHEN            reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    ISTRUE          reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    -               reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    (               reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    INTEGER         reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    BOOL            reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    NAME            reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    DEF             reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    ALTER           reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    REPEAT          reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    UNTIL           reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    PROC            reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    COMMENT         reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    PRINTLINE       reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    PRINT           reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    CASE            reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    ELSE            reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    ALEATORIO       reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    HORN            reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    MOVER           reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    WHILE           reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    $end            reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    SEMICOLON       reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    RPAREN          reduce using rule 16 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)


state 93

    (42) statement -> WHILE LPAREN expression RPAREN . LPAREN statement RPAREN SEMICOLON

    LPAREN          shift and go to state 102


state 94

    (34) expression -> DEF LPAREN NAME COMMA expression . RPAREN SEMICOLON
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL

    RPAREN          shift and go to state 103
    +               shift and go to state 26
    -               shift and go to state 67
    *               shift and go to state 28
    /               shift and go to state 29
    GT              shift and go to state 31
    LT              shift and go to state 32
    GTE             shift and go to state 33
    LTE             shift and go to state 34
    NE              shift and go to state 35
    EQUAL           shift and go to state 36

    relation                       shift and go to state 30

state 95

    (36) expression -> ALTER ( NAME , expression . )
    (17) expression -> expression . + expression
    (18) expression -> expression . - expression
    (19) expression -> expression . * expression
    (20) expression -> expression . / expression
    (27) expression -> expression . relation expression
    (21) relation -> . GT
    (22) relation -> . LT
    (23) relation -> . GTE
    (24) relation -> . LTE
    (25) relation -> . NE
    (26) relation -> . EQUAL

    )               shift and go to state 104
    +               shift and go to state 26
    -               shift and go to state 67
    *               shift and go to state 28
    /               shift and go to state 29
    GT              shift and go to state 31
    LT              shift and go to state 32
    GTE             shift and go to state 33
    LTE             shift and go to state 34
    NE              shift and go to state 35
    EQUAL           shift and go to state 36

    relation                       shift and go to state 30

state 96

    (37) expression -> REPEAT LPAREN expression SEMICOLON BREAK . SEMICOLON RPAREN SEMICOLON

    SEMICOLON       shift and go to state 105


state 97

    (38) expression -> REPEAT LPAREN expression SEMICOLON RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 106


state 98

    (39) expression -> UNTIL LPAREN expression RPAREN statement . SEMICOLON
    (12) statement -> statement . WHEN expression statement

    SEMICOLON       shift and go to state 107
    WHEN            shift and go to state 39


state 99

    (41) expression -> UNTIL LPAREN expression RPAREN SEMICOLON .

    +               reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    -               reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    *               reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    /               reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    PROC            reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    COMMENT         reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    PRINTLINE       reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    CASE            reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    ALEATORIO       reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    HORN            reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    MOVER           reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    ISTRUE          reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    (               reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    INTEGER         reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    BOOL            reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    NAME            reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    DEF             reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    ALTER           reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    REPEAT          reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    UNTIL           reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    GT              reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    LT              reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    GTE             reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    LTE             reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    NE              reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    EQUAL           reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    WHEN            reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    )               reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    RPAREN          reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)
    THEN            reduce using rule 41 (expression -> UNTIL LPAREN expression RPAREN SEMICOLON .)


state 100

    (2) statement -> PROC NAME ( expression ) .

    WHEN            reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    ISTRUE          reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    -               reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    (               reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    INTEGER         reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    BOOL            reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    NAME            reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    DEF             reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    ALTER           reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    REPEAT          reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    UNTIL           reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    PROC            reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    COMMENT         reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    PRINTLINE       reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    PRINT           reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    CASE            reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    ELSE            reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    ALEATORIO       reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    HORN            reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    MOVER           reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    WHILE           reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    $end            reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    SEMICOLON       reduce using rule 2 (statement -> PROC NAME ( expression ) .)
    RPAREN          reduce using rule 2 (statement -> PROC NAME ( expression ) .)


state 101

    (10) statementt -> THEN statement .
    (12) statement -> statement . WHEN expression statement

  ! shift/reduce conflict for WHEN resolved as shift
    ISTRUE          reduce using rule 10 (statementt -> THEN statement .)
    -               reduce using rule 10 (statementt -> THEN statement .)
    (               reduce using rule 10 (statementt -> THEN statement .)
    INTEGER         reduce using rule 10 (statementt -> THEN statement .)
    BOOL            reduce using rule 10 (statementt -> THEN statement .)
    NAME            reduce using rule 10 (statementt -> THEN statement .)
    DEF             reduce using rule 10 (statementt -> THEN statement .)
    ALTER           reduce using rule 10 (statementt -> THEN statement .)
    REPEAT          reduce using rule 10 (statementt -> THEN statement .)
    UNTIL           reduce using rule 10 (statementt -> THEN statement .)
    PROC            reduce using rule 10 (statementt -> THEN statement .)
    COMMENT         reduce using rule 10 (statementt -> THEN statement .)
    PRINTLINE       reduce using rule 10 (statementt -> THEN statement .)
    PRINT           reduce using rule 10 (statementt -> THEN statement .)
    CASE            reduce using rule 10 (statementt -> THEN statement .)
    ELSE            reduce using rule 10 (statementt -> THEN statement .)
    ALEATORIO       reduce using rule 10 (statementt -> THEN statement .)
    HORN            reduce using rule 10 (statementt -> THEN statement .)
    MOVER           reduce using rule 10 (statementt -> THEN statement .)
    WHILE           reduce using rule 10 (statementt -> THEN statement .)
    $end            reduce using rule 10 (statementt -> THEN statement .)
    SEMICOLON       reduce using rule 10 (statementt -> THEN statement .)
    RPAREN          reduce using rule 10 (statementt -> THEN statement .)
    WHEN            shift and go to state 39

  ! WHEN            [ reduce using rule 10 (statementt -> THEN statement .) ]


state 102

    (42) statement -> WHILE LPAREN expression RPAREN LPAREN . statement RPAREN SEMICOLON
    (2) statement -> . PROC NAME ( expression )
    (3) statement -> . COMMENT
    (4) statement -> . PRINTLINE
    (5) statement -> . expression
    (6) statement -> . expression statement
    (7) statement -> .
    (8) statement -> . PRINT PRINTLINE
    (9) statement -> . CASE WHEN expression statementt
    (11) statement -> . CASE expression
    (12) statement -> . statement WHEN expression statement
    (13) statement -> . ELSE statement
    (14) statement -> . ALEATORIO LPAREN RPAREN
    (15) statement -> . HORN LPAREN RPAREN
    (16) statement -> . MOVER LPAREN MOVIMIENTO RPAREN
    (42) statement -> . WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON
    (17) expression -> . expression + expression
    (18) expression -> . expression - expression
    (19) expression -> . expression * expression
    (20) expression -> . expression / expression
    (27) expression -> . expression relation expression
    (28) expression -> . ISTRUE ( expression )
    (29) expression -> . - expression
    (30) expression -> . ( expression )
    (31) expression -> . INTEGER
    (32) expression -> . BOOL
    (33) expression -> . NAME
    (34) expression -> . DEF LPAREN NAME COMMA expression RPAREN SEMICOLON
    (35) expression -> . NAME ( expression )
    (36) expression -> . ALTER ( NAME , expression )
    (37) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (38) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (39) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (40) expression -> . UNTIL LPAREN expression RPAREN
    (41) expression -> . UNTIL LPAREN expression RPAREN SEMICOLON

    PROC            shift and go to state 14
    COMMENT         shift and go to state 15
    PRINTLINE       shift and go to state 16
    RPAREN          reduce using rule 7 (statement -> .)
    WHEN            reduce using rule 7 (statement -> .)
    PRINT           shift and go to state 17
    CASE            shift and go to state 18
    ELSE            shift and go to state 19
    ALEATORIO       shift and go to state 20
    HORN            shift and go to state 21
    MOVER           shift and go to state 22
    WHILE           shift and go to state 23
    ISTRUE          shift and go to state 5
    -               shift and go to state 4
    (               shift and go to state 6
    INTEGER         shift and go to state 7
    BOOL            shift and go to state 8
    NAME            shift and go to state 9
    DEF             shift and go to state 10
    ALTER           shift and go to state 11
    REPEAT          shift and go to state 12
    UNTIL           shift and go to state 13

    expression                     shift and go to state 53
    statement                      shift and go to state 108

state 103

    (34) expression -> DEF LPAREN NAME COMMA expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 109


state 104

    (36) expression -> ALTER ( NAME , expression ) .

    +               reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    -               reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    *               reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    /               reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    PROC            reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    COMMENT         reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    PRINTLINE       reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    PRINT           reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    CASE            reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    ELSE            reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    ALEATORIO       reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    HORN            reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    MOVER           reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    WHILE           reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    ISTRUE          reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    (               reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    INTEGER         reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    BOOL            reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    NAME            reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    DEF             reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    ALTER           reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    REPEAT          reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    UNTIL           reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    GT              reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    LT              reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    GTE             reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    LTE             reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    NE              reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    EQUAL           reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    WHEN            reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    $end            reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    )               reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    SEMICOLON       reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    RPAREN          reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)
    THEN            reduce using rule 36 (expression -> ALTER ( NAME , expression ) .)


state 105

    (37) expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON . RPAREN SEMICOLON

    RPAREN          shift and go to state 110


state 106

    (38) expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .

    +               reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    -               reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    *               reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    /               reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    PROC            reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    COMMENT         reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    PRINTLINE       reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    PRINT           reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    CASE            reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    ELSE            reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    ALEATORIO       reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    HORN            reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    MOVER           reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    WHILE           reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    ISTRUE          reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    (               reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    INTEGER         reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    BOOL            reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    NAME            reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    DEF             reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    ALTER           reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    REPEAT          reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    UNTIL           reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    GT              reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    LT              reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    GTE             reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    LTE             reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    NE              reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    EQUAL           reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    WHEN            reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    $end            reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    )               reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    RPAREN          reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    THEN            reduce using rule 38 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)


state 107

    (39) expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .

    +               reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    -               reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    *               reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    /               reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    PROC            reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    COMMENT         reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    PRINTLINE       reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    PRINT           reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    CASE            reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    ELSE            reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    ALEATORIO       reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    HORN            reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    MOVER           reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    WHILE           reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    ISTRUE          reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    (               reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    INTEGER         reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    BOOL            reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    NAME            reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    DEF             reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    ALTER           reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    REPEAT          reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    UNTIL           reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    GT              reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    LT              reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    GTE             reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    LTE             reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    NE              reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    EQUAL           reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    WHEN            reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    $end            reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    )               reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    SEMICOLON       reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    RPAREN          reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    THEN            reduce using rule 39 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)


state 108

    (42) statement -> WHILE LPAREN expression RPAREN LPAREN statement . RPAREN SEMICOLON
    (12) statement -> statement . WHEN expression statement

    RPAREN          shift and go to state 111
    WHEN            shift and go to state 39


state 109

    (34) expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .

    +               reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    -               reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    *               reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    /               reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    PROC            reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    COMMENT         reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    PRINTLINE       reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    CASE            reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    ALEATORIO       reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    HORN            reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    MOVER           reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    ISTRUE          reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    (               reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    INTEGER         reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    BOOL            reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    NAME            reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    DEF             reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    ALTER           reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    REPEAT          reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    UNTIL           reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    GT              reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    LT              reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    GTE             reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    LTE             reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    NE              reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    EQUAL           reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    WHEN            reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    $end            reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    )               reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    RPAREN          reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)
    THEN            reduce using rule 34 (expression -> DEF LPAREN NAME COMMA expression RPAREN SEMICOLON .)


state 110

    (37) expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 112


state 111

    (42) statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 113


state 112

    (37) expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .

    +               reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    -               reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    *               reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    /               reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    PROC            reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    COMMENT         reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    PRINTLINE       reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    PRINT           reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    CASE            reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    ELSE            reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    ALEATORIO       reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    HORN            reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    MOVER           reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    WHILE           reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    ISTRUE          reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    (               reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    INTEGER         reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    BOOL            reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    NAME            reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    DEF             reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    ALTER           reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    REPEAT          reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    UNTIL           reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    GT              reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    LT              reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    GTE             reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    LTE             reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    NE              reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    EQUAL           reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    WHEN            reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    $end            reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    )               reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    RPAREN          reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    THEN            reduce using rule 37 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)


state 113

    (42) statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .

    WHEN            reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    ISTRUE          reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    -               reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    (               reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    INTEGER         reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    BOOL            reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    NAME            reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    DEF             reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    ALTER           reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    REPEAT          reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    UNTIL           reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    PROC            reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    COMMENT         reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    PRINTLINE       reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    PRINT           reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    CASE            reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    ELSE            reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    ALEATORIO       reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    HORN            reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    MOVER           reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    WHILE           reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    $end            reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)
    RPAREN          reduce using rule 42 (statement -> WHILE LPAREN expression RPAREN LPAREN statement RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ISTRUE in state 0 resolved as shift
WARNING: shift/reduce conflict for - in state 0 resolved as shift
WARNING: shift/reduce conflict for ( in state 0 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 0 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 0 resolved as shift
WARNING: shift/reduce conflict for NAME in state 0 resolved as shift
WARNING: shift/reduce conflict for DEF in state 0 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 0 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 0 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 0 resolved as shift
WARNING: shift/reduce conflict for PROC in state 0 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 0 resolved as shift
WARNING: shift/reduce conflict for CASE in state 0 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 0 resolved as shift
WARNING: shift/reduce conflict for ALEATORIO in state 0 resolved as shift
WARNING: shift/reduce conflict for HORN in state 0 resolved as shift
WARNING: shift/reduce conflict for MOVER in state 0 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 0 resolved as shift
WARNING: shift/reduce conflict for - in state 2 resolved as shift
WARNING: shift/reduce conflict for PROC in state 2 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 2 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 2 resolved as shift
WARNING: shift/reduce conflict for - in state 2 resolved as shift
WARNING: shift/reduce conflict for PROC in state 2 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 2 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 2 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 2 resolved as shift
WARNING: shift/reduce conflict for CASE in state 2 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 2 resolved as shift
WARNING: shift/reduce conflict for ALEATORIO in state 2 resolved as shift
WARNING: shift/reduce conflict for HORN in state 2 resolved as shift
WARNING: shift/reduce conflict for MOVER in state 2 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 2 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 2 resolved as shift
WARNING: shift/reduce conflict for ( in state 2 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 2 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 2 resolved as shift
WARNING: shift/reduce conflict for NAME in state 2 resolved as shift
WARNING: shift/reduce conflict for DEF in state 2 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 2 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 2 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 2 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 3 resolved as shift
WARNING: shift/reduce conflict for ( in state 9 resolved as shift
WARNING: shift/reduce conflict for PROC in state 19 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 19 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 19 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 19 resolved as shift
WARNING: shift/reduce conflict for CASE in state 19 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 19 resolved as shift
WARNING: shift/reduce conflict for ALEATORIO in state 19 resolved as shift
WARNING: shift/reduce conflict for HORN in state 19 resolved as shift
WARNING: shift/reduce conflict for MOVER in state 19 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 19 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 19 resolved as shift
WARNING: shift/reduce conflict for - in state 19 resolved as shift
WARNING: shift/reduce conflict for ( in state 19 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 19 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 19 resolved as shift
WARNING: shift/reduce conflict for NAME in state 19 resolved as shift
WARNING: shift/reduce conflict for DEF in state 19 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 19 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 19 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 19 resolved as shift
WARNING: shift/reduce conflict for - in state 24 resolved as shift
WARNING: shift/reduce conflict for PROC in state 24 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 24 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 24 resolved as shift
WARNING: shift/reduce conflict for - in state 24 resolved as shift
WARNING: shift/reduce conflict for PROC in state 24 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 24 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 24 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 24 resolved as shift
WARNING: shift/reduce conflict for CASE in state 24 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 24 resolved as shift
WARNING: shift/reduce conflict for ALEATORIO in state 24 resolved as shift
WARNING: shift/reduce conflict for HORN in state 24 resolved as shift
WARNING: shift/reduce conflict for MOVER in state 24 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 24 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 24 resolved as shift
WARNING: shift/reduce conflict for ( in state 24 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 24 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 24 resolved as shift
WARNING: shift/reduce conflict for NAME in state 24 resolved as shift
WARNING: shift/reduce conflict for DEF in state 24 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 24 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 24 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 24 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 25 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 25 resolved as shift
WARNING: shift/reduce conflict for - in state 25 resolved as shift
WARNING: shift/reduce conflict for ( in state 25 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 25 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 25 resolved as shift
WARNING: shift/reduce conflict for NAME in state 25 resolved as shift
WARNING: shift/reduce conflict for DEF in state 25 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 25 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 25 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 25 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 52 resolved as shift
WARNING: shift/reduce conflict for - in state 53 resolved as shift
WARNING: shift/reduce conflict for PROC in state 53 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 53 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 53 resolved as shift
WARNING: shift/reduce conflict for - in state 53 resolved as shift
WARNING: shift/reduce conflict for PROC in state 53 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 53 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 53 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 53 resolved as shift
WARNING: shift/reduce conflict for CASE in state 53 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 53 resolved as shift
WARNING: shift/reduce conflict for ALEATORIO in state 53 resolved as shift
WARNING: shift/reduce conflict for HORN in state 53 resolved as shift
WARNING: shift/reduce conflict for MOVER in state 53 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 53 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 53 resolved as shift
WARNING: shift/reduce conflict for ( in state 53 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 53 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 53 resolved as shift
WARNING: shift/reduce conflict for NAME in state 53 resolved as shift
WARNING: shift/reduce conflict for DEF in state 53 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 53 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 53 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 53 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 58 resolved as shift
WARNING: shift/reduce conflict for + in state 64 resolved as shift
WARNING: shift/reduce conflict for - in state 64 resolved as shift
WARNING: shift/reduce conflict for * in state 64 resolved as shift
WARNING: shift/reduce conflict for / in state 64 resolved as shift
WARNING: shift/reduce conflict for GT in state 64 resolved as shift
WARNING: shift/reduce conflict for LT in state 64 resolved as shift
WARNING: shift/reduce conflict for GTE in state 64 resolved as shift
WARNING: shift/reduce conflict for LTE in state 64 resolved as shift
WARNING: shift/reduce conflict for NE in state 64 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 65 resolved as shift
WARNING: shift/reduce conflict for - in state 66 resolved as shift
WARNING: shift/reduce conflict for PROC in state 66 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 66 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 66 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 66 resolved as shift
WARNING: shift/reduce conflict for CASE in state 66 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 66 resolved as shift
WARNING: shift/reduce conflict for ALEATORIO in state 66 resolved as shift
WARNING: shift/reduce conflict for HORN in state 66 resolved as shift
WARNING: shift/reduce conflict for MOVER in state 66 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 66 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 66 resolved as shift
WARNING: shift/reduce conflict for ( in state 66 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 66 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 66 resolved as shift
WARNING: shift/reduce conflict for NAME in state 66 resolved as shift
WARNING: shift/reduce conflict for DEF in state 66 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 66 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 66 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 66 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 88 resolved as shift
WARNING: shift/reduce conflict for PROC in state 88 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 88 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 88 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 88 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 88 resolved as shift
WARNING: shift/reduce conflict for CASE in state 88 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 88 resolved as shift
WARNING: shift/reduce conflict for ALEATORIO in state 88 resolved as shift
WARNING: shift/reduce conflict for HORN in state 88 resolved as shift
WARNING: shift/reduce conflict for MOVER in state 88 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 88 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 88 resolved as shift
WARNING: shift/reduce conflict for - in state 88 resolved as shift
WARNING: shift/reduce conflict for ( in state 88 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 88 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 88 resolved as shift
WARNING: shift/reduce conflict for NAME in state 88 resolved as shift
WARNING: shift/reduce conflict for DEF in state 88 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 88 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 88 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 88 resolved as shift
WARNING: shift/reduce conflict for PROC in state 91 resolved as shift
WARNING: shift/reduce conflict for COMMENT in state 91 resolved as shift
WARNING: shift/reduce conflict for PRINTLINE in state 91 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 91 resolved as shift
WARNING: shift/reduce conflict for CASE in state 91 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 91 resolved as shift
WARNING: shift/reduce conflict for ALEATORIO in state 91 resolved as shift
WARNING: shift/reduce conflict for HORN in state 91 resolved as shift
WARNING: shift/reduce conflict for MOVER in state 91 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 91 resolved as shift
WARNING: shift/reduce conflict for ISTRUE in state 91 resolved as shift
WARNING: shift/reduce conflict for - in state 91 resolved as shift
WARNING: shift/reduce conflict for ( in state 91 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 91 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 91 resolved as shift
WARNING: shift/reduce conflict for NAME in state 91 resolved as shift
WARNING: shift/reduce conflict for DEF in state 91 resolved as shift
WARNING: shift/reduce conflict for ALTER in state 91 resolved as shift
WARNING: shift/reduce conflict for REPEAT in state 91 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 91 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 101 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (statement -> expression)
WARNING: rejected rule (statement -> <empty>) in state 2
WARNING: reduce/reduce conflict in state 3 resolved using rule (statement -> <empty>)
WARNING: rejected rule (Body -> statement) in state 3
WARNING: reduce/reduce conflict in state 24 resolved using rule (statement -> expression)
WARNING: rejected rule (Body -> expression expression) in state 24
WARNING: reduce/reduce conflict in state 24 resolved using rule (statement -> expression)
WARNING: rejected rule (statement -> <empty>) in state 24
WARNING: reduce/reduce conflict in state 25 resolved using rule (statement -> expression statement)
WARNING: rejected rule (Body -> expression statement) in state 25
WARNING: reduce/reduce conflict in state 38 resolved using rule (statement -> expression)
WARNING: rejected rule (Body -> statement expression) in state 38
WARNING: reduce/reduce conflict in state 38 resolved using rule (statement -> expression)
WARNING: rejected rule (statement -> <empty>) in state 38
WARNING: reduce/reduce conflict in state 53 resolved using rule (statement -> expression)
WARNING: rejected rule (statement -> <empty>) in state 53
WARNING: reduce/reduce conflict in state 61 resolved using rule (expression -> expression - expression)
WARNING: rejected rule (expression -> - expression) in state 61
WARNING: reduce/reduce conflict in state 65 resolved using rule (statement -> expression statement)
WARNING: rejected rule (Body -> statement expression statement) in state 65
WARNING: reduce/reduce conflict in state 88 resolved using rule (statement -> <empty>)
WARNING: rejected rule (expression -> UNTIL LPAREN expression RPAREN) in state 88
WARNING: Rule (Body -> statement) is never reduced
WARNING: Rule (Body -> expression expression) is never reduced
WARNING: Rule (Body -> expression statement) is never reduced
WARNING: Rule (Body -> statement expression) is never reduced
WARNING: Rule (Body -> statement expression statement) is never reduced
