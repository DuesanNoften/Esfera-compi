Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> PROC NAME ( expression )
Rule 2     statement -> COMMENT
Rule 3     statement -> PRINTLINE
Rule 4     statement -> expression
Rule 5     statement -> PRINT PRINTLINE
Rule 6     statement -> CASE WHEN expression THEN statement
Rule 7     statement -> CASE expression
Rule 8     statement -> statement WHEN expression THEN statement
Rule 9     statement -> ELSE statement
Rule 10    statement -> ALEATORIO LPAREN RPAREN
Rule 11    statement -> HORN LPAREN RPAREN
Rule 12    statement -> MOVER LPAREN MOVIMIENTO RPAREN
Rule 13    expression -> expression + expression
Rule 14    expression -> expression - expression
Rule 15    expression -> expression * expression
Rule 16    expression -> expression / expression
Rule 17    relation -> GT
Rule 18    relation -> LT
Rule 19    relation -> GTE
Rule 20    relation -> LTE
Rule 21    relation -> NE
Rule 22    relation -> EQUAL
Rule 23    expression -> expression relation expression
Rule 24    expression -> ISTRUE ( expression )
Rule 25    expression -> - expression
Rule 26    expression -> ( expression )
Rule 27    expression -> INTEGER
Rule 28    expression -> BOOL
Rule 29    expression -> NAME
Rule 30    expression -> DEF ( NAME , expression )
Rule 31    expression -> NAME ( expression )
Rule 32    expression -> ALTER ( NAME , expression )
Rule 33    expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
Rule 34    expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
Rule 35    expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON
Rule 36    expression -> UNTIL LPAREN expression RPAREN BOOL
Rule 37    expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON
Rule 38    expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON

Terminals, with rules where they appear

(                    : 1 24 26 30 31 32
)                    : 1 24 26 30 31 32
*                    : 15
+                    : 13
,                    : 30 32
-                    : 14 25
/                    : 16
ALEATORIO            : 10
ALTER                : 32
BOOL                 : 28 36 37 38
BREAK                : 33
CASE                 : 6 7
COMMENT              : 2
DEF                  : 30
ELSE                 : 9
EQUAL                : 22
GT                   : 17
GTE                  : 19
HORN                 : 11
INTEGER              : 27
ISTRUE               : 24
LPAREN               : 10 11 12 33 34 35 36 37 38
LT                   : 18
LTE                  : 20
MOVER                : 12
MOVIMIENTO           : 12
NAME                 : 1 29 30 31 32
NE                   : 21
PRINT                : 5
PRINTLINE            : 3 5
PROC                 : 1
REPEAT               : 33 34
RPAREN               : 10 11 12 33 34 35 36 37 38
SEMICOLON            : 33 33 33 34 34 35 37 38
THEN                 : 6 8
UNTIL                : 35 36 37
WHEN                 : 6 8
WHILE                : 38
error                : 

Nonterminals, with rules where they appear

expression           : 1 4 6 7 8 13 13 14 14 15 15 16 16 23 23 24 25 26 30 31 32 33 34 35 36 37 38
relation             : 23
statement            : 6 8 8 9 35 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . PROC NAME ( expression )
    (2) statement -> . COMMENT
    (3) statement -> . PRINTLINE
    (4) statement -> . expression
    (5) statement -> . PRINT PRINTLINE
    (6) statement -> . CASE WHEN expression THEN statement
    (7) statement -> . CASE expression
    (8) statement -> . statement WHEN expression THEN statement
    (9) statement -> . ELSE statement
    (10) statement -> . ALEATORIO LPAREN RPAREN
    (11) statement -> . HORN LPAREN RPAREN
    (12) statement -> . MOVER LPAREN MOVIMIENTO RPAREN
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    PROC            shift and go to state 2
    COMMENT         shift and go to state 6
    PRINTLINE       shift and go to state 7
    PRINT           shift and go to state 8
    CASE            shift and go to state 9
    ELSE            shift and go to state 10
    ALEATORIO       shift and go to state 11
    HORN            shift and go to state 12
    MOVER           shift and go to state 13
    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    BOOL            shift and go to state 17
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    statement                      shift and go to state 1
    expression                     shift and go to state 5

state 1

    (0) S' -> statement .
    (8) statement -> statement . WHEN expression THEN statement

    WHEN            shift and go to state 23


state 2

    (1) statement -> PROC . NAME ( expression )

    NAME            shift and go to state 24


state 3

    (29) expression -> NAME .
    (31) expression -> NAME . ( expression )

    +               reduce using rule 29 (expression -> NAME .)
    -               reduce using rule 29 (expression -> NAME .)
    *               reduce using rule 29 (expression -> NAME .)
    /               reduce using rule 29 (expression -> NAME .)
    GT              reduce using rule 29 (expression -> NAME .)
    LT              reduce using rule 29 (expression -> NAME .)
    GTE             reduce using rule 29 (expression -> NAME .)
    LTE             reduce using rule 29 (expression -> NAME .)
    NE              reduce using rule 29 (expression -> NAME .)
    EQUAL           reduce using rule 29 (expression -> NAME .)
    WHEN            reduce using rule 29 (expression -> NAME .)
    $end            reduce using rule 29 (expression -> NAME .)
    )               reduce using rule 29 (expression -> NAME .)
    SEMICOLON       reduce using rule 29 (expression -> NAME .)
    THEN            reduce using rule 29 (expression -> NAME .)
    RPAREN          reduce using rule 29 (expression -> NAME .)
    (               shift and go to state 25


state 4

    (26) expression -> ( . expression )
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    BOOL            shift and go to state 17
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    expression                     shift and go to state 26

state 5

    (4) statement -> expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (23) expression -> expression . relation expression
    (17) relation -> . GT
    (18) relation -> . LT
    (19) relation -> . GTE
    (20) relation -> . LTE
    (21) relation -> . NE
    (22) relation -> . EQUAL

    WHEN            reduce using rule 4 (statement -> expression .)
    $end            reduce using rule 4 (statement -> expression .)
    SEMICOLON       reduce using rule 4 (statement -> expression .)
    +               shift and go to state 27
    -               shift and go to state 28
    *               shift and go to state 29
    /               shift and go to state 30
    GT              shift and go to state 32
    LT              shift and go to state 33
    GTE             shift and go to state 34
    LTE             shift and go to state 35
    NE              shift and go to state 36
    EQUAL           shift and go to state 37

    relation                       shift and go to state 31

state 6

    (2) statement -> COMMENT .

    WHEN            reduce using rule 2 (statement -> COMMENT .)
    $end            reduce using rule 2 (statement -> COMMENT .)
    SEMICOLON       reduce using rule 2 (statement -> COMMENT .)


state 7

    (3) statement -> PRINTLINE .

    WHEN            reduce using rule 3 (statement -> PRINTLINE .)
    $end            reduce using rule 3 (statement -> PRINTLINE .)
    SEMICOLON       reduce using rule 3 (statement -> PRINTLINE .)


state 8

    (5) statement -> PRINT . PRINTLINE

    PRINTLINE       shift and go to state 38


state 9

    (6) statement -> CASE . WHEN expression THEN statement
    (7) statement -> CASE . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    WHEN            shift and go to state 39
    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    BOOL            shift and go to state 17
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    expression                     shift and go to state 40

state 10

    (9) statement -> ELSE . statement
    (1) statement -> . PROC NAME ( expression )
    (2) statement -> . COMMENT
    (3) statement -> . PRINTLINE
    (4) statement -> . expression
    (5) statement -> . PRINT PRINTLINE
    (6) statement -> . CASE WHEN expression THEN statement
    (7) statement -> . CASE expression
    (8) statement -> . statement WHEN expression THEN statement
    (9) statement -> . ELSE statement
    (10) statement -> . ALEATORIO LPAREN RPAREN
    (11) statement -> . HORN LPAREN RPAREN
    (12) statement -> . MOVER LPAREN MOVIMIENTO RPAREN
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    PROC            shift and go to state 2
    COMMENT         shift and go to state 6
    PRINTLINE       shift and go to state 7
    PRINT           shift and go to state 8
    CASE            shift and go to state 9
    ELSE            shift and go to state 10
    ALEATORIO       shift and go to state 11
    HORN            shift and go to state 12
    MOVER           shift and go to state 13
    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    BOOL            shift and go to state 17
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    statement                      shift and go to state 41
    expression                     shift and go to state 5

state 11

    (10) statement -> ALEATORIO . LPAREN RPAREN

    LPAREN          shift and go to state 42


state 12

    (11) statement -> HORN . LPAREN RPAREN

    LPAREN          shift and go to state 43


state 13

    (12) statement -> MOVER . LPAREN MOVIMIENTO RPAREN

    LPAREN          shift and go to state 44


state 14

    (25) expression -> - . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    BOOL            shift and go to state 17
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    expression                     shift and go to state 45

state 15

    (24) expression -> ISTRUE . ( expression )

    (               shift and go to state 46


state 16

    (27) expression -> INTEGER .

    +               reduce using rule 27 (expression -> INTEGER .)
    -               reduce using rule 27 (expression -> INTEGER .)
    *               reduce using rule 27 (expression -> INTEGER .)
    /               reduce using rule 27 (expression -> INTEGER .)
    GT              reduce using rule 27 (expression -> INTEGER .)
    LT              reduce using rule 27 (expression -> INTEGER .)
    GTE             reduce using rule 27 (expression -> INTEGER .)
    LTE             reduce using rule 27 (expression -> INTEGER .)
    NE              reduce using rule 27 (expression -> INTEGER .)
    EQUAL           reduce using rule 27 (expression -> INTEGER .)
    WHEN            reduce using rule 27 (expression -> INTEGER .)
    $end            reduce using rule 27 (expression -> INTEGER .)
    )               reduce using rule 27 (expression -> INTEGER .)
    SEMICOLON       reduce using rule 27 (expression -> INTEGER .)
    THEN            reduce using rule 27 (expression -> INTEGER .)
    RPAREN          reduce using rule 27 (expression -> INTEGER .)


state 17

    (28) expression -> BOOL .

    +               reduce using rule 28 (expression -> BOOL .)
    -               reduce using rule 28 (expression -> BOOL .)
    *               reduce using rule 28 (expression -> BOOL .)
    /               reduce using rule 28 (expression -> BOOL .)
    GT              reduce using rule 28 (expression -> BOOL .)
    LT              reduce using rule 28 (expression -> BOOL .)
    GTE             reduce using rule 28 (expression -> BOOL .)
    LTE             reduce using rule 28 (expression -> BOOL .)
    NE              reduce using rule 28 (expression -> BOOL .)
    EQUAL           reduce using rule 28 (expression -> BOOL .)
    WHEN            reduce using rule 28 (expression -> BOOL .)
    $end            reduce using rule 28 (expression -> BOOL .)
    )               reduce using rule 28 (expression -> BOOL .)
    SEMICOLON       reduce using rule 28 (expression -> BOOL .)
    THEN            reduce using rule 28 (expression -> BOOL .)
    RPAREN          reduce using rule 28 (expression -> BOOL .)


state 18

    (30) expression -> DEF . ( NAME , expression )

    (               shift and go to state 47


state 19

    (32) expression -> ALTER . ( NAME , expression )

    (               shift and go to state 48


state 20

    (33) expression -> REPEAT . LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> REPEAT . LPAREN expression SEMICOLON RPAREN SEMICOLON

    LPAREN          shift and go to state 49


state 21

    (35) expression -> UNTIL . LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> UNTIL . LPAREN expression RPAREN BOOL
    (37) expression -> UNTIL . LPAREN expression RPAREN BOOL SEMICOLON

    LPAREN          shift and go to state 50


state 22

    (38) expression -> WHILE . BOOL LPAREN expression RPAREN SEMICOLON

    BOOL            shift and go to state 51


state 23

    (8) statement -> statement WHEN . expression THEN statement
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    BOOL            shift and go to state 17
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    expression                     shift and go to state 52

state 24

    (1) statement -> PROC NAME . ( expression )

    (               shift and go to state 53


state 25

    (31) expression -> NAME ( . expression )
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    BOOL            shift and go to state 17
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    expression                     shift and go to state 54

state 26

    (26) expression -> ( expression . )
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (23) expression -> expression . relation expression
    (17) relation -> . GT
    (18) relation -> . LT
    (19) relation -> . GTE
    (20) relation -> . LTE
    (21) relation -> . NE
    (22) relation -> . EQUAL

    )               shift and go to state 55
    +               shift and go to state 27
    -               shift and go to state 28
    *               shift and go to state 29
    /               shift and go to state 30
    GT              shift and go to state 32
    LT              shift and go to state 33
    GTE             shift and go to state 34
    LTE             shift and go to state 35
    NE              shift and go to state 36
    EQUAL           shift and go to state 37

    relation                       shift and go to state 31

state 27

    (13) expression -> expression + . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    BOOL            shift and go to state 17
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    expression                     shift and go to state 56

state 28

    (14) expression -> expression - . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    BOOL            shift and go to state 17
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    expression                     shift and go to state 57

state 29

    (15) expression -> expression * . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    BOOL            shift and go to state 17
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    expression                     shift and go to state 58

state 30

    (16) expression -> expression / . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    BOOL            shift and go to state 17
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    expression                     shift and go to state 59

state 31

    (23) expression -> expression relation . expression
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    BOOL            shift and go to state 17
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    expression                     shift and go to state 60

state 32

    (17) relation -> GT .

    ISTRUE          reduce using rule 17 (relation -> GT .)
    -               reduce using rule 17 (relation -> GT .)
    (               reduce using rule 17 (relation -> GT .)
    INTEGER         reduce using rule 17 (relation -> GT .)
    BOOL            reduce using rule 17 (relation -> GT .)
    NAME            reduce using rule 17 (relation -> GT .)
    DEF             reduce using rule 17 (relation -> GT .)
    ALTER           reduce using rule 17 (relation -> GT .)
    REPEAT          reduce using rule 17 (relation -> GT .)
    UNTIL           reduce using rule 17 (relation -> GT .)
    WHILE           reduce using rule 17 (relation -> GT .)


state 33

    (18) relation -> LT .

    ISTRUE          reduce using rule 18 (relation -> LT .)
    -               reduce using rule 18 (relation -> LT .)
    (               reduce using rule 18 (relation -> LT .)
    INTEGER         reduce using rule 18 (relation -> LT .)
    BOOL            reduce using rule 18 (relation -> LT .)
    NAME            reduce using rule 18 (relation -> LT .)
    DEF             reduce using rule 18 (relation -> LT .)
    ALTER           reduce using rule 18 (relation -> LT .)
    REPEAT          reduce using rule 18 (relation -> LT .)
    UNTIL           reduce using rule 18 (relation -> LT .)
    WHILE           reduce using rule 18 (relation -> LT .)


state 34

    (19) relation -> GTE .

    ISTRUE          reduce using rule 19 (relation -> GTE .)
    -               reduce using rule 19 (relation -> GTE .)
    (               reduce using rule 19 (relation -> GTE .)
    INTEGER         reduce using rule 19 (relation -> GTE .)
    BOOL            reduce using rule 19 (relation -> GTE .)
    NAME            reduce using rule 19 (relation -> GTE .)
    DEF             reduce using rule 19 (relation -> GTE .)
    ALTER           reduce using rule 19 (relation -> GTE .)
    REPEAT          reduce using rule 19 (relation -> GTE .)
    UNTIL           reduce using rule 19 (relation -> GTE .)
    WHILE           reduce using rule 19 (relation -> GTE .)


state 35

    (20) relation -> LTE .

    ISTRUE          reduce using rule 20 (relation -> LTE .)
    -               reduce using rule 20 (relation -> LTE .)
    (               reduce using rule 20 (relation -> LTE .)
    INTEGER         reduce using rule 20 (relation -> LTE .)
    BOOL            reduce using rule 20 (relation -> LTE .)
    NAME            reduce using rule 20 (relation -> LTE .)
    DEF             reduce using rule 20 (relation -> LTE .)
    ALTER           reduce using rule 20 (relation -> LTE .)
    REPEAT          reduce using rule 20 (relation -> LTE .)
    UNTIL           reduce using rule 20 (relation -> LTE .)
    WHILE           reduce using rule 20 (relation -> LTE .)


state 36

    (21) relation -> NE .

    ISTRUE          reduce using rule 21 (relation -> NE .)
    -               reduce using rule 21 (relation -> NE .)
    (               reduce using rule 21 (relation -> NE .)
    INTEGER         reduce using rule 21 (relation -> NE .)
    BOOL            reduce using rule 21 (relation -> NE .)
    NAME            reduce using rule 21 (relation -> NE .)
    DEF             reduce using rule 21 (relation -> NE .)
    ALTER           reduce using rule 21 (relation -> NE .)
    REPEAT          reduce using rule 21 (relation -> NE .)
    UNTIL           reduce using rule 21 (relation -> NE .)
    WHILE           reduce using rule 21 (relation -> NE .)


state 37

    (22) relation -> EQUAL .

    ISTRUE          reduce using rule 22 (relation -> EQUAL .)
    -               reduce using rule 22 (relation -> EQUAL .)
    (               reduce using rule 22 (relation -> EQUAL .)
    INTEGER         reduce using rule 22 (relation -> EQUAL .)
    BOOL            reduce using rule 22 (relation -> EQUAL .)
    NAME            reduce using rule 22 (relation -> EQUAL .)
    DEF             reduce using rule 22 (relation -> EQUAL .)
    ALTER           reduce using rule 22 (relation -> EQUAL .)
    REPEAT          reduce using rule 22 (relation -> EQUAL .)
    UNTIL           reduce using rule 22 (relation -> EQUAL .)
    WHILE           reduce using rule 22 (relation -> EQUAL .)


state 38

    (5) statement -> PRINT PRINTLINE .

    WHEN            reduce using rule 5 (statement -> PRINT PRINTLINE .)
    $end            reduce using rule 5 (statement -> PRINT PRINTLINE .)
    SEMICOLON       reduce using rule 5 (statement -> PRINT PRINTLINE .)


state 39

    (6) statement -> CASE WHEN . expression THEN statement
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    BOOL            shift and go to state 17
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    expression                     shift and go to state 61

state 40

    (7) statement -> CASE expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (23) expression -> expression . relation expression
    (17) relation -> . GT
    (18) relation -> . LT
    (19) relation -> . GTE
    (20) relation -> . LTE
    (21) relation -> . NE
    (22) relation -> . EQUAL

    WHEN            reduce using rule 7 (statement -> CASE expression .)
    $end            reduce using rule 7 (statement -> CASE expression .)
    SEMICOLON       reduce using rule 7 (statement -> CASE expression .)
    +               shift and go to state 27
    -               shift and go to state 28
    *               shift and go to state 29
    /               shift and go to state 30
    GT              shift and go to state 32
    LT              shift and go to state 33
    GTE             shift and go to state 34
    LTE             shift and go to state 35
    NE              shift and go to state 36
    EQUAL           shift and go to state 37

    relation                       shift and go to state 31

state 41

    (9) statement -> ELSE statement .
    (8) statement -> statement . WHEN expression THEN statement

  ! shift/reduce conflict for WHEN resolved as shift
    $end            reduce using rule 9 (statement -> ELSE statement .)
    SEMICOLON       reduce using rule 9 (statement -> ELSE statement .)
    WHEN            shift and go to state 23

  ! WHEN            [ reduce using rule 9 (statement -> ELSE statement .) ]


state 42

    (10) statement -> ALEATORIO LPAREN . RPAREN

    RPAREN          shift and go to state 62


state 43

    (11) statement -> HORN LPAREN . RPAREN

    RPAREN          shift and go to state 63


state 44

    (12) statement -> MOVER LPAREN . MOVIMIENTO RPAREN

    MOVIMIENTO      shift and go to state 64


state 45

    (25) expression -> - expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (23) expression -> expression . relation expression
    (17) relation -> . GT
    (18) relation -> . LT
    (19) relation -> . GTE
    (20) relation -> . LTE
    (21) relation -> . NE
    (22) relation -> . EQUAL

    +               reduce using rule 25 (expression -> - expression .)
    -               reduce using rule 25 (expression -> - expression .)
    *               reduce using rule 25 (expression -> - expression .)
    /               reduce using rule 25 (expression -> - expression .)
    GT              reduce using rule 25 (expression -> - expression .)
    LT              reduce using rule 25 (expression -> - expression .)
    GTE             reduce using rule 25 (expression -> - expression .)
    LTE             reduce using rule 25 (expression -> - expression .)
    NE              reduce using rule 25 (expression -> - expression .)
    EQUAL           reduce using rule 25 (expression -> - expression .)
    WHEN            reduce using rule 25 (expression -> - expression .)
    $end            reduce using rule 25 (expression -> - expression .)
    )               reduce using rule 25 (expression -> - expression .)
    SEMICOLON       reduce using rule 25 (expression -> - expression .)
    THEN            reduce using rule 25 (expression -> - expression .)
    RPAREN          reduce using rule 25 (expression -> - expression .)

  ! +               [ shift and go to state 27 ]
  ! -               [ shift and go to state 28 ]
  ! *               [ shift and go to state 29 ]
  ! /               [ shift and go to state 30 ]
  ! GT              [ shift and go to state 32 ]
  ! LT              [ shift and go to state 33 ]
  ! GTE             [ shift and go to state 34 ]
  ! LTE             [ shift and go to state 35 ]
  ! NE              [ shift and go to state 36 ]
  ! EQUAL           [ shift and go to state 37 ]

    relation                       shift and go to state 31

state 46

    (24) expression -> ISTRUE ( . expression )
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    BOOL            shift and go to state 17
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    expression                     shift and go to state 65

state 47

    (30) expression -> DEF ( . NAME , expression )

    NAME            shift and go to state 66


state 48

    (32) expression -> ALTER ( . NAME , expression )

    NAME            shift and go to state 67


state 49

    (33) expression -> REPEAT LPAREN . expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> REPEAT LPAREN . expression SEMICOLON RPAREN SEMICOLON
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    BOOL            shift and go to state 17
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    expression                     shift and go to state 68

state 50

    (35) expression -> UNTIL LPAREN . expression RPAREN statement SEMICOLON
    (36) expression -> UNTIL LPAREN . expression RPAREN BOOL
    (37) expression -> UNTIL LPAREN . expression RPAREN BOOL SEMICOLON
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    BOOL            shift and go to state 17
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    expression                     shift and go to state 69

state 51

    (38) expression -> WHILE BOOL . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 70


state 52

    (8) statement -> statement WHEN expression . THEN statement
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (23) expression -> expression . relation expression
    (17) relation -> . GT
    (18) relation -> . LT
    (19) relation -> . GTE
    (20) relation -> . LTE
    (21) relation -> . NE
    (22) relation -> . EQUAL

    THEN            shift and go to state 71
    +               shift and go to state 27
    -               shift and go to state 28
    *               shift and go to state 29
    /               shift and go to state 30
    GT              shift and go to state 32
    LT              shift and go to state 33
    GTE             shift and go to state 34
    LTE             shift and go to state 35
    NE              shift and go to state 36
    EQUAL           shift and go to state 37

    relation                       shift and go to state 31

state 53

    (1) statement -> PROC NAME ( . expression )
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    BOOL            shift and go to state 17
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    expression                     shift and go to state 72

state 54

    (31) expression -> NAME ( expression . )
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (23) expression -> expression . relation expression
    (17) relation -> . GT
    (18) relation -> . LT
    (19) relation -> . GTE
    (20) relation -> . LTE
    (21) relation -> . NE
    (22) relation -> . EQUAL

    )               shift and go to state 73
    +               shift and go to state 27
    -               shift and go to state 28
    *               shift and go to state 29
    /               shift and go to state 30
    GT              shift and go to state 32
    LT              shift and go to state 33
    GTE             shift and go to state 34
    LTE             shift and go to state 35
    NE              shift and go to state 36
    EQUAL           shift and go to state 37

    relation                       shift and go to state 31

state 55

    (26) expression -> ( expression ) .

    +               reduce using rule 26 (expression -> ( expression ) .)
    -               reduce using rule 26 (expression -> ( expression ) .)
    *               reduce using rule 26 (expression -> ( expression ) .)
    /               reduce using rule 26 (expression -> ( expression ) .)
    GT              reduce using rule 26 (expression -> ( expression ) .)
    LT              reduce using rule 26 (expression -> ( expression ) .)
    GTE             reduce using rule 26 (expression -> ( expression ) .)
    LTE             reduce using rule 26 (expression -> ( expression ) .)
    NE              reduce using rule 26 (expression -> ( expression ) .)
    EQUAL           reduce using rule 26 (expression -> ( expression ) .)
    WHEN            reduce using rule 26 (expression -> ( expression ) .)
    $end            reduce using rule 26 (expression -> ( expression ) .)
    )               reduce using rule 26 (expression -> ( expression ) .)
    SEMICOLON       reduce using rule 26 (expression -> ( expression ) .)
    THEN            reduce using rule 26 (expression -> ( expression ) .)
    RPAREN          reduce using rule 26 (expression -> ( expression ) .)


state 56

    (13) expression -> expression + expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (23) expression -> expression . relation expression
    (17) relation -> . GT
    (18) relation -> . LT
    (19) relation -> . GTE
    (20) relation -> . LTE
    (21) relation -> . NE
    (22) relation -> . EQUAL

    +               reduce using rule 13 (expression -> expression + expression .)
    -               reduce using rule 13 (expression -> expression + expression .)
    GT              reduce using rule 13 (expression -> expression + expression .)
    LT              reduce using rule 13 (expression -> expression + expression .)
    GTE             reduce using rule 13 (expression -> expression + expression .)
    LTE             reduce using rule 13 (expression -> expression + expression .)
    NE              reduce using rule 13 (expression -> expression + expression .)
    EQUAL           reduce using rule 13 (expression -> expression + expression .)
    WHEN            reduce using rule 13 (expression -> expression + expression .)
    $end            reduce using rule 13 (expression -> expression + expression .)
    )               reduce using rule 13 (expression -> expression + expression .)
    SEMICOLON       reduce using rule 13 (expression -> expression + expression .)
    THEN            reduce using rule 13 (expression -> expression + expression .)
    RPAREN          reduce using rule 13 (expression -> expression + expression .)
    *               shift and go to state 29
    /               shift and go to state 30

  ! *               [ reduce using rule 13 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 13 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 27 ]
  ! -               [ shift and go to state 28 ]
  ! GT              [ shift and go to state 32 ]
  ! LT              [ shift and go to state 33 ]
  ! GTE             [ shift and go to state 34 ]
  ! LTE             [ shift and go to state 35 ]
  ! NE              [ shift and go to state 36 ]
  ! EQUAL           [ shift and go to state 37 ]

    relation                       shift and go to state 31

state 57

    (14) expression -> expression - expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (23) expression -> expression . relation expression
    (17) relation -> . GT
    (18) relation -> . LT
    (19) relation -> . GTE
    (20) relation -> . LTE
    (21) relation -> . NE
    (22) relation -> . EQUAL

    +               reduce using rule 14 (expression -> expression - expression .)
    -               reduce using rule 14 (expression -> expression - expression .)
    GT              reduce using rule 14 (expression -> expression - expression .)
    LT              reduce using rule 14 (expression -> expression - expression .)
    GTE             reduce using rule 14 (expression -> expression - expression .)
    LTE             reduce using rule 14 (expression -> expression - expression .)
    NE              reduce using rule 14 (expression -> expression - expression .)
    EQUAL           reduce using rule 14 (expression -> expression - expression .)
    WHEN            reduce using rule 14 (expression -> expression - expression .)
    $end            reduce using rule 14 (expression -> expression - expression .)
    )               reduce using rule 14 (expression -> expression - expression .)
    SEMICOLON       reduce using rule 14 (expression -> expression - expression .)
    THEN            reduce using rule 14 (expression -> expression - expression .)
    RPAREN          reduce using rule 14 (expression -> expression - expression .)
    *               shift and go to state 29
    /               shift and go to state 30

  ! *               [ reduce using rule 14 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 14 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 27 ]
  ! -               [ shift and go to state 28 ]
  ! GT              [ shift and go to state 32 ]
  ! LT              [ shift and go to state 33 ]
  ! GTE             [ shift and go to state 34 ]
  ! LTE             [ shift and go to state 35 ]
  ! NE              [ shift and go to state 36 ]
  ! EQUAL           [ shift and go to state 37 ]

    relation                       shift and go to state 31

state 58

    (15) expression -> expression * expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (23) expression -> expression . relation expression
    (17) relation -> . GT
    (18) relation -> . LT
    (19) relation -> . GTE
    (20) relation -> . LTE
    (21) relation -> . NE
    (22) relation -> . EQUAL

    +               reduce using rule 15 (expression -> expression * expression .)
    -               reduce using rule 15 (expression -> expression * expression .)
    *               reduce using rule 15 (expression -> expression * expression .)
    /               reduce using rule 15 (expression -> expression * expression .)
    GT              reduce using rule 15 (expression -> expression * expression .)
    LT              reduce using rule 15 (expression -> expression * expression .)
    GTE             reduce using rule 15 (expression -> expression * expression .)
    LTE             reduce using rule 15 (expression -> expression * expression .)
    NE              reduce using rule 15 (expression -> expression * expression .)
    EQUAL           reduce using rule 15 (expression -> expression * expression .)
    WHEN            reduce using rule 15 (expression -> expression * expression .)
    $end            reduce using rule 15 (expression -> expression * expression .)
    )               reduce using rule 15 (expression -> expression * expression .)
    SEMICOLON       reduce using rule 15 (expression -> expression * expression .)
    THEN            reduce using rule 15 (expression -> expression * expression .)
    RPAREN          reduce using rule 15 (expression -> expression * expression .)

  ! +               [ shift and go to state 27 ]
  ! -               [ shift and go to state 28 ]
  ! *               [ shift and go to state 29 ]
  ! /               [ shift and go to state 30 ]
  ! GT              [ shift and go to state 32 ]
  ! LT              [ shift and go to state 33 ]
  ! GTE             [ shift and go to state 34 ]
  ! LTE             [ shift and go to state 35 ]
  ! NE              [ shift and go to state 36 ]
  ! EQUAL           [ shift and go to state 37 ]

    relation                       shift and go to state 31

state 59

    (16) expression -> expression / expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (23) expression -> expression . relation expression
    (17) relation -> . GT
    (18) relation -> . LT
    (19) relation -> . GTE
    (20) relation -> . LTE
    (21) relation -> . NE
    (22) relation -> . EQUAL

    +               reduce using rule 16 (expression -> expression / expression .)
    -               reduce using rule 16 (expression -> expression / expression .)
    *               reduce using rule 16 (expression -> expression / expression .)
    /               reduce using rule 16 (expression -> expression / expression .)
    GT              reduce using rule 16 (expression -> expression / expression .)
    LT              reduce using rule 16 (expression -> expression / expression .)
    GTE             reduce using rule 16 (expression -> expression / expression .)
    LTE             reduce using rule 16 (expression -> expression / expression .)
    NE              reduce using rule 16 (expression -> expression / expression .)
    EQUAL           reduce using rule 16 (expression -> expression / expression .)
    WHEN            reduce using rule 16 (expression -> expression / expression .)
    $end            reduce using rule 16 (expression -> expression / expression .)
    )               reduce using rule 16 (expression -> expression / expression .)
    SEMICOLON       reduce using rule 16 (expression -> expression / expression .)
    THEN            reduce using rule 16 (expression -> expression / expression .)
    RPAREN          reduce using rule 16 (expression -> expression / expression .)

  ! +               [ shift and go to state 27 ]
  ! -               [ shift and go to state 28 ]
  ! *               [ shift and go to state 29 ]
  ! /               [ shift and go to state 30 ]
  ! GT              [ shift and go to state 32 ]
  ! LT              [ shift and go to state 33 ]
  ! GTE             [ shift and go to state 34 ]
  ! LTE             [ shift and go to state 35 ]
  ! NE              [ shift and go to state 36 ]
  ! EQUAL           [ shift and go to state 37 ]

    relation                       shift and go to state 31

state 60

    (23) expression -> expression relation expression .
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (23) expression -> expression . relation expression
    (17) relation -> . GT
    (18) relation -> . LT
    (19) relation -> . GTE
    (20) relation -> . LTE
    (21) relation -> . NE
    (22) relation -> . EQUAL

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    WHEN            reduce using rule 23 (expression -> expression relation expression .)
    $end            reduce using rule 23 (expression -> expression relation expression .)
    )               reduce using rule 23 (expression -> expression relation expression .)
    SEMICOLON       reduce using rule 23 (expression -> expression relation expression .)
    THEN            reduce using rule 23 (expression -> expression relation expression .)
    RPAREN          reduce using rule 23 (expression -> expression relation expression .)
    +               shift and go to state 27
    -               shift and go to state 28
    *               shift and go to state 29
    /               shift and go to state 30
    GT              shift and go to state 32
    LT              shift and go to state 33
    GTE             shift and go to state 34
    LTE             shift and go to state 35
    NE              shift and go to state 36
    EQUAL           shift and go to state 37

  ! +               [ reduce using rule 23 (expression -> expression relation expression .) ]
  ! -               [ reduce using rule 23 (expression -> expression relation expression .) ]
  ! *               [ reduce using rule 23 (expression -> expression relation expression .) ]
  ! /               [ reduce using rule 23 (expression -> expression relation expression .) ]
  ! GT              [ reduce using rule 23 (expression -> expression relation expression .) ]
  ! LT              [ reduce using rule 23 (expression -> expression relation expression .) ]
  ! GTE             [ reduce using rule 23 (expression -> expression relation expression .) ]
  ! LTE             [ reduce using rule 23 (expression -> expression relation expression .) ]
  ! NE              [ reduce using rule 23 (expression -> expression relation expression .) ]
  ! EQUAL           [ reduce using rule 23 (expression -> expression relation expression .) ]

    relation                       shift and go to state 31

state 61

    (6) statement -> CASE WHEN expression . THEN statement
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (23) expression -> expression . relation expression
    (17) relation -> . GT
    (18) relation -> . LT
    (19) relation -> . GTE
    (20) relation -> . LTE
    (21) relation -> . NE
    (22) relation -> . EQUAL

    THEN            shift and go to state 74
    +               shift and go to state 27
    -               shift and go to state 28
    *               shift and go to state 29
    /               shift and go to state 30
    GT              shift and go to state 32
    LT              shift and go to state 33
    GTE             shift and go to state 34
    LTE             shift and go to state 35
    NE              shift and go to state 36
    EQUAL           shift and go to state 37

    relation                       shift and go to state 31

state 62

    (10) statement -> ALEATORIO LPAREN RPAREN .

    WHEN            reduce using rule 10 (statement -> ALEATORIO LPAREN RPAREN .)
    $end            reduce using rule 10 (statement -> ALEATORIO LPAREN RPAREN .)
    SEMICOLON       reduce using rule 10 (statement -> ALEATORIO LPAREN RPAREN .)


state 63

    (11) statement -> HORN LPAREN RPAREN .

    WHEN            reduce using rule 11 (statement -> HORN LPAREN RPAREN .)
    $end            reduce using rule 11 (statement -> HORN LPAREN RPAREN .)
    SEMICOLON       reduce using rule 11 (statement -> HORN LPAREN RPAREN .)


state 64

    (12) statement -> MOVER LPAREN MOVIMIENTO . RPAREN

    RPAREN          shift and go to state 75


state 65

    (24) expression -> ISTRUE ( expression . )
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (23) expression -> expression . relation expression
    (17) relation -> . GT
    (18) relation -> . LT
    (19) relation -> . GTE
    (20) relation -> . LTE
    (21) relation -> . NE
    (22) relation -> . EQUAL

    )               shift and go to state 76
    +               shift and go to state 27
    -               shift and go to state 28
    *               shift and go to state 29
    /               shift and go to state 30
    GT              shift and go to state 32
    LT              shift and go to state 33
    GTE             shift and go to state 34
    LTE             shift and go to state 35
    NE              shift and go to state 36
    EQUAL           shift and go to state 37

    relation                       shift and go to state 31

state 66

    (30) expression -> DEF ( NAME . , expression )

    ,               shift and go to state 77


state 67

    (32) expression -> ALTER ( NAME . , expression )

    ,               shift and go to state 78


state 68

    (33) expression -> REPEAT LPAREN expression . SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> REPEAT LPAREN expression . SEMICOLON RPAREN SEMICOLON
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (23) expression -> expression . relation expression
    (17) relation -> . GT
    (18) relation -> . LT
    (19) relation -> . GTE
    (20) relation -> . LTE
    (21) relation -> . NE
    (22) relation -> . EQUAL

    SEMICOLON       shift and go to state 79
    +               shift and go to state 27
    -               shift and go to state 28
    *               shift and go to state 29
    /               shift and go to state 30
    GT              shift and go to state 32
    LT              shift and go to state 33
    GTE             shift and go to state 34
    LTE             shift and go to state 35
    NE              shift and go to state 36
    EQUAL           shift and go to state 37

    relation                       shift and go to state 31

state 69

    (35) expression -> UNTIL LPAREN expression . RPAREN statement SEMICOLON
    (36) expression -> UNTIL LPAREN expression . RPAREN BOOL
    (37) expression -> UNTIL LPAREN expression . RPAREN BOOL SEMICOLON
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (23) expression -> expression . relation expression
    (17) relation -> . GT
    (18) relation -> . LT
    (19) relation -> . GTE
    (20) relation -> . LTE
    (21) relation -> . NE
    (22) relation -> . EQUAL

    RPAREN          shift and go to state 80
    +               shift and go to state 27
    -               shift and go to state 28
    *               shift and go to state 29
    /               shift and go to state 30
    GT              shift and go to state 32
    LT              shift and go to state 33
    GTE             shift and go to state 34
    LTE             shift and go to state 35
    NE              shift and go to state 36
    EQUAL           shift and go to state 37

    relation                       shift and go to state 31

state 70

    (38) expression -> WHILE BOOL LPAREN . expression RPAREN SEMICOLON
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    BOOL            shift and go to state 17
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    expression                     shift and go to state 81

state 71

    (8) statement -> statement WHEN expression THEN . statement
    (1) statement -> . PROC NAME ( expression )
    (2) statement -> . COMMENT
    (3) statement -> . PRINTLINE
    (4) statement -> . expression
    (5) statement -> . PRINT PRINTLINE
    (6) statement -> . CASE WHEN expression THEN statement
    (7) statement -> . CASE expression
    (8) statement -> . statement WHEN expression THEN statement
    (9) statement -> . ELSE statement
    (10) statement -> . ALEATORIO LPAREN RPAREN
    (11) statement -> . HORN LPAREN RPAREN
    (12) statement -> . MOVER LPAREN MOVIMIENTO RPAREN
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    PROC            shift and go to state 2
    COMMENT         shift and go to state 6
    PRINTLINE       shift and go to state 7
    PRINT           shift and go to state 8
    CASE            shift and go to state 9
    ELSE            shift and go to state 10
    ALEATORIO       shift and go to state 11
    HORN            shift and go to state 12
    MOVER           shift and go to state 13
    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    BOOL            shift and go to state 17
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    statement                      shift and go to state 82
    expression                     shift and go to state 5

state 72

    (1) statement -> PROC NAME ( expression . )
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (23) expression -> expression . relation expression
    (17) relation -> . GT
    (18) relation -> . LT
    (19) relation -> . GTE
    (20) relation -> . LTE
    (21) relation -> . NE
    (22) relation -> . EQUAL

    )               shift and go to state 83
    +               shift and go to state 27
    -               shift and go to state 28
    *               shift and go to state 29
    /               shift and go to state 30
    GT              shift and go to state 32
    LT              shift and go to state 33
    GTE             shift and go to state 34
    LTE             shift and go to state 35
    NE              shift and go to state 36
    EQUAL           shift and go to state 37

    relation                       shift and go to state 31

state 73

    (31) expression -> NAME ( expression ) .

    +               reduce using rule 31 (expression -> NAME ( expression ) .)
    -               reduce using rule 31 (expression -> NAME ( expression ) .)
    *               reduce using rule 31 (expression -> NAME ( expression ) .)
    /               reduce using rule 31 (expression -> NAME ( expression ) .)
    GT              reduce using rule 31 (expression -> NAME ( expression ) .)
    LT              reduce using rule 31 (expression -> NAME ( expression ) .)
    GTE             reduce using rule 31 (expression -> NAME ( expression ) .)
    LTE             reduce using rule 31 (expression -> NAME ( expression ) .)
    NE              reduce using rule 31 (expression -> NAME ( expression ) .)
    EQUAL           reduce using rule 31 (expression -> NAME ( expression ) .)
    WHEN            reduce using rule 31 (expression -> NAME ( expression ) .)
    $end            reduce using rule 31 (expression -> NAME ( expression ) .)
    )               reduce using rule 31 (expression -> NAME ( expression ) .)
    SEMICOLON       reduce using rule 31 (expression -> NAME ( expression ) .)
    THEN            reduce using rule 31 (expression -> NAME ( expression ) .)
    RPAREN          reduce using rule 31 (expression -> NAME ( expression ) .)


state 74

    (6) statement -> CASE WHEN expression THEN . statement
    (1) statement -> . PROC NAME ( expression )
    (2) statement -> . COMMENT
    (3) statement -> . PRINTLINE
    (4) statement -> . expression
    (5) statement -> . PRINT PRINTLINE
    (6) statement -> . CASE WHEN expression THEN statement
    (7) statement -> . CASE expression
    (8) statement -> . statement WHEN expression THEN statement
    (9) statement -> . ELSE statement
    (10) statement -> . ALEATORIO LPAREN RPAREN
    (11) statement -> . HORN LPAREN RPAREN
    (12) statement -> . MOVER LPAREN MOVIMIENTO RPAREN
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    PROC            shift and go to state 2
    COMMENT         shift and go to state 6
    PRINTLINE       shift and go to state 7
    PRINT           shift and go to state 8
    CASE            shift and go to state 9
    ELSE            shift and go to state 10
    ALEATORIO       shift and go to state 11
    HORN            shift and go to state 12
    MOVER           shift and go to state 13
    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    BOOL            shift and go to state 17
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    expression                     shift and go to state 5
    statement                      shift and go to state 84

state 75

    (12) statement -> MOVER LPAREN MOVIMIENTO RPAREN .

    WHEN            reduce using rule 12 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    $end            reduce using rule 12 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)
    SEMICOLON       reduce using rule 12 (statement -> MOVER LPAREN MOVIMIENTO RPAREN .)


state 76

    (24) expression -> ISTRUE ( expression ) .

    +               reduce using rule 24 (expression -> ISTRUE ( expression ) .)
    -               reduce using rule 24 (expression -> ISTRUE ( expression ) .)
    *               reduce using rule 24 (expression -> ISTRUE ( expression ) .)
    /               reduce using rule 24 (expression -> ISTRUE ( expression ) .)
    GT              reduce using rule 24 (expression -> ISTRUE ( expression ) .)
    LT              reduce using rule 24 (expression -> ISTRUE ( expression ) .)
    GTE             reduce using rule 24 (expression -> ISTRUE ( expression ) .)
    LTE             reduce using rule 24 (expression -> ISTRUE ( expression ) .)
    NE              reduce using rule 24 (expression -> ISTRUE ( expression ) .)
    EQUAL           reduce using rule 24 (expression -> ISTRUE ( expression ) .)
    WHEN            reduce using rule 24 (expression -> ISTRUE ( expression ) .)
    $end            reduce using rule 24 (expression -> ISTRUE ( expression ) .)
    )               reduce using rule 24 (expression -> ISTRUE ( expression ) .)
    SEMICOLON       reduce using rule 24 (expression -> ISTRUE ( expression ) .)
    THEN            reduce using rule 24 (expression -> ISTRUE ( expression ) .)
    RPAREN          reduce using rule 24 (expression -> ISTRUE ( expression ) .)


state 77

    (30) expression -> DEF ( NAME , . expression )
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    BOOL            shift and go to state 17
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    expression                     shift and go to state 85

state 78

    (32) expression -> ALTER ( NAME , . expression )
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    BOOL            shift and go to state 17
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    expression                     shift and go to state 86

state 79

    (33) expression -> REPEAT LPAREN expression SEMICOLON . BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> REPEAT LPAREN expression SEMICOLON . RPAREN SEMICOLON

    BREAK           shift and go to state 87
    RPAREN          shift and go to state 88


state 80

    (35) expression -> UNTIL LPAREN expression RPAREN . statement SEMICOLON
    (36) expression -> UNTIL LPAREN expression RPAREN . BOOL
    (37) expression -> UNTIL LPAREN expression RPAREN . BOOL SEMICOLON
    (1) statement -> . PROC NAME ( expression )
    (2) statement -> . COMMENT
    (3) statement -> . PRINTLINE
    (4) statement -> . expression
    (5) statement -> . PRINT PRINTLINE
    (6) statement -> . CASE WHEN expression THEN statement
    (7) statement -> . CASE expression
    (8) statement -> . statement WHEN expression THEN statement
    (9) statement -> . ELSE statement
    (10) statement -> . ALEATORIO LPAREN RPAREN
    (11) statement -> . HORN LPAREN RPAREN
    (12) statement -> . MOVER LPAREN MOVIMIENTO RPAREN
    (13) expression -> . expression + expression
    (14) expression -> . expression - expression
    (15) expression -> . expression * expression
    (16) expression -> . expression / expression
    (23) expression -> . expression relation expression
    (24) expression -> . ISTRUE ( expression )
    (25) expression -> . - expression
    (26) expression -> . ( expression )
    (27) expression -> . INTEGER
    (28) expression -> . BOOL
    (29) expression -> . NAME
    (30) expression -> . DEF ( NAME , expression )
    (31) expression -> . NAME ( expression )
    (32) expression -> . ALTER ( NAME , expression )
    (33) expression -> . REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON
    (34) expression -> . REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON
    (35) expression -> . UNTIL LPAREN expression RPAREN statement SEMICOLON
    (36) expression -> . UNTIL LPAREN expression RPAREN BOOL
    (37) expression -> . UNTIL LPAREN expression RPAREN BOOL SEMICOLON
    (38) expression -> . WHILE BOOL LPAREN expression RPAREN SEMICOLON

    BOOL            shift and go to state 90
    PROC            shift and go to state 2
    COMMENT         shift and go to state 6
    PRINTLINE       shift and go to state 7
    PRINT           shift and go to state 8
    CASE            shift and go to state 9
    ELSE            shift and go to state 10
    ALEATORIO       shift and go to state 11
    HORN            shift and go to state 12
    MOVER           shift and go to state 13
    ISTRUE          shift and go to state 15
    -               shift and go to state 14
    (               shift and go to state 4
    INTEGER         shift and go to state 16
    NAME            shift and go to state 3
    DEF             shift and go to state 18
    ALTER           shift and go to state 19
    REPEAT          shift and go to state 20
    UNTIL           shift and go to state 21
    WHILE           shift and go to state 22

    expression                     shift and go to state 5
    statement                      shift and go to state 89

state 81

    (38) expression -> WHILE BOOL LPAREN expression . RPAREN SEMICOLON
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (23) expression -> expression . relation expression
    (17) relation -> . GT
    (18) relation -> . LT
    (19) relation -> . GTE
    (20) relation -> . LTE
    (21) relation -> . NE
    (22) relation -> . EQUAL

    RPAREN          shift and go to state 91
    +               shift and go to state 27
    -               shift and go to state 28
    *               shift and go to state 29
    /               shift and go to state 30
    GT              shift and go to state 32
    LT              shift and go to state 33
    GTE             shift and go to state 34
    LTE             shift and go to state 35
    NE              shift and go to state 36
    EQUAL           shift and go to state 37

    relation                       shift and go to state 31

state 82

    (8) statement -> statement WHEN expression THEN statement .
    (8) statement -> statement . WHEN expression THEN statement

  ! shift/reduce conflict for WHEN resolved as shift
    $end            reduce using rule 8 (statement -> statement WHEN expression THEN statement .)
    SEMICOLON       reduce using rule 8 (statement -> statement WHEN expression THEN statement .)
    WHEN            shift and go to state 23

  ! WHEN            [ reduce using rule 8 (statement -> statement WHEN expression THEN statement .) ]


state 83

    (1) statement -> PROC NAME ( expression ) .

    WHEN            reduce using rule 1 (statement -> PROC NAME ( expression ) .)
    $end            reduce using rule 1 (statement -> PROC NAME ( expression ) .)
    SEMICOLON       reduce using rule 1 (statement -> PROC NAME ( expression ) .)


state 84

    (6) statement -> CASE WHEN expression THEN statement .
    (8) statement -> statement . WHEN expression THEN statement

  ! shift/reduce conflict for WHEN resolved as shift
    $end            reduce using rule 6 (statement -> CASE WHEN expression THEN statement .)
    SEMICOLON       reduce using rule 6 (statement -> CASE WHEN expression THEN statement .)
    WHEN            shift and go to state 23

  ! WHEN            [ reduce using rule 6 (statement -> CASE WHEN expression THEN statement .) ]


state 85

    (30) expression -> DEF ( NAME , expression . )
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (23) expression -> expression . relation expression
    (17) relation -> . GT
    (18) relation -> . LT
    (19) relation -> . GTE
    (20) relation -> . LTE
    (21) relation -> . NE
    (22) relation -> . EQUAL

    )               shift and go to state 92
    +               shift and go to state 27
    -               shift and go to state 28
    *               shift and go to state 29
    /               shift and go to state 30
    GT              shift and go to state 32
    LT              shift and go to state 33
    GTE             shift and go to state 34
    LTE             shift and go to state 35
    NE              shift and go to state 36
    EQUAL           shift and go to state 37

    relation                       shift and go to state 31

state 86

    (32) expression -> ALTER ( NAME , expression . )
    (13) expression -> expression . + expression
    (14) expression -> expression . - expression
    (15) expression -> expression . * expression
    (16) expression -> expression . / expression
    (23) expression -> expression . relation expression
    (17) relation -> . GT
    (18) relation -> . LT
    (19) relation -> . GTE
    (20) relation -> . LTE
    (21) relation -> . NE
    (22) relation -> . EQUAL

    )               shift and go to state 93
    +               shift and go to state 27
    -               shift and go to state 28
    *               shift and go to state 29
    /               shift and go to state 30
    GT              shift and go to state 32
    LT              shift and go to state 33
    GTE             shift and go to state 34
    LTE             shift and go to state 35
    NE              shift and go to state 36
    EQUAL           shift and go to state 37

    relation                       shift and go to state 31

state 87

    (33) expression -> REPEAT LPAREN expression SEMICOLON BREAK . SEMICOLON RPAREN SEMICOLON

    SEMICOLON       shift and go to state 94


state 88

    (34) expression -> REPEAT LPAREN expression SEMICOLON RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 95


state 89

    (35) expression -> UNTIL LPAREN expression RPAREN statement . SEMICOLON
    (8) statement -> statement . WHEN expression THEN statement

    SEMICOLON       shift and go to state 96
    WHEN            shift and go to state 23


state 90

    (36) expression -> UNTIL LPAREN expression RPAREN BOOL .
    (37) expression -> UNTIL LPAREN expression RPAREN BOOL . SEMICOLON
    (28) expression -> BOOL .

  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! reduce/reduce conflict for + resolved using rule 28 (expression -> BOOL .)
  ! reduce/reduce conflict for - resolved using rule 28 (expression -> BOOL .)
  ! reduce/reduce conflict for * resolved using rule 28 (expression -> BOOL .)
  ! reduce/reduce conflict for / resolved using rule 28 (expression -> BOOL .)
  ! reduce/reduce conflict for GT resolved using rule 28 (expression -> BOOL .)
  ! reduce/reduce conflict for LT resolved using rule 28 (expression -> BOOL .)
  ! reduce/reduce conflict for GTE resolved using rule 28 (expression -> BOOL .)
  ! reduce/reduce conflict for LTE resolved using rule 28 (expression -> BOOL .)
  ! reduce/reduce conflict for NE resolved using rule 28 (expression -> BOOL .)
  ! reduce/reduce conflict for EQUAL resolved using rule 28 (expression -> BOOL .)
  ! shift/reduce conflict for SEMICOLON resolved as shift
  ! reduce/reduce conflict for WHEN resolved using rule 28 (expression -> BOOL .)
    $end            reduce using rule 36 (expression -> UNTIL LPAREN expression RPAREN BOOL .)
    )               reduce using rule 36 (expression -> UNTIL LPAREN expression RPAREN BOOL .)
    THEN            reduce using rule 36 (expression -> UNTIL LPAREN expression RPAREN BOOL .)
    RPAREN          reduce using rule 36 (expression -> UNTIL LPAREN expression RPAREN BOOL .)
    SEMICOLON       shift and go to state 97
    +               reduce using rule 28 (expression -> BOOL .)
    -               reduce using rule 28 (expression -> BOOL .)
    *               reduce using rule 28 (expression -> BOOL .)
    /               reduce using rule 28 (expression -> BOOL .)
    GT              reduce using rule 28 (expression -> BOOL .)
    LT              reduce using rule 28 (expression -> BOOL .)
    GTE             reduce using rule 28 (expression -> BOOL .)
    LTE             reduce using rule 28 (expression -> BOOL .)
    NE              reduce using rule 28 (expression -> BOOL .)
    EQUAL           reduce using rule 28 (expression -> BOOL .)
    WHEN            reduce using rule 28 (expression -> BOOL .)

  ! +               [ reduce using rule 36 (expression -> UNTIL LPAREN expression RPAREN BOOL .) ]
  ! -               [ reduce using rule 36 (expression -> UNTIL LPAREN expression RPAREN BOOL .) ]
  ! *               [ reduce using rule 36 (expression -> UNTIL LPAREN expression RPAREN BOOL .) ]
  ! /               [ reduce using rule 36 (expression -> UNTIL LPAREN expression RPAREN BOOL .) ]
  ! GT              [ reduce using rule 36 (expression -> UNTIL LPAREN expression RPAREN BOOL .) ]
  ! LT              [ reduce using rule 36 (expression -> UNTIL LPAREN expression RPAREN BOOL .) ]
  ! GTE             [ reduce using rule 36 (expression -> UNTIL LPAREN expression RPAREN BOOL .) ]
  ! LTE             [ reduce using rule 36 (expression -> UNTIL LPAREN expression RPAREN BOOL .) ]
  ! NE              [ reduce using rule 36 (expression -> UNTIL LPAREN expression RPAREN BOOL .) ]
  ! EQUAL           [ reduce using rule 36 (expression -> UNTIL LPAREN expression RPAREN BOOL .) ]
  ! WHEN            [ reduce using rule 36 (expression -> UNTIL LPAREN expression RPAREN BOOL .) ]
  ! SEMICOLON       [ reduce using rule 36 (expression -> UNTIL LPAREN expression RPAREN BOOL .) ]
  ! SEMICOLON       [ reduce using rule 28 (expression -> BOOL .) ]


state 91

    (38) expression -> WHILE BOOL LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 98


state 92

    (30) expression -> DEF ( NAME , expression ) .

    +               reduce using rule 30 (expression -> DEF ( NAME , expression ) .)
    -               reduce using rule 30 (expression -> DEF ( NAME , expression ) .)
    *               reduce using rule 30 (expression -> DEF ( NAME , expression ) .)
    /               reduce using rule 30 (expression -> DEF ( NAME , expression ) .)
    GT              reduce using rule 30 (expression -> DEF ( NAME , expression ) .)
    LT              reduce using rule 30 (expression -> DEF ( NAME , expression ) .)
    GTE             reduce using rule 30 (expression -> DEF ( NAME , expression ) .)
    LTE             reduce using rule 30 (expression -> DEF ( NAME , expression ) .)
    NE              reduce using rule 30 (expression -> DEF ( NAME , expression ) .)
    EQUAL           reduce using rule 30 (expression -> DEF ( NAME , expression ) .)
    WHEN            reduce using rule 30 (expression -> DEF ( NAME , expression ) .)
    $end            reduce using rule 30 (expression -> DEF ( NAME , expression ) .)
    )               reduce using rule 30 (expression -> DEF ( NAME , expression ) .)
    SEMICOLON       reduce using rule 30 (expression -> DEF ( NAME , expression ) .)
    THEN            reduce using rule 30 (expression -> DEF ( NAME , expression ) .)
    RPAREN          reduce using rule 30 (expression -> DEF ( NAME , expression ) .)


state 93

    (32) expression -> ALTER ( NAME , expression ) .

    +               reduce using rule 32 (expression -> ALTER ( NAME , expression ) .)
    -               reduce using rule 32 (expression -> ALTER ( NAME , expression ) .)
    *               reduce using rule 32 (expression -> ALTER ( NAME , expression ) .)
    /               reduce using rule 32 (expression -> ALTER ( NAME , expression ) .)
    GT              reduce using rule 32 (expression -> ALTER ( NAME , expression ) .)
    LT              reduce using rule 32 (expression -> ALTER ( NAME , expression ) .)
    GTE             reduce using rule 32 (expression -> ALTER ( NAME , expression ) .)
    LTE             reduce using rule 32 (expression -> ALTER ( NAME , expression ) .)
    NE              reduce using rule 32 (expression -> ALTER ( NAME , expression ) .)
    EQUAL           reduce using rule 32 (expression -> ALTER ( NAME , expression ) .)
    WHEN            reduce using rule 32 (expression -> ALTER ( NAME , expression ) .)
    $end            reduce using rule 32 (expression -> ALTER ( NAME , expression ) .)
    )               reduce using rule 32 (expression -> ALTER ( NAME , expression ) .)
    SEMICOLON       reduce using rule 32 (expression -> ALTER ( NAME , expression ) .)
    THEN            reduce using rule 32 (expression -> ALTER ( NAME , expression ) .)
    RPAREN          reduce using rule 32 (expression -> ALTER ( NAME , expression ) .)


state 94

    (33) expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON . RPAREN SEMICOLON

    RPAREN          shift and go to state 99


state 95

    (34) expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .

    +               reduce using rule 34 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    -               reduce using rule 34 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    *               reduce using rule 34 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    /               reduce using rule 34 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    GT              reduce using rule 34 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    LT              reduce using rule 34 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    GTE             reduce using rule 34 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    LTE             reduce using rule 34 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    NE              reduce using rule 34 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    EQUAL           reduce using rule 34 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    WHEN            reduce using rule 34 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    $end            reduce using rule 34 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    )               reduce using rule 34 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 34 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    THEN            reduce using rule 34 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)
    RPAREN          reduce using rule 34 (expression -> REPEAT LPAREN expression SEMICOLON RPAREN SEMICOLON .)


state 96

    (35) expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .

    +               reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    -               reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    *               reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    /               reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    GT              reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    LT              reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    GTE             reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    LTE             reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    NE              reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    EQUAL           reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    WHEN            reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    $end            reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    )               reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    SEMICOLON       reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    THEN            reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)
    RPAREN          reduce using rule 35 (expression -> UNTIL LPAREN expression RPAREN statement SEMICOLON .)


state 97

    (37) expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .

    +               reduce using rule 37 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    -               reduce using rule 37 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    *               reduce using rule 37 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    /               reduce using rule 37 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    GT              reduce using rule 37 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    LT              reduce using rule 37 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    GTE             reduce using rule 37 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    LTE             reduce using rule 37 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    NE              reduce using rule 37 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    EQUAL           reduce using rule 37 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    WHEN            reduce using rule 37 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    $end            reduce using rule 37 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    )               reduce using rule 37 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    SEMICOLON       reduce using rule 37 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    THEN            reduce using rule 37 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)
    RPAREN          reduce using rule 37 (expression -> UNTIL LPAREN expression RPAREN BOOL SEMICOLON .)


state 98

    (38) expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .

    +               reduce using rule 38 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    -               reduce using rule 38 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    *               reduce using rule 38 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    /               reduce using rule 38 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    GT              reduce using rule 38 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    LT              reduce using rule 38 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    GTE             reduce using rule 38 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    LTE             reduce using rule 38 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    NE              reduce using rule 38 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    EQUAL           reduce using rule 38 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    WHEN            reduce using rule 38 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 38 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    )               reduce using rule 38 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 38 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    THEN            reduce using rule 38 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)
    RPAREN          reduce using rule 38 (expression -> WHILE BOOL LPAREN expression RPAREN SEMICOLON .)


state 99

    (33) expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 100


state 100

    (33) expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .

    +               reduce using rule 33 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    -               reduce using rule 33 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    *               reduce using rule 33 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    /               reduce using rule 33 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    GT              reduce using rule 33 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    LT              reduce using rule 33 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    GTE             reduce using rule 33 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    LTE             reduce using rule 33 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    NE              reduce using rule 33 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    EQUAL           reduce using rule 33 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    WHEN            reduce using rule 33 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    $end            reduce using rule 33 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    )               reduce using rule 33 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 33 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    THEN            reduce using rule 33 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)
    RPAREN          reduce using rule 33 (expression -> REPEAT LPAREN expression SEMICOLON BREAK SEMICOLON RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for WHEN in state 41 resolved as shift
WARNING: shift/reduce conflict for + in state 60 resolved as shift
WARNING: shift/reduce conflict for - in state 60 resolved as shift
WARNING: shift/reduce conflict for * in state 60 resolved as shift
WARNING: shift/reduce conflict for / in state 60 resolved as shift
WARNING: shift/reduce conflict for GT in state 60 resolved as shift
WARNING: shift/reduce conflict for LT in state 60 resolved as shift
WARNING: shift/reduce conflict for GTE in state 60 resolved as shift
WARNING: shift/reduce conflict for LTE in state 60 resolved as shift
WARNING: shift/reduce conflict for NE in state 60 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 60 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 82 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 84 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 90 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 90 resolved as shift
WARNING: reduce/reduce conflict in state 90 resolved using rule (expression -> BOOL)
WARNING: rejected rule (expression -> UNTIL LPAREN expression RPAREN BOOL) in state 90
